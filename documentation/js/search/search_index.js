var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,2.202,1,2.83]],["body/controllers/AppController.html",[0,3.736,1,4.801,2,3.303,3,0.199,4,0.199,5,0.143,6,4.417,7,0.243,8,0.019,9,0.448,10,4.71,11,5.138,12,0.199,13,0.398,14,2.261,15,0.93,16,4.417,17,1.934,18,2.143,19,5.138,20,0.012,21,0.015,22,0.012]],["title/modules/AppModule.html",[23,2.057,24,2.575]],["body/modules/AppModule.html",[3,0.173,4,0.173,5,0.125,7,0.268,8,0.019,9,0.39,12,0.173,13,0.346,20,0.011,21,0.014,22,0.011,23,3.197,24,4.935,25,2.667,26,3.423,27,3.841,28,3.841,29,4.545,30,4.003,31,3.119,32,3.119,33,4.468,34,4.399,35,4.468,36,4.468,37,3.841,38,4.468,39,2.078,40,4.468,41,4.468,42,4.468,43,4.468,44,3.119,45,4.468,46,4.468,47,4.468,48,4.468,49,4.468,50,2.825,51,3.427,52,3.119,53,4.468]],["title/injectables/AppService.html",[10,2.575,54,1.198]],["body/injectables/AppService.html",[3,0.207,4,0.207,5,0.149,7,0.207,8,0.019,9,0.466,10,4.473,12,0.207,13,0.414,16,4.593,17,2.011,18,2.229,20,0.013,21,0.016,22,0.013,54,2.08,55,2.632,56,4.593,57,5.344,58,5.344]],["title/classes/CreatePatientCommand.html",[13,0.286,59,2.372]],["body/classes/CreatePatientCommand.html",[3,0.167,4,0.167,5,0.12,7,0.217,8,0.018,12,0.167,13,0.334,15,1.268,20,0.01,21,0.014,22,0.01,59,3.601,60,0.528,61,5.056,62,3.008,63,1.068,64,3.716,65,0.267,66,1.123,67,2.571,68,1.438,69,1.193,70,0.666,71,2.403,72,1.664,73,2.015,74,0.543,75,3.306,76,0.561,77,0.528,78,0.628,79,0.561,80,4.816,81,1,82,0.703,83,3.008,84,0.703,85,3.008,86,2.123,87,1.707,88,3.008,89,2.403]],["title/classes/CreatePatientHandler.html",[13,0.286,90,2.575]],["body/classes/CreatePatientHandler.html",[3,0.135,4,0.135,5,0.097,7,0.234,8,0.019,9,0.303,12,0.135,13,0.269,15,0.877,20,0.008,21,0.012,22,0.008,23,1.935,59,3.878,60,0.425,63,0.923,65,0.215,66,0.97,68,1.019,69,0.628,70,0.748,74,0.486,76,0.63,77,0.593,78,0.488,79,0.63,82,0.566,84,0.566,86,1.709,87,2.208,90,3.892,91,4.628,92,2.422,93,3.328,94,0.927,95,1.179,96,2.056,97,2.699,98,1.935,99,2.972,100,3.601,101,3.364,102,4.841,103,2.972,104,2.071,105,2.071,106,1.494,107,5.576,108,2.89,109,3.47,110,0.845,111,1.816,112,2.983,113,2.422,114,2.231,115,3.47,116,2.071,117,2.098,118,3.714,119,3.47,120,1.567,121,1.935,122,2.662,123,3.47,124,2.983,125,2.071,126,3.47,127,2.983,128,2.231,129,2.983,130,1.527,131,3.47,132,1.242,133,2.662]],["title/classes/CreatePatientViewCommand.html",[13,0.286,134,2.372]],["body/classes/CreatePatientViewCommand.html",[3,0.173,4,0.173,5,0.124,7,0.245,8,0.018,9,0.389,12,0.173,13,0.345,15,1.145,20,0.011,21,0.014,22,0.011,60,0.546,61,4.85,63,1.09,64,3.774,65,0.276,66,1.147,67,2.153,70,0.688,74,0.499,76,0.58,77,0.546,78,0.577,79,0.58,81,1.034,82,0.726,83,3.108,84,1.088,85,3.108,86,2.194,87,1.763,88,3.108,89,2.483,94,0.651,134,4.064,135,3.108,136,2.632,137,3.416,138,4.453,139,4.453,140,4.453]],["title/classes/CreatePatientViewHandler.html",[13,0.286,141,2.575]],["body/classes/CreatePatientViewHandler.html",[3,0.148,4,0.148,5,0.106,7,0.268,8,0.019,9,0.333,12,0.148,13,0.296,15,0.936,20,0.009,21,0.013,22,0.009,60,0.468,63,0.985,65,0.236,70,0.798,74,0.451,76,0.673,77,0.633,78,0.521,79,0.673,81,0.886,82,0.622,84,1.07,87,1.512,91,4.496,93,3.498,94,0.558,95,1.259,96,1.997,97,2.882,98,2.128,100,3.498,101,3.502,103,2.546,108,3.085,110,0.93,111,1.997,112,3.281,117,1.945,120,1.073,125,2.279,130,1.68,134,4.038,141,3.608,142,2.664,143,3.286,144,3.817,145,3.817,146,3.268,147,2.664,148,2.664,149,2.664,150,2.128,151,2.664,152,2.664,153,2.664,154,3.817,155,3.817,156,2.928,157,2.928,158,2.928]],["title/modules/DatabaseModule.html",[23,2.057,159,2.372]],["body/modules/DatabaseModule.html",[2,2.692,3,0.162,4,0.162,5,0.117,7,0.263,8,0.019,9,0.365,12,0.162,13,0.324,20,0.01,21,0.013,22,0.01,23,3.066,25,2.5,26,3.282,30,3.838,31,2.923,32,2.923,34,3.213,159,4.715,160,3.6,161,3.6,162,3.6,163,2.535,164,3.459,165,4.188,166,4.727,167,5.499,168,4.285,169,3.6,170,2.5,171,2.063,172,4.285,173,3.6]],["title/classes/DeletePatientCommand.html",[13,0.286,174,2.372]],["body/classes/DeletePatientCommand.html",[3,0.182,4,0.182,5,0.131,7,0.23,8,0.018,12,0.182,13,0.364,15,1.175,20,0.011,21,0.014,22,0.011,60,0.576,62,3.283,63,1.129,64,3.872,65,0.291,66,1.187,67,2.441,70,0.915,72,1.808,74,0.517,75,3.608,76,0.612,77,0.576,78,0.597,79,0.612,80,4.044,81,1.092,82,0.767,174,3.809,175,4.976,176,4.704]],["title/classes/DeletePatientHandler.html",[13,0.286,177,2.575]],["body/classes/DeletePatientHandler.html",[3,0.156,4,0.156,5,0.112,7,0.249,8,0.019,9,0.35,12,0.156,13,0.311,15,0.968,20,0.01,21,0.013,22,0.01,60,0.492,63,1.018,65,0.249,70,0.825,72,0.977,74,0.466,76,0.696,77,0.655,78,0.539,79,0.696,82,0.654,84,0.654,87,2.116,92,2.8,93,3.587,94,0.586,95,1.302,96,2.048,97,2.98,98,2.237,99,3.157,100,3.587,101,3.573,103,2.633,108,3.19,110,0.977,111,2.099,113,2.8,114,2.579,117,2.011,120,1.503,125,2.395,130,1.766,133,3.078,174,4.291,177,3.731,178,4.61,179,3.449,180,3.449,181,3.449,182,4.012,183,4.012,184,4.012]],["title/classes/DeletePatientViewCommand.html",[13,0.286,185,2.372]],["body/classes/DeletePatientViewCommand.html",[3,0.171,4,0.171,5,0.123,7,0.258,8,0.018,9,0.385,12,0.171,13,0.342,15,1.14,20,0.011,21,0.014,22,0.011,60,0.54,63,1.083,64,3.756,65,0.273,66,1.139,67,2.14,70,0.681,74,0.496,76,0.574,77,0.54,78,0.573,79,0.574,81,1.32,82,0.719,83,3.078,84,1.122,85,3.078,86,2.172,87,1.746,88,3.078,89,2.458,94,0.644,135,3.078,136,2.627,137,3.382,175,4.827,185,3.655,186,3.79,187,3.79]],["title/classes/DeletePatientViewHandler.html",[13,0.286,188,2.575]],["body/classes/DeletePatientViewHandler.html",[3,0.151,4,0.151,5,0.108,7,0.264,8,0.019,9,0.339,12,0.151,13,0.301,14,1.709,15,0.947,20,0.009,21,0.013,22,0.009,60,0.476,63,0.997,65,0.241,70,0.6,74,0.456,76,0.681,77,0.641,78,0.527,79,0.681,82,0.633,84,1.031,87,1.538,93,3.529,94,0.568,95,1.274,96,2.015,97,2.916,98,2.165,100,3.529,101,3.527,103,2.576,108,3.122,110,0.946,111,2.032,117,1.462,120,1.092,125,2.318,130,1.709,142,2.711,143,3.309,146,3.297,147,2.711,148,2.711,149,2.711,150,2.165,151,2.711,152,2.711,153,2.711,156,2.979,157,2.979,158,2.979,178,4.535,181,3.339,185,4.066,188,3.65,189,3.339,190,3.339,191,3.884,192,3.884]],["title/classes/EventDto.html",[13,0.286,136,1.321]],["body/classes/EventDto.html",[3,0.134,4,0.134,5,0.096,7,0.216,8,0.019,9,0.301,12,0.254,13,0.508,15,1.306,17,2.092,20,0.008,21,0.012,22,0.008,39,1.606,50,2.965,60,0.423,65,0.214,66,0.967,68,1.171,69,1.007,72,1.354,73,1.64,74,0.421,78,0.486,84,0.981,94,0.504,106,0.925,121,1.925,136,1.727,193,1.925,194,2.586,195,2.524,196,4.101,197,3.453,198,3.453,199,3.78,200,2.965,201,3.658,202,2.012,203,3.319,204,3.593,205,2.319,206,2.909,207,1.701,208,1.701,209,2.061,210,2.061,211,2.061,212,2.879,213,2.69,214,1.806,215,2.061,216,2.061,217,2.739,218,2.061,219,2.061,220,1.925,221,2.061,222,1.701,223,1.606]],["title/classes/FindAllPatientsHandler.html",[13,0.286,224,2.575]],["body/classes/FindAllPatientsHandler.html",[3,0.145,4,0.145,5,0.104,7,0.267,8,0.019,9,0.326,12,0.197,13,0.289,18,1.557,20,0.009,21,0.012,22,0.009,60,0.457,63,0.97,65,0.231,66,1.02,70,0.786,73,1.101,74,0.505,76,0.663,77,0.624,78,0.513,79,0.663,81,0.866,82,0.608,94,0.909,95,1.24,96,1.974,97,2.838,98,2.081,99,3.065,101,2.081,103,2.507,104,2.228,105,2.228,106,1.364,110,0.909,114,2.399,117,1.404,150,2.081,163,1.272,224,3.553,225,5.349,226,3.208,227,5.793,228,5.09,229,5.09,230,5.09,231,4.186,232,3.732,233,2.863,234,2.081,235,3.208,236,2.081,237,3.208,238,3.732,239,3.732,240,3.208,241,2.863,242,2.863,243,3.732,244,3.732,245,3.732,246,2.399,247,3.732,248,2.605,249,1.952]],["title/classes/FindAllPatientsQuery.html",[13,0.286,231,2.372]],["body/classes/FindAllPatientsQuery.html",[3,0.213,4,0.213,5,0.153,7,0.213,8,0.018,12,0.213,13,0.426,20,0.013,21,0.016,22,0.013,60,0.674,63,1.242,82,0.896,231,4.19,237,5.972,250,4.726,251,4.726]],["title/classes/KafkaBodyDto.html",[13,0.286,194,1.716]],["body/classes/KafkaBodyDto.html",[3,0.123,4,0.123,5,0.088,7,0.205,8,0.019,9,0.276,12,0.247,13,0.494,15,1.322,17,2.399,20,0.008,21,0.011,22,0.008,39,1.469,50,3.234,60,0.387,65,0.196,66,0.908,68,0.665,69,0.572,72,1.103,73,1.806,74,0.505,78,0.583,84,1.039,94,0.462,106,0.847,121,1.761,136,1.131,193,1.761,194,2.463,195,3.026,196,3.918,199,3.656,200,2.849,201,3.554,202,1.889,203,3.161,204,3.656,205,2.555,206,3.026,207,2.608,208,2.608,209,1.885,210,1.885,211,1.885,212,2.704,213,2.525,214,1.652,215,1.885,216,1.885,217,2.849,218,1.885,219,1.885,220,1.761,221,1.885,222,1.556,223,2.463,252,3.159,253,2.205,254,4.062,255,3.159,256,3.162,257,2.423,258,2.423]],["title/injectables/KafkaService.html",[54,1.198,163,1.257]],["body/injectables/KafkaService.html",[3,0.063,4,0.063,5,0.045,7,0.173,8,0.019,9,0.141,12,0.063,13,0.125,17,0.608,18,1.44,20,0.004,21,0.007,22,0.004,50,0.796,51,1.239,52,1.128,54,0.873,55,0.796,63,0.308,65,0.1,66,0.539,67,2.265,68,1.016,69,1.007,70,0.533,72,1.089,74,0.553,76,0.582,77,0.548,78,0.486,79,0.582,81,0.375,94,0.588,95,0.655,96,2.327,104,2.061,105,3.053,106,1.079,110,1.305,117,2.093,118,4.109,120,1.612,130,2.649,132,1.441,136,1.236,150,0.901,163,0.916,194,0.751,200,0.796,205,1.122,234,0.901,242,3.428,259,1.389,260,4.824,261,4.824,262,3.453,263,5.115,264,2.689,265,2.689,266,2.689,267,4.025,268,2.311,269,4.147,270,4.147,271,2.689,272,2.689,273,2.689,274,1.616,275,2.689,276,4.824,277,1.616,278,2.063,279,2.689,280,4.469,281,1.616,282,1.616,283,2.689,284,1.616,285,1.616,286,1.616,287,0.796,288,2.689,289,1.616,290,1.616,291,1.616,292,2.689,293,1.616,294,1.616,295,2.689,296,1.616,297,2.063,298,1.616,299,1.239,300,2.689,301,1.616,302,1.616,303,1.616,304,1.616,305,1.616,306,1.389,307,1.616,308,1.616,309,4.469,310,1.616,311,2.41,312,1.616,313,3.453,314,1.616,315,3.453,316,1.616,317,1.616,318,1.616,319,2.063,320,1.616,321,1.616,322,1.616,323,2.649,324,3.923,325,1.616,326,2.311,327,1.389,328,1.389,329,1.616,330,1.616,331,1.239,332,2.689,333,2.689,334,2.689,335,2.689,336,4.469,337,1.616,338,3.842,339,2.689,340,1.616,341,5.115,342,4.824,343,3.842,344,1.616,345,2.689,346,1.616,347,2.311,348,1.616,349,1.616,350,1.616,351,1.616,352,1.616,353,1.389,354,1.616,355,1.616,356,1.616,357,1.616,358,1.616,359,1.616,360,1.616,361,1.616,362,1.616,363,1.616,364,1.616,365,1.389,366,1.616,367,1.616,368,1.616,369,1.616,370,1.616,371,2.689,372,1.616,373,1.616,374,1.616,375,1.616,376,1.616,377,1.616,378,1.616,379,1.616]],["title/injectables/MongooseService.html",[54,1.198,164,1.716]],["body/injectables/MongooseService.html",[3,0.1,4,0.1,5,0.072,7,0.218,8,0.019,9,0.224,12,0.1,13,0.199,18,2.346,20,0.006,21,0.009,22,0.006,54,1.263,55,1.266,65,0.159,66,0.779,68,1.184,69,0.704,70,0.601,72,1.497,73,1.544,74,0.536,76,0.732,77,0.689,78,0.528,79,0.732,81,0.596,84,0.854,94,0.765,95,0.948,96,2.39,104,1.534,105,1.534,106,1.258,110,1.37,116,3.125,117,1.97,120,1.728,130,2.066,164,1.809,202,1.958,233,1.971,234,1.433,241,1.971,248,2.715,249,3.311,278,1.971,319,4.016,323,4.016,324,4.855,326,4.5,380,2.209,381,2.715,382,3.89,383,4.5,384,3.89,385,2.57,386,3.89,387,2.501,388,3.89,389,2.57,390,2.57,391,3.89,392,2.57,393,3.89,394,2.57,395,2.209,396,2.57,397,3.89,398,2.57,399,3.89,400,1.794,401,2.57,402,2.57,403,2.57,404,2.57,405,6.606,406,2.57,407,2.57,408,5.624,409,2.57,410,5.235,411,2.57,412,2.984,413,3.89,414,1.652,415,2.57,416,2.57,417,4.694,418,3.89,419,1.534,420,1.971,421,2.57,422,2.57,423,2.57]],["title/classes/Patient.html",[13,0.286,84,0.602]],["body/classes/Patient.html",[3,0.127,4,0.127,5,0.091,7,0.209,8,0.019,9,0.285,12,0.25,13,0.499,15,1.313,17,2.335,20,0.008,21,0.011,22,0.008,39,1.519,50,3.266,60,0.4,65,0.202,66,0.93,68,0.688,69,0.592,72,1.13,73,1.901,74,0.471,78,0.544,84,1.011,94,0.477,106,0.876,121,1.821,136,1.169,193,1.821,194,2.158,195,2.823,196,3.847,199,3.703,200,2.893,201,3.594,202,1.935,203,3.221,204,3.703,205,2.588,206,3.073,207,2.658,208,2.658,209,1.95,210,1.95,211,1.95,212,2.769,213,2.587,214,1.709,215,1.95,216,1.95,217,2.893,218,1.95,219,1.95,220,1.821,221,1.95,222,1.609,223,1.519,253,2.28,254,3.559,256,3.238,257,2.506,258,2.506,424,3.267]],["title/controllers/PatientController.html",[0,2.202,425,2.575]],["body/controllers/PatientController.html",[0,1.435,2,1.545,3,0.093,4,0.093,5,0.067,7,0.212,8,0.019,9,0.21,12,0.093,13,0.186,14,1.058,15,0.435,17,1.391,18,2.277,20,0.006,21,0.009,22,0.006,65,0.149,68,1.149,69,0.816,72,1.609,73,1.771,74,0.476,76,0.658,77,0.62,78,0.625,79,0.658,81,0.558,84,1.01,95,0.9,96,2.361,106,0.644,110,1.33,120,1.266,195,2.856,202,1.542,205,1.879,214,2.356,220,2.82,234,2.511,248,1.677,249,2.646,311,3.144,381,3.144,420,3.879,425,2.58,426,2.066,427,2.066,428,2.376,429,2.376,430,3.696,431,4.347,432,2.896,433,2.403,434,5.459,435,5.579,436,4.53,437,2.403,438,2.403,439,2.403,440,5.057,441,2.403,442,2.403,443,2.403,444,2.403,445,2.403,446,3.872,447,2.403,448,2.403,449,2.403,450,5.057,451,2.403,452,2.403,453,3.696,454,3.696,455,1.843,456,4.955,457,1.843,458,2.356,459,1.677,460,2.403,461,4.692,462,2.403,463,2.066,464,2.066,465,2.403,466,3.696,467,2.066,468,2.403,469,2.403,470,2.403,471,3.177,472,3.177,473,2.066,474,2.066]],["title/classes/PatientCreatedEvent.html",[13,0.286,475,2.057]],["body/classes/PatientCreatedEvent.html",[3,0.167,4,0.167,5,0.12,7,0.217,8,0.018,12,0.167,13,0.333,15,1.267,20,0.01,21,0.014,22,0.01,60,0.526,63,1.065,65,0.266,66,1.12,67,2.633,68,1.437,69,1.192,70,0.863,71,2.395,72,1.662,73,2.012,74,0.542,76,0.559,77,0.526,78,0.627,79,0.559,81,0.997,82,0.7,86,2.116,116,2.564,132,1.538,236,3.465,475,3.117,476,3.67,477,3.295,478,4.296,479,3.693,480,4.296,481,2.998,482,2.564]],["title/classes/PatientCreatedHandler.html",[13,0.286,483,2.575]],["body/classes/PatientCreatedHandler.html",[3,0.153,4,0.153,5,0.11,7,0.247,8,0.019,9,0.344,12,0.153,13,0.305,20,0.01,21,0.013,22,0.01,60,0.483,63,1.006,65,0.244,66,1.058,68,1.112,69,0.714,70,0.92,74,0.52,76,0.513,77,0.483,78,0.532,79,0.513,82,0.643,94,0.576,95,1.286,96,2.03,106,1.056,110,0.96,111,2.763,117,2.242,120,1.485,130,1.734,132,2.132,163,2.377,171,1.941,223,1.833,414,2.533,419,2.352,475,3.699,483,3.686,484,3.548,485,3.023,486,3.555,487,3.152,488,5.281,489,3.152,490,3.388,491,2.352,492,2.352,493,2.751,494,2.751,495,2.533,496,3.941,497,3.023,498,2.751,499,3.388]],["title/classes/PatientDeletedEvent.html",[13,0.286,500,2.202]],["body/classes/PatientDeletedEvent.html",[3,0.183,4,0.183,5,0.132,7,0.23,8,0.018,12,0.183,13,0.366,15,1.176,20,0.011,21,0.014,22,0.011,60,0.578,63,1.132,65,0.292,66,1.19,67,2.235,69,1.234,70,0.729,71,2.632,72,1.711,74,0.518,76,0.615,77,0.578,78,0.599,79,0.615,81,1.096,82,0.77,89,2.632,236,3.622,476,3.622,500,3.545,501,3.621,502,4.721,503,4.721]],["title/classes/PatientDeletedHandler.html",[13,0.286,504,2.575]],["body/classes/PatientDeletedHandler.html",[3,0.166,4,0.166,5,0.119,7,0.255,8,0.019,9,0.374,12,0.166,13,0.332,14,1.884,20,0.01,21,0.014,22,0.01,60,0.525,63,1.063,65,0.265,68,1.175,70,0.661,74,0.487,76,0.726,77,0.684,78,0.562,79,0.726,82,0.698,94,0.626,95,1.359,110,1.043,120,1.204,132,1.533,163,2.382,223,1.991,287,2.109,484,3.46,486,3.704,487,3.33,489,3.33,491,2.556,492,2.556,500,4.173,504,3.894,505,3.285,506,4.282,507,4.282,508,4.282,509,4.282,510,2.989,511,4.282,512,4.282,513,4.282]],["title/classes/PatientDetails.html",[13,0.286,73,1.088]],["body/classes/PatientDetails.html",[3,0.133,4,0.133,5,0.096,7,0.215,8,0.019,9,0.3,12,0.254,13,0.507,15,1.304,17,2.379,20,0.008,21,0.012,22,0.008,39,1.597,50,3.227,60,0.421,65,0.213,66,0.963,68,0.723,69,0.622,72,1.171,73,1.771,74,0.419,78,0.485,84,0.979,94,0.502,106,0.921,121,1.915,136,1.23,193,1.915,194,2.235,195,2.515,196,3.91,199,3.773,200,2.958,201,3.652,202,2.005,203,3.31,204,3.585,205,2.313,206,2.901,207,2.731,208,2.731,209,2.05,210,2.05,211,2.05,212,2.869,213,2.68,214,1.797,215,2.05,216,2.05,217,2.731,218,2.05,219,2.05,220,1.915,221,2.05,222,1.692,223,1.597,256,3.355,514,3.435,515,3.435]],["title/classes/PatientId.html",[13,0.286,72,0.899]],["body/classes/PatientId.html",[3,0.137,4,0.137,5,0.099,7,0.219,8,0.019,9,0.309,12,0.257,13,0.512,15,1.287,17,2.122,20,0.009,21,0.012,22,0.009,39,1.648,50,3.149,60,0.434,65,0.22,66,0.984,68,0.746,69,0.642,72,1.373,73,1.663,74,0.309,78,0.357,84,0.993,94,0.518,106,0.95,121,1.976,136,1.269,193,1.976,194,2.285,195,1.854,196,3.949,199,3.816,200,2.999,201,3.689,202,2.049,203,3.365,204,3.816,205,2.667,206,3.185,207,1.746,208,1.746,209,2.115,210,2.115,211,2.115,212,2.932,213,2.739,214,1.854,215,2.115,216,2.115,217,2.777,218,2.115,219,2.115,220,1.976,221,2.115,222,1.746,223,1.648,253,2.474,516,3.544]],["title/interfaces/PatientInterface.html",[246,2.372,400,2.575]],["body/interfaces/PatientInterface.html",[3,0.196,4,0.196,5,0.141,7,0.196,8,0.018,12,0.196,15,1.12,17,2.743,20,0.012,21,0.015,22,0.012,65,0.312,66,1.239,78,0.624,202,2.58,207,3.437,208,3.437,217,3.047,246,3.241,400,4.318,517,5.041,518,4.333,519,6.186]],["title/classes/PatientModel.html",[13,0.286,387,2.372]],["body/classes/PatientModel.html",[3,0.137,4,0.137,5,0.099,7,0.256,8,0.019,9,0.308,12,0.137,13,0.274,14,1.555,15,0.64,17,2.404,20,0.009,21,0.012,22,0.009,39,1.644,60,0.433,65,0.219,68,1.28,69,0.888,70,0.546,74,0.577,76,0.638,77,0.601,78,0.356,79,0.638,82,0.576,94,0.516,95,1.194,110,1.481,128,2.272,132,1.265,200,2.415,201,1.971,217,2.415,287,2.995,299,3.761,387,3.152,428,3.909,429,3.909,432,3.909,475,1.971,493,2.467,500,2.11,510,2.467,520,3.038,521,4.84,522,4.215,523,3.535,524,5.63,525,3.535,526,3.535,527,3.535,528,4.215,529,3.535,530,3.535,531,3.038,532,3.535,533,4.84,534,2.11,535,2.467,536,3.038,537,3.038,538,4.84,539,3.038,540,2.467,541,4.84,542,3.535,543,3.535,544,3.535]],["title/injectables/PatientRepository.html",[54,1.198,99,1.817]],["body/injectables/PatientRepository.html",[3,0.133,4,0.133,5,0.096,7,0.215,8,0.019,9,0.299,12,0.133,13,0.265,18,2.502,20,0.008,21,0.012,22,0.008,54,1.558,55,1.688,65,0.212,68,1.467,69,1.003,74,0.523,76,0.721,77,0.678,79,0.721,84,1.136,87,1.9,94,0.501,95,1.169,96,2.454,99,2.363,103,1.688,106,1.608,110,1.538,120,1.687,122,2.628,128,2.202,130,1.508,163,1.168,234,3.087,235,2.945,249,2.51,383,5.157,387,3.084,428,3.084,429,3.084,432,3.084,455,2.628,482,2.864,540,2.391,545,2.945,546,4.124,547,3.426,548,4.124,549,3.426,550,3.426,551,4.124,552,3.426,553,3.426,554,2.945,555,2.945,556,4.798,557,5.537,558,3.426,559,4.798,560,3.426,561,3.426,562,3.426,563,3.426,564,3.426]],["title/classes/PatientResolver.html",[13,0.286,565,2.575]],["body/classes/PatientResolver.html",[3,0.079,4,0.079,5,0.057,7,0.245,8,0.019,12,0.079,13,0.158,14,0.896,15,0.588,18,2.353,20,0.005,21,0.008,22,0.005,39,0.947,60,0.25,65,0.126,66,0.651,68,0.684,69,0.837,70,0.315,72,1.612,73,0.958,74,0.492,76,0.7,77,0.829,78,0.569,79,0.7,81,0.473,84,1.079,95,0.791,96,2.327,106,1.085,110,1.229,117,0.767,120,1.138,163,1.923,164,2.624,170,1.216,171,1.003,194,1.51,195,2.64,200,1.003,202,1.355,205,1.689,214,1.066,222,2.276,233,2.491,248,1.422,249,3.306,268,3.971,311,2.267,327,2.791,328,1.751,381,1.422,395,5.19,412,1.563,420,1.563,428,2.97,429,2.97,431,4.338,432,2.97,435,2.791,436,2.267,446,2.791,456,3.481,457,1.563,458,2.813,459,1.422,461,2.791,463,1.751,464,1.751,467,1.751,471,3.481,472,2.791,473,1.751,474,1.751,497,1.563,565,2.267,566,1.751,567,1.751,568,2.037,569,2.037,570,2.037,571,4.049,572,2.037,573,2.037,574,2.037,575,2.037,576,2.037,577,2.037,578,2.037,579,2.037,580,2.037,581,2.037,582,2.037,583,1.751,584,1.751,585,2.037,586,2.037,587,2.037,588,1.563,589,2.037,590,1.563,591,1.563,592,1.751,593,1.003,594,2.037,595,2.037,596,2.037,597,2.037,598,2.037,599,2.037,600,2.037,601,4.049,602,2.037,603,2.037,604,2.037,605,2.037,606,2.037,607,1.751,608,2.037,609,1.751,610,2.037,611,2.037]],["title/injectables/PatientSagas.html",[54,1.198,612,2.372]],["body/injectables/PatientSagas.html",[3,0.178,4,0.178,5,0.128,7,0.178,8,0.019,9,0.401,12,0.178,13,0.356,18,2.434,20,0.011,21,0.014,22,0.011,54,1.894,55,2.261,106,1.231,120,1.64,129,3.946,149,4.073,205,2.434,206,2.402,475,2.56,498,3.204,612,3.751,613,3.946,614,4.591,615,4.591,616,4.591,617,4.591,618,4.591,619,5.835,620,4.591,621,4.591,622,4.591,623,4.591,624,4.591,625,4.591]],["title/classes/PatientUpdate.html",[13,0.286,222,1.817]],["body/classes/PatientUpdate.html",[3,0.127,4,0.127,5,0.092,7,0.21,8,0.019,9,0.286,12,0.25,13,0.5,15,1.314,17,2.339,20,0.008,21,0.011,22,0.008,39,1.527,50,3.18,60,0.402,65,0.203,66,0.933,68,0.691,69,0.594,72,1.134,73,1.904,74,0.472,78,0.545,84,0.96,94,0.48,106,0.88,121,1.83,136,1.175,193,1.83,194,2.165,195,2.83,196,3.853,199,3.71,200,2.9,201,3.599,202,1.942,203,3.229,204,3.514,205,2.593,206,3.08,207,2.665,208,2.665,209,1.96,210,1.96,211,1.96,212,2.779,213,2.596,214,1.717,215,1.96,216,1.96,217,2.9,218,1.96,219,1.96,220,1.83,221,1.96,222,2.293,223,1.527,253,2.291,254,3.571,256,3.25,257,2.518,258,2.518,626,3.283]],["title/classes/PatientUpdatedEvent.html",[13,0.286,534,2.202]],["body/classes/PatientUpdatedEvent.html",[3,0.17,4,0.17,5,0.122,7,0.22,8,0.018,12,0.17,13,0.339,15,1.274,20,0.011,21,0.014,22,0.011,60,0.537,63,1.079,65,0.271,66,1.134,67,2.647,68,1.446,69,1.201,70,0.874,71,2.442,72,1.673,73,2.025,74,0.547,76,0.57,77,0.537,78,0.633,79,0.57,81,1.017,82,0.714,236,3.498,476,3.698,534,3.379,627,3.36,628,4.38,629,4.38,630,3.765]],["title/classes/PatientUpdatedHandler.html",[13,0.286,631,2.575]],["body/classes/PatientUpdatedHandler.html",[3,0.156,4,0.156,5,0.112,7,0.249,8,0.019,9,0.351,12,0.156,13,0.312,20,0.01,21,0.013,22,0.01,60,0.493,63,1.02,65,0.249,66,1.073,68,1.128,69,0.729,70,0.93,74,0.525,76,0.524,77,0.493,78,0.54,79,0.524,82,0.656,94,0.588,95,1.304,106,1.079,110,0.98,111,2.802,117,2.265,120,1.506,132,1.917,163,2.39,171,1.982,223,1.872,287,1.982,414,2.587,419,2.402,484,3.578,486,3.593,487,3.197,489,3.197,491,2.402,492,2.402,497,3.087,498,2.809,499,3.459,534,3.988,535,2.809,631,3.738,632,3.459,633,5.355,634,4.024,635,4.024]],["title/classes/PatientView.html",[13,0.286,146,2.057]],["body/classes/PatientView.html",[3,0.125,4,0.125,5,0.09,7,0.256,8,0.019,9,0.282,12,0.125,13,0.25,17,1.731,20,0.008,21,0.011,22,0.008,60,0.395,65,0.2,68,1.3,69,0.833,70,0.828,72,0.786,74,0.56,76,0.42,77,0.395,79,0.42,82,0.526,94,0.472,95,1.12,110,1.423,128,2.075,132,1.155,146,2.565,205,1.346,207,2.266,208,2.266,217,2.266,278,3.528,287,2.877,299,3.528,493,2.253,510,3.211,521,4.607,522,3.954,528,3.954,531,2.774,533,5.308,535,3.211,536,2.774,537,2.774,538,2.774,539,2.774,540,2.253,541,4.607,593,2.64,636,5.679,637,2.774,638,4.077,639,4.077,640,4.077,641,3.227,642,3.227,643,3.227,644,3.227,645,3.227,646,3.227,647,2.957,648,2.075,649,2.957,650,3.227,651,4.6,652,3.227,653,4.6,654,4.6,655,3.227,656,3.227,657,5.359,658,3.227,659,3.227,660,3.227,661,3.227,662,3.227,663,3.227]],["title/injectables/PatientViewConsumer.html",[54,1.198,664,2.202]],["body/injectables/PatientViewConsumer.html",[3,0.09,4,0.09,5,0.065,7,0.25,8,0.019,9,0.315,12,0.09,13,0.18,18,1.842,20,0.006,21,0.009,22,0.006,54,1.171,55,1.147,63,0.444,65,0.144,66,0.723,67,1.662,69,0.799,70,0.557,74,0.549,76,0.647,77,0.609,78,0.574,79,0.647,81,0.54,84,0.38,94,0.34,95,0.879,96,2.267,104,2.153,105,2.153,106,1.525,110,1.386,117,2.234,120,0.654,136,2.345,150,2.011,163,2.09,171,1.147,202,1.504,223,1.083,242,2.767,249,2.977,269,4.892,270,4.892,287,1.777,319,3.387,323,3.387,324,3.387,331,3.387,338,3.795,343,3.795,347,3.795,353,3.1,412,3.387,458,2.977,459,1.625,475,1.298,500,1.39,534,1.39,567,2.001,583,2.001,584,2.001,607,3.795,609,3.795,638,2.517,639,2.517,640,2.517,664,2.153,665,2.001,666,4.415,667,4.972,668,2.328,669,3.607,670,2.328,671,3.607,672,2.328,673,2.328,674,2.328,675,2.328,676,3.607,677,2.328,678,3.607,679,2.328,680,2.328,681,2.328,682,2.328,683,2.001,684,2.328,685,2.328,686,2.328,687,2.328,688,2.328,689,2.328,690,2.328,691,2.328,692,2.328,693,2.328,694,4.415,695,2.328,696,4.415,697,2.328,698,2.328,699,4.415,700,4.415,701,2.328,702,4.415,703,2.328,704,4.415,705,4.415,706,2.328,707,2.328,708,2.328,709,2.328,710,2.328,711,2.328,712,2.328]],["title/classes/PatientViewCreatedEvent.html",[13,0.286,648,2.372]],["body/classes/PatientViewCreatedEvent.html",[3,0.172,4,0.172,5,0.124,7,0.245,8,0.018,9,0.387,12,0.172,13,0.344,15,1.143,20,0.011,21,0.014,22,0.011,60,0.544,63,1.088,65,0.275,66,1.144,67,2.376,70,0.882,74,0.498,76,0.578,77,0.544,78,0.576,79,0.578,81,1.03,82,0.724,84,1.124,86,2.186,94,0.649,116,2.649,132,1.589,236,3.52,476,3.52,477,3.405,479,3.815,481,3.098,482,2.649,593,3.11,648,4.058,713,5.729,714,4.439,715,4.439,716,3.815]],["title/classes/PatientViewCreatedHandler.html",[13,0.286,717,2.575]],["body/classes/PatientViewCreatedHandler.html",[3,0.155,4,0.155,5,0.112,7,0.266,8,0.019,9,0.349,12,0.155,13,0.31,14,1.76,20,0.01,21,0.013,22,0.01,60,0.49,63,1.016,65,0.248,70,0.618,74,0.465,76,0.694,77,0.654,78,0.538,79,0.694,81,0.929,82,0.652,84,0.87,94,0.584,95,1.299,110,0.974,120,1.125,132,1.91,163,1.363,164,3.19,170,2.388,171,1.97,287,1.97,484,3.346,485,3.068,486,3.582,487,3.184,489,3.184,490,3.438,491,2.388,492,2.388,493,2.792,494,2.792,495,2.571,593,3.153,648,4.115,717,4.189,718,3.068,719,4,720,4,721,4,722,4,723,4,724,4]],["title/classes/PatientViewDeletedEvent.html",[13,0.286,649,2.372]],["body/classes/PatientViewDeletedEvent.html",[3,0.179,4,0.179,5,0.129,7,0.25,8,0.018,9,0.403,12,0.179,13,0.358,15,1.165,20,0.011,21,0.014,22,0.011,60,0.566,63,1.117,65,0.286,66,1.174,67,2.205,69,1.225,70,0.714,71,2.577,74,0.511,76,0.602,77,0.566,79,0.602,81,1.073,82,0.754,84,0.754,86,2.277,89,2.577,94,0.675,116,2.759,132,1.655,236,3.588,476,3.588,481,3.227,482,2.759,501,3.546,593,3.169,649,3.767,725,4.623,726,4.623]],["title/classes/PatientViewDeletedHandler.html",[13,0.286,727,2.575]],["body/classes/PatientViewDeletedHandler.html",[3,0.153,4,0.153,5,0.11,7,0.271,8,0.019,9,0.344,12,0.153,13,0.305,14,1.734,20,0.01,21,0.013,22,0.01,60,0.483,63,1.006,65,0.244,69,0.714,70,0.609,72,1.286,73,1.162,74,0.461,76,0.687,77,0.647,78,0.532,79,0.687,81,1.226,82,0.643,84,0.643,94,0.576,95,1.286,110,0.96,120,1.108,132,1.891,163,1.343,164,3.176,170,2.352,171,1.941,287,1.941,419,2.352,484,3.321,486,3.555,487,3.152,489,3.152,491,2.352,492,2.352,494,2.751,495,2.533,505,3.023,510,2.751,593,3.134,649,4.09,718,3.023,727,4.441,728,3.941,729,3.941,730,3.941,731,3.941,732,3.388,733,3.941]],["title/injectables/PatientViewRepository.html",[54,1.198,143,1.93]],["body/injectables/PatientViewRepository.html",[3,0.136,4,0.136,5,0.098,7,0.235,8,0.019,9,0.305,12,0.136,13,0.271,18,2.335,20,0.008,21,0.012,22,0.008,54,1.58,55,1.723,65,0.217,68,1.522,69,1.014,74,0.488,76,0.729,77,0.686,79,0.729,81,1.13,84,0.57,87,1.927,94,0.511,95,1.186,96,2.386,103,1.723,106,1.501,110,1.475,120,1.574,122,2.683,128,2.248,136,1.252,143,2.547,146,3.994,147,2.441,148,2.441,234,3.122,414,2.248,419,2.906,455,2.683,482,2.906,540,2.441,554,3.006,555,3.006,638,3.398,639,3.398,640,3.398,734,5.203,735,3.006,736,4.868,737,3.498,738,4.868,739,3.498,740,4.868,741,3.498,742,3.498,743,5.599,744,3.498,745,3.498,746,3.498,747,3.498,748,3.498]],["title/classes/PatientViewUpdatedEvent.html",[13,0.286,647,2.372]],["body/classes/PatientViewUpdatedEvent.html",[3,0.169,4,0.169,5,0.121,7,0.243,8,0.018,9,0.38,12,0.169,13,0.337,15,1.271,20,0.011,21,0.014,22,0.011,60,0.533,63,1.074,65,0.27,66,1.13,67,2.642,68,1.443,69,1.198,70,0.871,71,2.426,74,0.546,76,0.566,77,0.533,79,0.566,81,1.01,82,0.71,84,0.71,86,2.144,94,0.636,116,2.598,132,1.558,236,3.487,476,3.688,481,3.038,482,2.598,593,3.258,627,3.338,630,3.741,647,3.624,749,4.352,750,4.352]],["title/classes/PatientViewUpdatedHandler.html",[13,0.286,751,2.575]],["body/classes/PatientViewUpdatedHandler.html",[3,0.148,4,0.148,5,0.107,7,0.269,8,0.019,9,0.334,12,0.148,13,0.297,14,1.685,20,0.009,21,0.013,22,0.009,60,0.469,63,0.987,65,0.237,68,1.09,69,0.693,70,0.591,72,1.262,73,1.527,74,0.452,76,0.674,77,0.635,78,0.522,79,0.674,81,1.202,82,0.624,84,0.624,94,0.559,95,1.262,110,0.933,120,1.456,132,1.854,163,1.305,164,3.149,170,2.285,171,1.886,287,1.886,414,2.461,419,2.285,484,3.272,486,3.503,487,3.091,489,3.091,491,2.285,492,2.285,494,2.672,495,2.461,498,2.672,535,2.672,593,3.097,647,4.042,718,2.937,732,3.291,751,4.389,752,3.291,753,3.828,754,3.828,755,3.828,756,3.828,757,3.828,758,3.828]],["title/modules/PatientsModule.html",[23,2.057,29,2.372]],["body/modules/PatientsModule.html",[2,2.977,3,0.126,4,0.126,5,0.091,7,0.287,8,0.019,9,0.284,12,0.126,13,0.252,20,0.008,21,0.011,22,0.008,23,2.582,25,1.945,26,2.765,29,4.715,30,3.233,31,2.275,32,2.275,34,3.553,82,0.531,99,3.172,114,2.095,143,3.369,152,2.275,153,2.275,159,4.14,163,1.578,164,2.154,166,3.981,168,3.233,169,2.801,170,1.945,171,1.605,172,3.233,173,2.801,425,3.761,458,3.369,459,2.275,565,3.233,612,4.14,664,3.844,759,2.801,760,3.259,761,2.801,762,3.259,763,4.632,764,3.259,765,3.259,766,3.553,767,3.259,768,3.553,769,3.259,770,3.553,771,3.259,772,3.259,773,4.133,774,3.259,775,3.259]],["title/injectables/PatientsService.html",[54,1.198,458,1.93]],["body/injectables/PatientsService.html",[0,1.48,3,0.096,4,0.096,5,0.069,7,0.254,8,0.019,9,0.216,12,0.096,13,0.192,14,1.091,18,2.532,20,0.006,21,0.009,22,0.006,54,1.229,55,1.221,59,1.594,65,0.154,68,1.318,69,0.831,70,0.383,72,1.594,73,1.79,74,0.546,76,0.79,77,0.744,78,0.612,79,0.79,81,0.575,82,0.404,84,0.903,87,0.982,94,0.362,95,0.922,96,2.466,106,1.231,110,1.479,113,3.205,117,0.933,124,2.131,130,2.671,134,1.594,136,2.343,151,3.205,174,1.594,185,1.594,231,2.433,234,3.385,240,2.131,381,1.73,428,2.433,429,2.433,432,2.433,458,1.98,495,1.594,546,3.254,548,3.254,551,3.254,638,2.642,639,2.642,640,2.642,713,3.947,716,3.947,776,2.131,777,5.14,778,2.479,779,5.836,780,6.07,781,2.479,782,2.479,783,3.785,784,2.479,785,2.479,786,3.785,787,2.479,788,2.479,789,2.479,790,3.785,791,2.479,792,3.785,793,1.594,794,3.785,795,3.785,796,2.479,797,1.594,798,2.479,799,2.479,800,4.592,801,2.479,802,2.479,803,2.479,804,2.479,805,4.592,806,2.479,807,2.479,808,2.479]],["title/classes/UpdatePatientCommand.html",[13,0.286,793,2.372]],["body/classes/UpdatePatientCommand.html",[3,0.171,4,0.171,5,0.123,7,0.221,8,0.018,12,0.171,13,0.342,15,1.276,20,0.011,21,0.014,22,0.011,60,0.54,62,3.078,63,1.083,64,3.756,65,0.273,66,1.139,67,2.59,68,1.449,69,1.204,70,0.681,71,2.458,72,1.676,73,2.029,74,0.549,75,3.382,76,0.574,77,0.54,78,0.634,79,0.574,81,1.024,82,0.719,89,2.458,793,3.655,809,5.1,810,5.686]],["title/classes/UpdatePatientHandler.html",[13,0.286,811,2.575]],["body/classes/UpdatePatientHandler.html",[3,0.152,4,0.152,5,0.109,7,0.246,8,0.019,9,0.342,12,0.152,13,0.303,15,0.953,20,0.009,21,0.013,22,0.009,60,0.48,63,1.002,65,0.243,68,1.108,69,0.709,70,0.812,74,0.459,76,0.685,77,0.645,78,0.53,79,0.685,82,0.639,84,0.639,87,2.352,92,2.735,93,3.545,94,0.572,95,1.281,96,2.024,97,2.933,98,2.185,99,3.127,100,3.545,101,3.539,103,2.591,108,3.14,110,0.954,111,2.05,113,2.735,114,2.519,117,1.98,120,1.67,125,2.339,130,1.724,133,3.005,179,3.368,180,3.368,793,4.257,811,4.145,812,4.556,813,3.368,814,3.918,815,3.918,816,3.918]],["title/classes/UpdatePatientViewCommand.html",[13,0.286,797,2.372]],["body/classes/UpdatePatientViewCommand.html",[3,0.171,4,0.171,5,0.123,7,0.258,8,0.018,9,0.385,12,0.171,13,0.342,15,1.14,20,0.011,21,0.014,22,0.011,60,0.54,63,1.083,64,3.756,65,0.273,66,1.139,67,2.14,70,0.681,74,0.496,76,0.574,77,0.54,78,0.573,79,0.574,81,1.32,82,0.719,83,3.078,84,1.122,85,3.078,86,2.172,87,1.746,88,3.078,89,2.458,94,0.644,135,3.078,136,2.627,137,3.382,186,3.79,187,3.79,797,3.655,809,4.827]],["title/classes/UpdatePatientViewHandler.html",[13,0.286,817,2.575]],["body/classes/UpdatePatientViewHandler.html",[3,0.151,4,0.151,5,0.108,7,0.264,8,0.019,9,0.339,12,0.151,13,0.301,14,1.709,15,0.947,20,0.009,21,0.013,22,0.009,60,0.476,63,0.997,65,0.241,70,0.6,74,0.456,76,0.681,77,0.641,78,0.527,79,0.681,82,0.633,84,1.031,87,1.538,93,3.529,94,0.568,95,1.274,96,2.015,97,2.916,98,2.165,100,3.529,101,3.527,103,2.576,108,3.122,110,0.946,111,2.032,117,1.462,120,1.092,125,2.318,130,1.709,142,2.711,143,3.309,146,3.297,147,2.711,148,2.711,149,2.711,150,2.165,151,2.711,152,2.711,153,2.711,156,2.979,157,2.979,158,2.979,189,3.339,190,3.339,797,4.066,812,4.535,813,3.339,817,3.65,818,3.884,819,3.884]],["title/coverage.html",[820,4.341]],["body/coverage.html",[0,2.027,1,1.653,5,0.06,6,1.853,8,0.019,10,1.504,13,0.575,20,0.005,21,0.008,22,0.005,44,1.504,54,1.94,56,1.853,59,1.385,61,2.605,62,2.933,72,0.525,73,0.636,78,0.217,84,0.94,90,1.504,91,2.605,92,2.933,99,1.062,106,0.578,134,1.385,135,2.933,136,0.772,141,1.504,142,2.933,143,1.128,146,1.202,163,0.735,164,1.002,168,1.504,172,1.504,174,1.385,175,2.605,177,1.504,178,2.605,185,1.385,188,1.504,193,3.073,194,1.002,222,1.062,224,1.504,225,1.853,226,1.853,231,1.385,246,1.385,250,1.853,251,1.853,259,1.853,380,1.853,387,1.385,400,1.504,425,1.504,426,1.853,458,1.128,475,1.202,476,3.073,477,2.605,483,1.504,484,3.073,485,2.605,500,1.286,501,2.605,504,1.504,505,2.605,518,1.853,520,1.853,534,1.286,545,1.853,565,1.504,566,1.853,593,2.714,612,1.385,613,1.853,627,2.605,631,1.504,632,1.853,636,1.853,637,1.853,647,1.385,648,1.385,649,1.385,664,1.286,665,1.853,717,1.504,727,1.504,734,1.853,735,1.853,751,1.504,752,1.853,766,1.653,768,1.653,770,1.653,773,1.653,776,1.853,793,1.385,797,1.385,809,2.605,811,1.504,812,2.605,817,1.504,820,1.853,821,2.155,822,2.155,823,2.155,824,4.099,825,6.419,826,1.853,827,7.645,828,6.842,829,1.853,830,1.853,831,1.853,832,2.155,833,1.853,834,7.003,835,6.527,836,1.853,837,1.853,838,2.155,839,3.396,840,2.155,841,1.853,842,1.853,843,1.853,844,4.202,845,3.396,846,1.853,847,1.853,848,1.853,849,2.155,850,2.155,851,2.155,852,2.155]],["title/dependencies.html",[26,2.651,853,3.074]],["body/dependencies.html",[8,0.019,9,0.375,20,0.01,21,0.014,22,0.01,26,2.564,37,3.693,39,1.998,51,3.295,52,3.902,82,0.7,150,2.395,202,1.792,249,2.247,297,4.288,457,3.295,588,3.295,590,3.295,591,3.295,592,5.342,683,5.342,854,4.296,855,5.591,856,4.296,857,4.296,858,4.296,859,6.583,860,4.296,861,4.296,862,4.296,863,4.296,864,4.296,865,4.296,866,4.296,867,4.296,868,4.296,869,4.296,870,4.296,871,4.296,872,4.296,873,4.296,874,4.296,875,4.296,876,4.296,877,4.296,878,4.296,879,4.296,880,4.296,881,4.296,882,4.296,883,4.296,884,4.296,885,4.296,886,4.296,887,4.296,888,4.296,889,4.296]],["title/miscellaneous/functions.html",[890,2.146,891,3.818]],["body/miscellaneous/functions.html",[8,0.016,20,0.014,21,0.016,22,0.014,65,0.358,831,4.971,833,6.099,890,4.036,891,4.971,892,5.783]],["title/index.html",[65,0.19,893,3.074,894,2.642]],["body/index.html",[5,0.115,8,0.018,20,0.01,21,0.013,22,0.01,44,2.878,52,2.878,118,4.175,127,3.545,213,2.299,297,3.163,306,3.545,311,3.799,436,2.878,588,4.673,590,3.163,894,3.545,895,4.124,896,4.124,897,4.124,898,4.124,899,4.124,900,4.124,901,5.237,902,4.124,903,4.124,904,6.479,905,4.124,906,5.443,907,4.124,908,4.124,909,4.124,910,5.443,911,5.443,912,4.124,913,5.443,914,5.443,915,6.092,916,4.124,917,4.124,918,4.124,919,4.124,920,4.124,921,4.124,922,4.124,923,4.124,924,4.124,925,4.124,926,4.124,927,4.124,928,4.124,929,4.124,930,3.163,931,4.124,932,4.124,933,4.124,934,4.124,935,4.124,936,4.124,937,6.092,938,4.124,939,5.443,940,4.124,941,3.545,942,4.124,943,4.124,944,4.124,945,5.443,946,4.124,947,4.124,948,4.124,949,4.124,950,4.124,951,4.124]],["title/modules.html",[25,3.015]],["body/modules.html",[8,0.016,20,0.014,21,0.016,22,0.014,24,3.901,25,3.336,29,3.593,159,3.593,952,6.996,953,6.996,954,6.996,955,6.996]],["title/overview.html",[956,4.341]],["body/overview.html",[2,2.726,8,0.018,20,0.01,21,0.013,22,0.01,24,4.572,25,2.532,26,3.309,27,3.646,28,3.646,29,4.857,30,3.87,31,2.96,32,2.96,55,2.089,60,0.52,99,3.042,143,3.231,159,4.683,160,3.646,161,3.646,162,3.646,163,2.421,164,3.303,246,2.726,458,3.231,612,3.971,664,3.687,759,3.646,761,3.646,956,3.646,957,4.241,958,4.241,959,4.241,960,4.241,961,3.646]],["title/miscellaneous/variables.html",[890,2.146,930,3.407]],["body/miscellaneous/variables.html",[8,0.019,17,1.798,20,0.006,21,0.01,22,0.006,44,3.976,50,1.959,65,0.164,77,0.324,78,0.659,90,1.847,104,4.034,105,4.034,106,0.709,132,0.947,141,1.847,168,2.776,172,2.776,177,1.847,188,1.847,205,1.104,206,1.384,207,1.303,208,1.303,224,1.847,241,2.03,249,1.384,331,2.03,365,3.418,427,2.274,436,1.847,483,1.847,504,1.847,591,2.03,631,1.847,664,1.579,717,1.847,727,1.847,751,1.847,766,3.051,768,3.051,770,3.051,773,3.051,811,1.847,817,1.847,824,4.896,826,3.418,829,3.418,830,4.567,836,2.274,837,2.274,841,2.274,842,4.107,843,2.274,846,2.274,847,2.274,848,2.274,890,1.847,901,3.418,930,2.03,941,2.274,961,2.274,962,5.313,963,2.646,964,2.646,965,2.646,966,3.977,967,2.646,968,2.646,969,2.646,970,2.646,971,2.646,972,2.646,973,2.646,974,2.646,975,2.646,976,3.977,977,2.646,978,4.778,979,2.646,980,2.646,981,2.646,982,2.646,983,2.646,984,2.646,985,2.646,986,2.646,987,2.646,988,2.646,989,3.977,990,4.778,991,3.977,992,2.646,993,2.646,994,2.646,995,2.646,996,2.646,997,2.646,998,2.646,999,2.646,1000,2.646,1001,2.646,1002,2.646,1003,2.646,1004,2.646,1005,2.646,1006,2.646,1007,2.646,1008,2.646,1009,2.646,1010,2.646,1011,2.646,1012,2.646,1013,2.646,1014,2.646,1015,2.646,1016,2.646,1017,2.646,1018,2.646,1019,2.646,1020,2.646,1021,2.646,1022,2.646,1023,3.977,1024,3.977,1025,3.977,1026,2.646,1027,2.646,1028,2.646,1029,2.646,1030,2.646,1031,2.646]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"modules/DatabaseModule.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["0.0.0.0",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["0.4.23",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":961,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["1.15.0",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1113",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.5.1",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":958,"title":{},"body":{"overview.html":{}}}],["2.1.3",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":435,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["2113",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":957,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["35",{"_index":960,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["4.0.9",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["4.5.7",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["5.0.9",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["5.13.7",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["7070",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7071",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7072",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":959,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["8.0.6",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":205,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientView.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":212,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["adding",{"_index":209,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["admin",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregateroot",{"_index":521,"title":{},"body":{"classes/PatientModel.html":{},"classes/PatientView.html":{}}}],["along",{"_index":799,"title":{},"body":{"injectables/PatientsService.html":{}}}],["altair",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["although",{"_index":920,"title":{},"body":{"index.html":{}}}],["api",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_explorer_path",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiresponse",{"_index":456,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["apiresponse({status",{"_index":434,"title":{},"body":{"controllers/PatientController.html":{}}}],["apollo",{"_index":590,"title":{},"body":{"classes/PatientResolver.html":{},"dependencies.html":{},"index.html":{}}}],["app",{"_index":936,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["application",{"_index":906,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":24,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["args",{"_index":395,"title":{},"body":{"injectables/MongooseService.html":{},"classes/PatientResolver.html":{}}}],["args._id",{"_index":604,"title":{},"body":{"classes/PatientResolver.html":{}}}],["argstoargsconfig",{"_index":586,"title":{},"body":{"classes/PatientResolver.html":{}}}],["argstype",{"_index":199,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["argumentname",{"_index":610,"title":{},"body":{"classes/PatientResolver.html":{}}}],["async",{"_index":96,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedHandler.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientViewConsumer.html":{},"injectables/PatientViewRepository.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["atlas",{"_index":924,"title":{},"body":{"index.html":{}}}],["autoschemafile",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":130,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/PatientCreatedHandler.html":{},"injectables/PatientRepository.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["base",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":555,"title":{},"body":{"injectables/PatientRepository.html":{},"injectables/PatientViewRepository.html":{}}}],["behaviorsubject",{"_index":681,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["blatantly",{"_index":949,"title":{},"body":{"index.html":{}}}],["body",{"_index":68,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{}}}],["boolean",{"_index":678,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["bootstrap",{"_index":833,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":696,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["bridged",{"_index":357,"title":{},"body":{"injectables/KafkaService.html":{}}}],["bridgeeventsto",{"_index":264,"title":{},"body":{"injectables/KafkaService.html":{}}}],["bridgeeventsto(subject",{"_index":273,"title":{},"body":{"injectables/KafkaService.html":{}}}],["brokers",{"_index":304,"title":{},"body":{"injectables/KafkaService.html":{}}}],["browse",{"_index":955,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":952,"title":{},"body":{"modules.html":{}}}],["bufferkey",{"_index":339,"title":{},"body":{"injectables/KafkaService.html":{}}}],["built",{"_index":895,"title":{},"body":{"index.html":{}}}],["bunch",{"_index":121,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["call",{"_index":128,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientView.html":{},"injectables/PatientViewRepository.html":{}}}],["case",{"_index":694,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["catch",{"_index":323,"title":{},"body":{"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"injectables/PatientViewConsumer.html":{}}}],["changeit",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":13,"title":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientModel.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"modules/DatabaseModule.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{}}}],["classes",{"_index":60,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientModel.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"overview.html":{}}}],["client",{"_index":303,"title":{},"body":{"injectables/KafkaService.html":{}}}],["clientid",{"_index":301,"title":{},"body":{"injectables/KafkaService.html":{}}}],["cluster",{"_index":911,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":160,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":161,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":162,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_patientsmodule",{"_index":759,"title":{},"body":{"modules/PatientsModule.html":{},"overview.html":{}}}],["cluster_patientsmodule_imports",{"_index":760,"title":{},"body":{"modules/PatientsModule.html":{}}}],["cluster_patientsmodule_providers",{"_index":761,"title":{},"body":{"modules/PatientsModule.html":{},"overview.html":{}}}],["command",{"_index":87,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"injectables/PatientRepository.html":{},"injectables/PatientViewRepository.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["command.eventdto.body",{"_index":157,"title":{},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["command.eventdto.key",{"_index":156,"title":{},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["commandbus",{"_index":779,"title":{},"body":{"injectables/PatientsService.html":{}}}],["commandhandler",{"_index":111,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientUpdatedHandler.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["commandhandler(createpatientcommand",{"_index":115,"title":{},"body":{"classes/CreatePatientHandler.html":{}}}],["commandhandler(createpatientviewcommand",{"_index":154,"title":{},"body":{"classes/CreatePatientViewHandler.html":{}}}],["commandhandler(deletepatientcommand",{"_index":182,"title":{},"body":{"classes/DeletePatientHandler.html":{}}}],["commandhandler(deletepatientviewcommand",{"_index":191,"title":{},"body":{"classes/DeletePatientViewHandler.html":{}}}],["commandhandler(updatepatientcommand",{"_index":814,"title":{},"body":{"classes/UpdatePatientHandler.html":{}}}],["commandhandler(updatepatientviewcommand",{"_index":818,"title":{},"body":{"classes/UpdatePatientViewHandler.html":{}}}],["commandhandlers",{"_index":766,"title":{},"body":{"modules/PatientsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commands/handlers/index",{"_index":767,"title":{},"body":{"modules/PatientsModule.html":{}}}],["commands/impl/create",{"_index":792,"title":{},"body":{"injectables/PatientsService.html":{}}}],["commands/impl/delete",{"_index":795,"title":{},"body":{"injectables/PatientsService.html":{}}}],["commands/impl/update",{"_index":794,"title":{},"body":{"injectables/PatientsService.html":{}}}],["config",{"_index":826,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.ts",{"_index":824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configs.base",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs[env",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confluent",{"_index":917,"title":{},"body":{"index.html":{}}}],["connected",{"_index":371,"title":{},"body":{"injectables/KafkaService.html":{}}}],["connection",{"_index":365,"title":{},"body":{"injectables/KafkaService.html":{},"miscellaneous/variables.html":{}}}],["connection.model('patientmodel",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console",{"_index":584,"title":{},"body":{"classes/PatientResolver.html":{},"injectables/PatientViewConsumer.html":{}}}],["const",{"_index":120,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdatedHandler.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedHandler.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["construct",{"_index":554,"title":{},"body":{"injectables/PatientRepository.html":{},"injectables/PatientViewRepository.html":{}}}],["constructor",{"_index":70,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientModel.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["constructor(commandbus",{"_index":778,"title":{},"body":{"injectables/PatientsService.html":{}}}],["constructor(eventdto",{"_index":137,"title":{},"body":{"classes/CreatePatientViewCommand.html":{},"classes/DeletePatientViewCommand.html":{},"classes/UpdatePatientViewCommand.html":{}}}],["constructor(id",{"_index":523,"title":{},"body":{"classes/PatientModel.html":{}}}],["constructor(kafkaservice",{"_index":506,"title":{},"body":{"classes/PatientDeletedHandler.html":{}}}],["constructor(key",{"_index":71,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/UpdatePatientCommand.html":{}}}],["constructor(mongooseservice",{"_index":718,"title":{},"body":{"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["constructor(patientdb",{"_index":714,"title":{},"body":{"classes/PatientViewCreatedEvent.html":{}}}],["constructor(patientid",{"_index":176,"title":{},"body":{"classes/DeletePatientCommand.html":{}}}],["constructor(patientmodel",{"_index":385,"title":{},"body":{"injectables/MongooseService.html":{}}}],["constructor(patientsservice",{"_index":567,"title":{},"body":{"classes/PatientResolver.html":{},"injectables/PatientViewConsumer.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"classes/DeletePatientViewHandler.html":{},"controllers/PatientController.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientModel.html":{},"classes/PatientResolver.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["constructor(public",{"_index":89,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientViewCommand.html":{},"classes/DeletePatientViewCommand.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientViewCommand.html":{}}}],["constructor(repository",{"_index":98,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["consumer",{"_index":260,"title":{},"body":{"injectables/KafkaService.html":{}}}],["consumerconfig",{"_index":276,"title":{},"body":{"injectables/KafkaService.html":{}}}],["consumerconfig?.groupid",{"_index":375,"title":{},"body":{"injectables/KafkaService.html":{}}}],["consumers",{"_index":773,"title":{},"body":{"modules/PatientsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consumers/patient.consumers",{"_index":774,"title":{},"body":{"modules/PatientsModule.html":{}}}],["consuming",{"_index":351,"title":{},"body":{"injectables/KafkaService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/PatientController.html":{}},"body":{"controllers/AppController.html":{},"controllers/PatientController.html":{},"injectables/PatientsService.html":{},"coverage.html":{}}}],["controller('patients",{"_index":460,"title":{},"body":{"controllers/PatientController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/DatabaseModule.html":{},"controllers/PatientController.html":{},"modules/PatientsModule.html":{},"overview.html":{}}}],["coverage",{"_index":820,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cqrs",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cqrsmodule",{"_index":763,"title":{},"body":{"modules/PatientsModule.html":{}}}],["create",{"_index":381,"title":{},"body":{"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"classes/PatientResolver.html":{},"injectables/PatientsService.html":{}}}],["create(patientdbdto",{"_index":388,"title":{},"body":{"injectables/MongooseService.html":{}}}],["createconsumer",{"_index":265,"title":{},"body":{"injectables/KafkaService.html":{}}}],["createconsumer(consumerconfig",{"_index":275,"title":{},"body":{"injectables/KafkaService.html":{}}}],["created.event",{"_index":493,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientModel.html":{},"classes/PatientView.html":{},"classes/PatientViewCreatedHandler.html":{}}}],["created.event.ts",{"_index":477,"title":{},"body":{"classes/PatientCreatedEvent.html":{},"classes/PatientViewCreatedEvent.html":{},"coverage.html":{}}}],["created.event.ts:5",{"_index":478,"title":{},"body":{"classes/PatientCreatedEvent.html":{}}}],["created.event.ts:6",{"_index":715,"title":{},"body":{"classes/PatientViewCreatedEvent.html":{}}}],["created.event.ts:7",{"_index":480,"title":{},"body":{"classes/PatientCreatedEvent.html":{}}}],["created.event.ts:8",{"_index":479,"title":{},"body":{"classes/PatientCreatedEvent.html":{},"classes/PatientViewCreatedEvent.html":{}}}],["created.handler.ts",{"_index":485,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientViewCreatedHandler.html":{},"coverage.html":{}}}],["created.handler.ts:12",{"_index":488,"title":{},"body":{"classes/PatientCreatedHandler.html":{}}}],["created.handler.ts:14",{"_index":719,"title":{},"body":{"classes/PatientViewCreatedHandler.html":{}}}],["created.handler.ts:17",{"_index":490,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientViewCreatedHandler.html":{}}}],["createdpatient",{"_index":403,"title":{},"body":{"injectables/MongooseService.html":{}}}],["createdpatient.save",{"_index":406,"title":{},"body":{"injectables/MongooseService.html":{}}}],["createpatient",{"_index":428,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientsService.html":{}}}],["createpatient(@args()args",{"_index":602,"title":{},"body":{"classes/PatientResolver.html":{}}}],["createpatient(@body",{"_index":462,"title":{},"body":{"controllers/PatientController.html":{}}}],["createpatient(args",{"_index":570,"title":{},"body":{"classes/PatientResolver.html":{}}}],["createpatient(body",{"_index":433,"title":{},"body":{"controllers/PatientController.html":{}}}],["createpatient(key",{"_index":546,"title":{},"body":{"injectables/PatientRepository.html":{},"injectables/PatientsService.html":{}}}],["createpatientcommand",{"_index":59,"title":{"classes/CreatePatientCommand.html":{}},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"injectables/PatientsService.html":{},"coverage.html":{}}}],["createpatientcommand(key",{"_index":801,"title":{},"body":{"injectables/PatientsService.html":{}}}],["createpatienthandler",{"_index":90,"title":{"classes/CreatePatientHandler.html":{}},"body":{"classes/CreatePatientHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createpatientview",{"_index":638,"title":{},"body":{"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"injectables/PatientViewRepository.html":{},"injectables/PatientsService.html":{}}}],["createpatientview(key",{"_index":736,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["createpatientview(parsed",{"_index":669,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["createpatientview(patientdb",{"_index":783,"title":{},"body":{"injectables/PatientsService.html":{}}}],["createpatientviewcommand",{"_index":134,"title":{"classes/CreatePatientViewCommand.html":{}},"body":{"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"injectables/PatientsService.html":{},"coverage.html":{}}}],["createpatientviewcommand(patientdb",{"_index":806,"title":{},"body":{"injectables/PatientsService.html":{}}}],["createpatientviewcommand(sendpackage",{"_index":625,"title":{},"body":{"injectables/PatientSagas.html":{}}}],["createpatientviewevent",{"_index":701,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["createpatientviewhandler",{"_index":141,"title":{"classes/CreatePatientViewHandler.html":{}},"body":{"classes/CreatePatientViewHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createproducer",{"_index":266,"title":{},"body":{"injectables/KafkaService.html":{}}}],["createproducer(producerconfig",{"_index":279,"title":{},"body":{"injectables/KafkaService.html":{}}}],["creating",{"_index":221,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["credentials",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":495,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{}}}],["database",{"_index":909,"title":{},"body":{"index.html":{}}}],["database.module",{"_index":764,"title":{},"body":{"modules/PatientsModule.html":{}}}],["database_connection",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":159,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":168,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":195,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{}}}],["default",{"_index":104,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"injectables/PatientViewConsumer.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":74,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["delete",{"_index":420,"title":{},"body":{"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["delete(':patientid",{"_index":468,"title":{},"body":{"controllers/PatientController.html":{}}}],["deleted.event",{"_index":510,"title":{},"body":{"classes/PatientDeletedHandler.html":{},"classes/PatientModel.html":{},"classes/PatientView.html":{},"classes/PatientViewDeletedHandler.html":{}}}],["deleted.event.ts",{"_index":501,"title":{},"body":{"classes/PatientDeletedEvent.html":{},"classes/PatientViewDeletedEvent.html":{},"coverage.html":{}}}],["deleted.event.ts:4",{"_index":502,"title":{},"body":{"classes/PatientDeletedEvent.html":{}}}],["deleted.event.ts:5",{"_index":503,"title":{},"body":{"classes/PatientDeletedEvent.html":{}}}],["deleted.event.ts:6",{"_index":725,"title":{},"body":{"classes/PatientViewDeletedEvent.html":{}}}],["deleted.event.ts:7",{"_index":726,"title":{},"body":{"classes/PatientViewDeletedEvent.html":{}}}],["deleted.handler.ts",{"_index":505,"title":{},"body":{"classes/PatientDeletedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"coverage.html":{}}}],["deleted.handler.ts:11",{"_index":508,"title":{},"body":{"classes/PatientDeletedHandler.html":{}}}],["deleted.handler.ts:16",{"_index":728,"title":{},"body":{"classes/PatientViewDeletedHandler.html":{}}}],["deleted.handler.ts:19",{"_index":729,"title":{},"body":{"classes/PatientViewDeletedHandler.html":{}}}],["deleted.handler.ts:9",{"_index":507,"title":{},"body":{"classes/PatientDeletedHandler.html":{}}}],["deleteone",{"_index":382,"title":{},"body":{"injectables/MongooseService.html":{}}}],["deleteone(key",{"_index":391,"title":{},"body":{"injectables/MongooseService.html":{}}}],["deletepatient",{"_index":429,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientsService.html":{}}}],["deletepatient(@args()args",{"_index":605,"title":{},"body":{"classes/PatientResolver.html":{}}}],["deletepatient(@param",{"_index":469,"title":{},"body":{"controllers/PatientController.html":{}}}],["deletepatient(args",{"_index":573,"title":{},"body":{"classes/PatientResolver.html":{}}}],["deletepatient(key",{"_index":548,"title":{},"body":{"injectables/PatientRepository.html":{},"injectables/PatientsService.html":{}}}],["deletepatient(params",{"_index":439,"title":{},"body":{"controllers/PatientController.html":{}}}],["deletepatientcommand",{"_index":174,"title":{"classes/DeletePatientCommand.html":{}},"body":{"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"injectables/PatientsService.html":{},"coverage.html":{}}}],["deletepatientcommand(key",{"_index":803,"title":{},"body":{"injectables/PatientsService.html":{}}}],["deletepatienthandler",{"_index":177,"title":{"classes/DeletePatientHandler.html":{}},"body":{"classes/DeletePatientHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deletepatientview",{"_index":639,"title":{},"body":{"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"injectables/PatientViewRepository.html":{},"injectables/PatientsService.html":{}}}],["deletepatientview(key",{"_index":738,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["deletepatientview(parsed",{"_index":671,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["deletepatientview(patientdb",{"_index":786,"title":{},"body":{"injectables/PatientsService.html":{}}}],["deletepatientviewcommand",{"_index":185,"title":{"classes/DeletePatientViewCommand.html":{}},"body":{"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"injectables/PatientsService.html":{},"coverage.html":{}}}],["deletepatientviewcommand(patientdb",{"_index":808,"title":{},"body":{"injectables/PatientsService.html":{}}}],["deletepatientviewevent",{"_index":710,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["deletepatientviewhandler",{"_index":188,"title":{"classes/DeletePatientViewHandler.html":{}},"body":{"classes/DeletePatientViewHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":26,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":436,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["destroyed",{"_index":366,"title":{},"body":{"injectables/KafkaService.html":{}}}],["details",{"_index":127,"title":{},"body":{"classes/CreatePatientHandler.html":{},"index.html":{}}}],["dev",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":901,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":899,"title":{},"body":{"index.html":{}}}],["disconnect",{"_index":267,"title":{},"body":{"injectables/KafkaService.html":{}}}],["document",{"_index":519,"title":{},"body":{"interfaces/PatientInterface.html":{}}}],["documentation",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":946,"title":{},"body":{"index.html":{}}}],["don't",{"_index":944,"title":{},"body":{"index.html":{}}}],["dtos/patient.dto",{"_index":81,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientViewCommand.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdatedEvent.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientViewCommand.html":{}}}],["eachmessage",{"_index":335,"title":{},"body":{"injectables/KafkaService.html":{}}}],["easier",{"_index":921,"title":{},"body":{"index.html":{}}}],["entered",{"_index":927,"title":{},"body":{"index.html":{}}}],["env",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["envdevelopmentname",{"_index":830,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":912,"title":{},"body":{"index.html":{}}}],["environmental",{"_index":929,"title":{},"body":{"index.html":{}}}],["err",{"_index":704,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["error",{"_index":324,"title":{},"body":{"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"injectables/PatientViewConsumer.html":{}}}],["error.stack",{"_index":326,"title":{},"body":{"injectables/KafkaService.html":{},"injectables/MongooseService.html":{}}}],["event",{"_index":132,"title":{},"body":{"classes/CreatePatientHandler.html":{},"injectables/KafkaService.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientModel.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"miscellaneous/variables.html":{}}}],["event.body",{"_index":498,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["event.body.patientid",{"_index":620,"title":{},"body":{"injectables/PatientSagas.html":{}}}],["event.key",{"_index":732,"title":{},"body":{"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["event.patientdb",{"_index":722,"title":{},"body":{"classes/PatientViewCreatedHandler.html":{}}}],["event_store_settings",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventdto",{"_index":136,"title":{"classes/EventDto.html":{}},"body":{"classes/CreatePatientViewCommand.html":{},"classes/DeletePatientViewCommand.html":{},"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{},"injectables/PatientViewConsumer.html":{},"injectables/PatientViewRepository.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientViewCommand.html":{},"coverage.html":{}}}],["eventhandlers",{"_index":768,"title":{},"body":{"modules/PatientsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventpublisher",{"_index":101,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["events",{"_index":129,"title":{},"body":{"classes/CreatePatientHandler.html":{},"injectables/PatientSagas.html":{}}}],["events$.pipe",{"_index":616,"title":{},"body":{"injectables/PatientSagas.html":{}}}],["events/handlers/index",{"_index":769,"title":{},"body":{"modules/PatientsModule.html":{}}}],["events/impl/patient",{"_index":533,"title":{},"body":{"classes/PatientModel.html":{},"classes/PatientView.html":{}}}],["eventshandler",{"_index":491,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["eventshandler(patientcreatedevent",{"_index":496,"title":{},"body":{"classes/PatientCreatedHandler.html":{}}}],["eventshandler(patientdeletedevent",{"_index":511,"title":{},"body":{"classes/PatientDeletedHandler.html":{}}}],["eventshandler(patientupdatedevent",{"_index":635,"title":{},"body":{"classes/PatientUpdatedHandler.html":{}}}],["eventshandler(patientviewcreatedevent",{"_index":720,"title":{},"body":{"classes/PatientViewCreatedHandler.html":{}}}],["eventshandler(patientviewdeletedevent",{"_index":730,"title":{},"body":{"classes/PatientViewDeletedHandler.html":{}}}],["eventshandler(patientviewupdatedevent",{"_index":755,"title":{},"body":{"classes/PatientViewUpdatedHandler.html":{}}}],["eventstream",{"_index":686,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["eventstream.subscribe((parsed",{"_index":690,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["eventtype",{"_index":223,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedHandler.html":{},"injectables/PatientViewConsumer.html":{}}}],["exception",{"_index":583,"title":{},"body":{"classes/PatientResolver.html":{},"injectables/PatientViewConsumer.html":{}}}],["execute",{"_index":97,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["execute(command",{"_index":108,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["execute(query",{"_index":230,"title":{},"body":{"classes/FindAllPatientsHandler.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"modules/DatabaseModule.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["exports",{"_index":167,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["express",{"_index":592,"title":{},"body":{"classes/PatientResolver.html":{},"dependencies.html":{}}}],["extends",{"_index":217,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"classes/PatientUpdate.html":{},"classes/PatientView.html":{}}}],["false",{"_index":353,"title":{},"body":{"injectables/KafkaService.html":{},"injectables/PatientViewConsumer.html":{}}}],["field",{"_index":196,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["field((type",{"_index":203,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["field(undefined",{"_index":253,"title":{},"body":{"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["field({nullable",{"_index":256,"title":{},"body":{"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientUpdate.html":{}}}],["fields",{"_index":218,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"modules/DatabaseModule.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":248,"title":{},"body":{"classes/FindAllPatientsHandler.html":{},"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["find(args",{"_index":393,"title":{},"body":{"injectables/MongooseService.html":{}}}],["findall",{"_index":383,"title":{},"body":{"injectables/MongooseService.html":{},"injectables/PatientRepository.html":{}}}],["findallpatients",{"_index":777,"title":{},"body":{"injectables/PatientsService.html":{}}}],["findallpatientshandler",{"_index":224,"title":{"classes/FindAllPatientsHandler.html":{}},"body":{"classes/FindAllPatientsHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["findallpatientsquery",{"_index":231,"title":{"classes/FindAllPatientsQuery.html":{}},"body":{"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"injectables/PatientsService.html":{},"coverage.html":{}}}],["findeventstream",{"_index":268,"title":{},"body":{"injectables/KafkaService.html":{},"classes/PatientResolver.html":{}}}],["findeventstream(@args()args",{"_index":599,"title":{},"body":{"classes/PatientResolver.html":{}}}],["findeventstream(args",{"_index":575,"title":{},"body":{"classes/PatientResolver.html":{}}}],["findeventstream(key",{"_index":283,"title":{},"body":{"injectables/KafkaService.html":{}}}],["finding",{"_index":481,"title":{},"body":{"classes/PatientCreatedEvent.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewUpdatedEvent.html":{}}}],["findonepatient",{"_index":430,"title":{},"body":{"controllers/PatientController.html":{}}}],["findonepatient(@param",{"_index":474,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["findonepatient(patientid",{"_index":443,"title":{},"body":{"controllers/PatientController.html":{}}}],["findpatients",{"_index":431,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["findpatients(@args()args",{"_index":595,"title":{},"body":{"classes/PatientResolver.html":{}}}],["findpatients(args",{"_index":578,"title":{},"body":{"classes/PatientResolver.html":{}}}],["finishedbooting",{"_index":666,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["firstname",{"_index":207,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientUpdate.html":{},"classes/PatientView.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":913,"title":{},"body":{"index.html":{}}}],["found",{"_index":919,"title":{},"body":{"index.html":{}}}],["frombeginning",{"_index":333,"title":{},"body":{"injectables/KafkaService.html":{}}}],["function",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":891,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(':patientid",{"_index":473,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["geteventstore",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["gethello",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":893,"title":{"index.html":{}},"body":{}}],["graphql",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"injectables/KafkaService.html":{},"dependencies.html":{},"index.html":{}}}],["graphql/type/definition",{"_index":587,"title":{},"body":{"classes/PatientResolver.html":{}}}],["graphqlmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["groupid",{"_index":374,"title":{},"body":{"injectables/KafkaService.html":{}}}],["groupidprefix",{"_index":310,"title":{},"body":{"injectables/KafkaService.html":{}}}],["guide",{"_index":916,"title":{},"body":{"index.html":{}}}],["hand",{"_index":88,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientViewCommand.html":{},"classes/DeletePatientViewCommand.html":{},"classes/UpdatePatientViewCommand.html":{}}}],["handle",{"_index":487,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["handle(event",{"_index":489,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["handler",{"_index":482,"title":{},"body":{"classes/PatientCreatedEvent.html":{},"injectables/PatientRepository.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewDeletedEvent.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{}}}],["hello",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":213,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{},"index.html":{}}}],["hold",{"_index":700,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["host",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hostname",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpport",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icommand",{"_index":64,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientViewCommand.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientViewCommand.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientViewCommand.html":{}}}],["icommandhandler",{"_index":93,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["id",{"_index":200,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientModel.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{}}}],["identifier",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["ievent",{"_index":236,"title":{},"body":{"classes/FindAllPatientsHandler.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewUpdatedEvent.html":{}}}],["ieventhandler",{"_index":486,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["if(!mongoose.isvalidobjectid(args._id",{"_index":606,"title":{},"body":{"classes/PatientResolver.html":{}}}],["impl/create",{"_index":112,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{}}}],["impl/delete",{"_index":181,"title":{},"body":{"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{}}}],["impl/find",{"_index":239,"title":{},"body":{"classes/FindAllPatientsHandler.html":{}}}],["impl/patient",{"_index":492,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["impl/update",{"_index":813,"title":{},"body":{"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["implements",{"_index":63,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"injectables/KafkaService.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"modules/DatabaseModule.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{}}}],["index",{"_index":65,"title":{"index.html":{}},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":531,"title":{},"body":{"classes/PatientModel.html":{},"classes/PatientView.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"modules/DatabaseModule.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["inherited",{"_index":254,"title":{},"body":{"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientUpdate.html":{}}}],["initiated",{"_index":702,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["inject",{"_index":241,"title":{},"body":{"classes/FindAllPatientsHandler.html":{},"injectables/MongooseService.html":{},"miscellaneous/variables.html":{}}}],["inject('patient_model",{"_index":402,"title":{},"body":{"injectables/MongooseService.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AppService.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"injectables/PatientRepository.html":{},"injectables/PatientSagas.html":{},"injectables/PatientViewConsumer.html":{},"injectables/PatientViewRepository.html":{},"injectables/PatientsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"injectables/PatientRepository.html":{},"injectables/PatientSagas.html":{},"injectables/PatientViewConsumer.html":{},"injectables/PatientViewRepository.html":{},"injectables/PatientsService.html":{},"coverage.html":{}}}],["injectables",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"injectables/PatientRepository.html":{},"injectables/PatientSagas.html":{},"injectables/PatientViewConsumer.html":{},"injectables/PatientViewRepository.html":{},"injectables/PatientsService.html":{},"overview.html":{}}}],["installation",{"_index":903,"title":{},"body":{"index.html":{}}}],["installsetup",{"_index":905,"title":{},"body":{"index.html":{}}}],["installsubscriptionhandlers",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":246,"title":{"interfaces/PatientInterface.html":{}},"body":{"classes/FindAllPatientsHandler.html":{},"interfaces/PatientInterface.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":517,"title":{},"body":{"interfaces/PatientInterface.html":{}}}],["interfaces/patient.interface",{"_index":401,"title":{},"body":{"injectables/MongooseService.html":{}}}],["iquery",{"_index":237,"title":{},"body":{"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{}}}],["iqueryhandler",{"_index":227,"title":{},"body":{"classes/FindAllPatientsHandler.html":{}}}],["join",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["join(process.cwd",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["json",{"_index":931,"title":{},"body":{"index.html":{}}}],["json.parse(bufferkey.tostring",{"_index":344,"title":{},"body":{"injectables/KafkaService.html":{}}}],["json.parse(key.tostring",{"_index":355,"title":{},"body":{"injectables/KafkaService.html":{}}}],["json.parse(value.tostring",{"_index":345,"title":{},"body":{"injectables/KafkaService.html":{}}}],["json.stringify(body",{"_index":316,"title":{},"body":{"injectables/KafkaService.html":{}}}],["json.stringify(key._id",{"_index":314,"title":{},"body":{"injectables/KafkaService.html":{}}}],["json.stringify(parsed",{"_index":358,"title":{},"body":{"injectables/KafkaService.html":{}}}],["kafka",{"_index":118,"title":{},"body":{"classes/CreatePatientHandler.html":{},"injectables/KafkaService.html":{},"index.html":{}}}],["kafka/src/kafka.service",{"_index":235,"title":{},"body":{"classes/FindAllPatientsHandler.html":{},"injectables/PatientRepository.html":{}}}],["kafka_brokers",{"_index":932,"title":{},"body":{"index.html":{}}}],["kafka_client_id",{"_index":933,"title":{},"body":{"index.html":{}}}],["kafka_topic",{"_index":934,"title":{},"body":{"index.html":{}}}],["kafkabodydto",{"_index":194,"title":{"classes/KafkaBodyDto.html":{}},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"coverage.html":{}}}],["kafkajs",{"_index":297,"title":{},"body":{"injectables/KafkaService.html":{},"dependencies.html":{},"index.html":{}}}],["kafkapubsub",{"_index":298,"title":{},"body":{"injectables/KafkaService.html":{}}}],["kafkapubsub.create",{"_index":308,"title":{},"body":{"injectables/KafkaService.html":{}}}],["kafkaservice",{"_index":163,"title":{"injectables/KafkaService.html":{}},"body":{"modules/DatabaseModule.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdatedHandler.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":69,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{}}}],["keyjson",{"_index":341,"title":{},"body":{"injectables/KafkaService.html":{}}}],["know",{"_index":945,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":208,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientUpdate.html":{},"classes/PatientView.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":446,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["literal",{"_index":440,"title":{},"body":{"controllers/PatientController.html":{}}}],["localhost:9092",{"_index":306,"title":{},"body":{"injectables/KafkaService.html":{},"index.html":{}}}],["logger",{"_index":94,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["logger('createpatienthandler",{"_index":107,"title":{},"body":{"classes/CreatePatientHandler.html":{}}}],["logger('findallpatientsquery",{"_index":229,"title":{},"body":{"classes/FindAllPatientsHandler.html":{}}}],["logger('kafkaservice",{"_index":292,"title":{},"body":{"injectables/KafkaService.html":{}}}],["logger('mongooseservice",{"_index":399,"title":{},"body":{"injectables/MongooseService.html":{}}}],["logger.error(`bridged",{"_index":362,"title":{},"body":{"injectables/KafkaService.html":{}}}],["logger.error(err",{"_index":705,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["logger.log(\"payload",{"_index":337,"title":{},"body":{"injectables/KafkaService.html":{}}}],["logger.log('async",{"_index":815,"title":{},"body":{"classes/UpdatePatientHandler.html":{}}}],["logger.log('at",{"_index":563,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["logger.log(body",{"_index":414,"title":{},"body":{"injectables/MongooseService.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientUpdatedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["logger.log(command.patientid",{"_index":183,"title":{},"body":{"classes/DeletePatientHandler.html":{}}}],["logger.log(event.key",{"_index":513,"title":{},"body":{"classes/PatientDeletedHandler.html":{}}}],["logger.log(event.patientdb",{"_index":723,"title":{},"body":{"classes/PatientViewCreatedHandler.html":{}}}],["logger.log(eventdto",{"_index":140,"title":{},"body":{"classes/CreatePatientViewCommand.html":{}}}],["logger.log(key",{"_index":419,"title":{},"body":{"injectables/MongooseService.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["logger.log(parsed",{"_index":347,"title":{},"body":{"injectables/KafkaService.html":{},"injectables/PatientViewConsumer.html":{}}}],["logger.log(parsed.body.eventtype",{"_index":691,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["logger.log(patientdb",{"_index":716,"title":{},"body":{"classes/PatientViewCreatedEvent.html":{},"injectables/PatientsService.html":{}}}],["logger.log(saved",{"_index":417,"title":{},"body":{"injectables/MongooseService.html":{}}}],["logger.log(sendbody",{"_index":318,"title":{},"body":{"injectables/KafkaService.html":{}}}],["logger.log(sendkey",{"_index":317,"title":{},"body":{"injectables/KafkaService.html":{}}}],["logger.log(sendpackage",{"_index":622,"title":{},"body":{"injectables/PatientSagas.html":{}}}],["logger.log(this.kafkaservice",{"_index":689,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["logger.log(this.key",{"_index":657,"title":{},"body":{"classes/PatientView.html":{}}}],["logger.log({...event.body",{"_index":756,"title":{},"body":{"classes/PatientViewUpdatedHandler.html":{}}}],["logger.log({...event.key",{"_index":731,"title":{},"body":{"classes/PatientViewDeletedHandler.html":{}}}],["map((event",{"_index":618,"title":{},"body":{"injectables/PatientSagas.html":{}}}],["matching",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"modules/DatabaseModule.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":951,"title":{},"body":{"index.html":{}}}],["message",{"_index":338,"title":{},"body":{"injectables/KafkaService.html":{},"injectables/PatientViewConsumer.html":{}}}],["message.key",{"_index":340,"title":{},"body":{"injectables/KafkaService.html":{}}}],["messages",{"_index":321,"title":{},"body":{"injectables/KafkaService.html":{}}}],["metadata",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":95,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["microservice",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["microservices",{"_index":900,"title":{},"body":{"index.html":{}}}],["middleware",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["mikro",{"_index":683,"title":{},"body":{"injectables/PatientViewConsumer.html":{},"dependencies.html":{}}}],["min",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":890,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":939,"title":{},"body":{"index.html":{}}}],["model",{"_index":116,"title":{},"body":{"classes/CreatePatientHandler.html":{},"injectables/MongooseService.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewUpdatedEvent.html":{}}}],["models/patient",{"_index":147,"title":{},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["models/patient.model",{"_index":553,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["module",{"_index":23,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{}},"body":{"modules/AppModule.html":{},"classes/CreatePatientHandler.html":{},"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{}}}],["modules",{"_index":25,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":588,"title":{},"body":{"classes/PatientResolver.html":{},"dependencies.html":{},"index.html":{}}}],["mongodb_url=mongodb://127.0.0.1:27017/patients",{"_index":935,"title":{},"body":{"index.html":{}}}],["mongoexceptionconverter",{"_index":682,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["mongoose",{"_index":202,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"injectables/PatientViewConsumer.html":{},"dependencies.html":{}}}],["mongoose.connect(process.env.mongodb_url",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.isvalidobjectid(parsed.key._id",{"_index":699,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["mongoose.mongo.objectid.createfromhexstring(params.patientid",{"_index":466,"title":{},"body":{"controllers/PatientController.html":{}}}],["mongoose.mongo.objectid.createfromtime(date.now",{"_index":463,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["mongoose.schema",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.types.objectid",{"_index":206,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"miscellaneous/variables.html":{}}}],["mongooseservice",{"_index":164,"title":{"injectables/MongooseService.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/MongooseService.html":{},"classes/PatientResolver.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"coverage.html":{},"overview.html":{}}}],["monogodb",{"_index":908,"title":{},"body":{"index.html":{}}}],["more",{"_index":210,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["mutation",{"_index":585,"title":{},"body":{"classes/PatientResolver.html":{}}}],["mutation(returns",{"_index":601,"title":{},"body":{"classes/PatientResolver.html":{}}}],["mutation(undefined",{"_index":571,"title":{},"body":{"classes/PatientResolver.html":{}}}],["name",{"_index":77,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":926,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":896,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"modules/DatabaseModule.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["nestjs/cqrs",{"_index":82,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientModel.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientModel.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":457,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{},"dependencies.html":{}}}],["new",{"_index":106,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedHandler.html":{},"injectables/PatientViewConsumer.html":{},"injectables/PatientViewRepository.html":{},"injectables/PatientsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":897,"title":{},"body":{"index.html":{}}}],["npm",{"_index":904,"title":{},"body":{"index.html":{}}}],["null",{"_index":561,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["nullable",{"_index":204,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["object",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectid",{"_index":412,"title":{},"body":{"injectables/MongooseService.html":{},"classes/PatientResolver.html":{},"injectables/PatientViewConsumer.html":{}}}],["objectid(key._id",{"_index":422,"title":{},"body":{"injectables/MongooseService.html":{}}}],["objecttype",{"_index":201,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientModel.html":{},"classes/PatientUpdate.html":{}}}],["observable",{"_index":149,"title":{},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"injectables/PatientSagas.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["oftype(patientcreatedevent",{"_index":617,"title":{},"body":{"injectables/PatientSagas.html":{}}}],["onmoduledestroy",{"_index":269,"title":{},"body":{"injectables/KafkaService.html":{},"injectables/PatientViewConsumer.html":{}}}],["onmoduleinit",{"_index":270,"title":{},"body":{"injectables/KafkaService.html":{},"injectables/PatientViewConsumer.html":{}}}],["optional",{"_index":79,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["options",{"_index":211,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["orm/core",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["orm/mongodb",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["orm/mongodb/mongoexceptionconverter",{"_index":684,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["orm/nestjs",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["out",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{},"overview.html":{}}}],["overview",{"_index":956,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":853,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":454,"title":{},"body":{"controllers/PatientController.html":{}}}],["parameters",{"_index":76,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["params",{"_index":220,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["parsed",{"_index":343,"title":{},"body":{"injectables/KafkaService.html":{},"injectables/PatientViewConsumer.html":{}}}],["parsed.body.eventtype",{"_index":693,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["parts",{"_index":540,"title":{},"body":{"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientView.html":{},"injectables/PatientViewRepository.html":{}}}],["passed",{"_index":798,"title":{},"body":{"injectables/PatientsService.html":{}}}],["passing",{"_index":539,"title":{},"body":{"classes/PatientModel.html":{},"classes/PatientView.html":{}}}],["password",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["patient",{"_index":84,"title":{"classes/Patient.html":{}},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{}}}],["patient.'})@delete(':patientid",{"_index":441,"title":{},"body":{"controllers/PatientController.html":{}}}],["patient.'})@get(':patientid",{"_index":444,"title":{},"body":{"controllers/PatientController.html":{}}}],["patient.'})@post",{"_index":437,"title":{},"body":{"controllers/PatientController.html":{}}}],["patient.'})@put(':patientid",{"_index":451,"title":{},"body":{"controllers/PatientController.html":{}}}],["patient.command",{"_index":113,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/DeletePatientHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientHandler.html":{}}}],["patient.command.ts",{"_index":62,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/DeletePatientCommand.html":{},"classes/UpdatePatientCommand.html":{},"coverage.html":{}}}],["patient.command.ts:4",{"_index":75,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/DeletePatientCommand.html":{},"classes/UpdatePatientCommand.html":{}}}],["patient.command.ts:5",{"_index":810,"title":{},"body":{"classes/UpdatePatientCommand.html":{}}}],["patient.command.ts:6",{"_index":80,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/DeletePatientCommand.html":{}}}],["patient.commit",{"_index":133,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/UpdatePatientHandler.html":{}}}],["patient.createpatient",{"_index":558,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["patient.deletepatient",{"_index":562,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["patient.findallpatients",{"_index":564,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["patient.handler.ts",{"_index":92,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/UpdatePatientHandler.html":{},"coverage.html":{}}}],["patient.handler.ts:10",{"_index":102,"title":{},"body":{"classes/CreatePatientHandler.html":{}}}],["patient.handler.ts:15",{"_index":180,"title":{},"body":{"classes/DeletePatientHandler.html":{},"classes/UpdatePatientHandler.html":{}}}],["patient.handler.ts:19",{"_index":109,"title":{},"body":{"classes/CreatePatientHandler.html":{}}}],["patient.handler.ts:9",{"_index":179,"title":{},"body":{"classes/DeletePatientHandler.html":{},"classes/UpdatePatientHandler.html":{}}}],["patient.setdata(key",{"_index":557,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["patient.updatepatient",{"_index":560,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["patient:30",{"_index":255,"title":{},"body":{"classes/KafkaBodyDto.html":{}}}],["patient_model",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patientconsumer.createpatientview",{"_index":706,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["patientconsumer.deletepatientview",{"_index":712,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["patientconsumer.updatepatientview",{"_index":709,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["patientcontroller",{"_index":425,"title":{"controllers/PatientController.html":{}},"body":{"controllers/PatientController.html":{},"modules/PatientsModule.html":{},"coverage.html":{}}}],["patientcreated",{"_index":615,"title":{},"body":{"injectables/PatientSagas.html":{}}}],["patientcreatedevent",{"_index":475,"title":{"classes/PatientCreatedEvent.html":{}},"body":{"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientModel.html":{},"injectables/PatientSagas.html":{},"injectables/PatientViewConsumer.html":{},"coverage.html":{}}}],["patientcreatedevent(this.key",{"_index":542,"title":{},"body":{"classes/PatientModel.html":{}}}],["patientcreatedhandler",{"_index":483,"title":{"classes/PatientCreatedHandler.html":{}},"body":{"classes/PatientCreatedHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patientdb",{"_index":713,"title":{},"body":{"classes/PatientViewCreatedEvent.html":{},"injectables/PatientsService.html":{}}}],["patientdbdto",{"_index":390,"title":{},"body":{"injectables/MongooseService.html":{}}}],["patientdbdto.tostring",{"_index":409,"title":{},"body":{"injectables/MongooseService.html":{}}}],["patientdeletedevent",{"_index":500,"title":{"classes/PatientDeletedEvent.html":{}},"body":{"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientModel.html":{},"injectables/PatientViewConsumer.html":{},"coverage.html":{}}}],["patientdeletedevent(this.key",{"_index":544,"title":{},"body":{"classes/PatientModel.html":{}}}],["patientdeletedhandler",{"_index":504,"title":{"classes/PatientDeletedHandler.html":{}},"body":{"classes/PatientDeletedHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patientdetails",{"_index":73,"title":{"classes/PatientDetails.html":{}},"body":{"classes/CreatePatientCommand.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/KafkaBodyDto.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"coverage.html":{}}}],["patientdetails:16",{"_index":257,"title":{},"body":{"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientUpdate.html":{}}}],["patientdetails:18",{"_index":258,"title":{},"body":{"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientUpdate.html":{}}}],["patientdto",{"_index":450,"title":{},"body":{"controllers/PatientController.html":{}}}],["patientid",{"_index":72,"title":{"classes/PatientId.html":{}},"body":{"classes/CreatePatientCommand.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientView.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"coverage.html":{}}}],["patientinterface",{"_index":400,"title":{"interfaces/PatientInterface.html":{}},"body":{"injectables/MongooseService.html":{},"interfaces/PatientInterface.html":{},"coverage.html":{}}}],["patientmodel",{"_index":387,"title":{"classes/PatientModel.html":{}},"body":{"injectables/MongooseService.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"coverage.html":{}}}],["patientmodel(key",{"_index":559,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["patientmodel(undefined",{"_index":556,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["patientquery",{"_index":247,"title":{},"body":{"classes/FindAllPatientsHandler.html":{}}}],["patientrepository",{"_index":99,"title":{"injectables/PatientRepository.html":{}},"body":{"classes/CreatePatientHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/PatientRepository.html":{},"modules/PatientsModule.html":{},"classes/UpdatePatientHandler.html":{},"coverage.html":{},"overview.html":{}}}],["patientresolver",{"_index":565,"title":{"classes/PatientResolver.html":{}},"body":{"classes/PatientResolver.html":{},"modules/PatientsModule.html":{},"coverage.html":{}}}],["patients",{"_index":311,"title":{},"body":{"injectables/KafkaService.html":{},"controllers/PatientController.html":{},"classes/PatientResolver.html":{},"index.html":{}}}],["patients.'})@get",{"_index":447,"title":{},"body":{"controllers/PatientController.html":{}}}],["patients.controller",{"_index":765,"title":{},"body":{"modules/PatientsModule.html":{}}}],["patients.handler.ts",{"_index":226,"title":{},"body":{"classes/FindAllPatientsHandler.html":{},"coverage.html":{}}}],["patients.handler.ts:19",{"_index":228,"title":{},"body":{"classes/FindAllPatientsHandler.html":{}}}],["patients.handler.ts:24",{"_index":232,"title":{},"body":{"classes/FindAllPatientsHandler.html":{}}}],["patients.query",{"_index":240,"title":{},"body":{"classes/FindAllPatientsHandler.html":{},"injectables/PatientsService.html":{}}}],["patients.query.ts",{"_index":251,"title":{},"body":{"classes/FindAllPatientsQuery.html":{},"coverage.html":{}}}],["patients.resolver",{"_index":775,"title":{},"body":{"modules/PatientsModule.html":{}}}],["patients/patient.module",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["patientsaga",{"_index":623,"title":{},"body":{"injectables/PatientSagas.html":{}}}],["patientsagas",{"_index":612,"title":{"injectables/PatientSagas.html":{}},"body":{"injectables/PatientSagas.html":{},"modules/PatientsModule.html":{},"coverage.html":{},"overview.html":{}}}],["patientschema",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["patientservice",{"_index":85,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientViewCommand.html":{},"classes/DeletePatientViewCommand.html":{},"classes/UpdatePatientViewCommand.html":{}}}],["patientsmodule",{"_index":29,"title":{"modules/PatientsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PatientsModule.html":{},"modules.html":{},"overview.html":{}}}],["patientsproviders",{"_index":172,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patientsservice",{"_index":458,"title":{"injectables/PatientsService.html":{}},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{},"injectables/PatientViewConsumer.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"coverage.html":{},"overview.html":{}}}],["patientupdate",{"_index":222,"title":{"classes/PatientUpdate.html":{}},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"coverage.html":{}}}],["patientupdatedevent",{"_index":534,"title":{"classes/PatientUpdatedEvent.html":{}},"body":{"classes/PatientModel.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"injectables/PatientViewConsumer.html":{},"coverage.html":{}}}],["patientupdatedevent(this.key",{"_index":543,"title":{},"body":{"classes/PatientModel.html":{}}}],["patientupdatedhandler",{"_index":631,"title":{"classes/PatientUpdatedHandler.html":{}},"body":{"classes/PatientUpdatedHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patientview",{"_index":146,"title":{"classes/PatientView.html":{}},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewRepository.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{}}}],["patientview.commit",{"_index":158,"title":{},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["patientview.createpatientview",{"_index":744,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["patientview.deletepatientview",{"_index":748,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["patientview.setdata(key",{"_index":743,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["patientview.updatepatientview",{"_index":746,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["patientviewconsumer",{"_index":664,"title":{"injectables/PatientViewConsumer.html":{}},"body":{"injectables/PatientViewConsumer.html":{},"modules/PatientsModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["patientviewcreatedevent",{"_index":648,"title":{"classes/PatientViewCreatedEvent.html":{}},"body":{"classes/PatientView.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"coverage.html":{}}}],["patientviewcreatedevent(this.patientdb",{"_index":659,"title":{},"body":{"classes/PatientView.html":{}}}],["patientviewcreatedhandler",{"_index":717,"title":{"classes/PatientViewCreatedHandler.html":{}},"body":{"classes/PatientViewCreatedHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patientviewdeletedevent",{"_index":649,"title":{"classes/PatientViewDeletedEvent.html":{}},"body":{"classes/PatientView.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"coverage.html":{}}}],["patientviewdeletedevent(this.key",{"_index":663,"title":{},"body":{"classes/PatientView.html":{}}}],["patientviewdeletedhandler",{"_index":727,"title":{"classes/PatientViewDeletedHandler.html":{}},"body":{"classes/PatientViewDeletedHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patientviewmodel",{"_index":742,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["patientviewmodel.createpatientview",{"_index":658,"title":{},"body":{"classes/PatientView.html":{}}}],["patientviewmodel.deletepatientview",{"_index":662,"title":{},"body":{"classes/PatientView.html":{}}}],["patientviewmodel.updatepatientview",{"_index":660,"title":{},"body":{"classes/PatientView.html":{}}}],["patientviewrepository",{"_index":143,"title":{"injectables/PatientViewRepository.html":{}},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"injectables/PatientViewRepository.html":{},"modules/PatientsModule.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{},"overview.html":{}}}],["patientviewupdatedevent",{"_index":647,"title":{"classes/PatientViewUpdatedEvent.html":{}},"body":{"classes/PatientView.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"coverage.html":{}}}],["patientviewupdatedevent(this.key",{"_index":661,"title":{},"body":{"classes/PatientView.html":{}}}],["patientviewupdatedhandler",{"_index":751,"title":{"classes/PatientViewUpdatedHandler.html":{}},"body":{"classes/PatientViewUpdatedHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patientviewupdatehandler",{"_index":757,"title":{},"body":{"classes/PatientViewUpdatedHandler.html":{}}}],["payload",{"_index":336,"title":{},"body":{"injectables/KafkaService.html":{}}}],["places",{"_index":216,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["platform",{"_index":918,"title":{},"body":{"index.html":{}}}],["pooloptions",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":453,"title":{},"body":{"controllers/PatientController.html":{}}}],["prefix",{"_index":427,"title":{},"body":{"controllers/PatientController.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":117,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdatedHandler.html":{},"injectables/PatientViewConsumer.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["process.env.app_api_explorer_path",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.app_description",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.app_host",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.app_name",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.app_port",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.app_prefix",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.app_title",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.app_version",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.event_store_credentials_password",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.event_store_credentials_username",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.event_store_hostname",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.event_store_http_port",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.event_store_pooloptions_max",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.event_store_pooloptions_min",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.event_store_protocol",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.event_store_tcp_port",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.kafka_brokers?.split",{"_index":305,"title":{},"body":{"injectables/KafkaService.html":{}}}],["process.env.kafka_client_id",{"_index":302,"title":{},"body":{"injectables/KafkaService.html":{}}}],["process.env.kafka_topic",{"_index":295,"title":{},"body":{"injectables/KafkaService.html":{}}}],["process.env.node_env",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producer",{"_index":261,"title":{},"body":{"injectables/KafkaService.html":{}}}],["producerconfig",{"_index":280,"title":{},"body":{"injectables/KafkaService.html":{}}}],["production",{"_index":941,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":249,"title":{},"body":{"classes/FindAllPatientsHandler.html":{},"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientViewConsumer.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":66,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientViewCommand.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientViewCommand.html":{}}}],["protocol",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":166,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{}}}],["providers/database.providers",{"_index":169,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{}}}],["providers/patients.provider",{"_index":173,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{}}}],["public",{"_index":67,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientViewCommand.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientViewCommand.html":{},"injectables/KafkaService.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientUpdatedEvent.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientViewCommand.html":{}}}],["publish",{"_index":271,"title":{},"body":{"injectables/KafkaService.html":{}}}],["publish(key",{"_index":288,"title":{},"body":{"injectables/KafkaService.html":{}}}],["publisher",{"_index":100,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["pubsub",{"_index":262,"title":{},"body":{"injectables/KafkaService.html":{}}}],["put",{"_index":455,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientRepository.html":{},"injectables/PatientViewRepository.html":{}}}],["put(':patientid",{"_index":465,"title":{},"body":{"controllers/PatientController.html":{}}}],["queries/handlers/index",{"_index":771,"title":{},"body":{"modules/PatientsModule.html":{}}}],["queries/impl/find",{"_index":796,"title":{},"body":{"injectables/PatientsService.html":{}}}],["query",{"_index":233,"title":{},"body":{"classes/FindAllPatientsHandler.html":{},"injectables/MongooseService.html":{},"classes/PatientResolver.html":{}}}],["query(returns",{"_index":594,"title":{},"body":{"classes/PatientResolver.html":{}}}],["query(undefined",{"_index":579,"title":{},"body":{"classes/PatientResolver.html":{}}}],["querybus",{"_index":780,"title":{},"body":{"injectables/PatientsService.html":{}}}],["queryhandler",{"_index":238,"title":{},"body":{"classes/FindAllPatientsHandler.html":{}}}],["queryhandler(findallpatientsquery",{"_index":243,"title":{},"body":{"classes/FindAllPatientsHandler.html":{}}}],["queryhandlers",{"_index":770,"title":{},"body":{"modules/PatientsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quick",{"_index":914,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["ready",{"_index":123,"title":{},"body":{"classes/CreatePatientHandler.html":{}}}],["really",{"_index":943,"title":{},"body":{"index.html":{}}}],["receives",{"_index":83,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientViewCommand.html":{},"classes/DeletePatientViewCommand.html":{},"classes/UpdatePatientViewCommand.html":{}}}],["recordid",{"_index":619,"title":{},"body":{"injectables/PatientSagas.html":{}}}],["reflect",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["reply",{"_index":418,"title":{},"body":{"injectables/MongooseService.html":{}}}],["repository",{"_index":103,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/PatientRepository.html":{},"injectables/PatientViewRepository.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["repository.deletepatient",{"_index":747,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["repository.updatepatient",{"_index":745,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["repository/patient",{"_index":152,"title":{},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"modules/PatientsModule.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["repository/patient.repository",{"_index":114,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/FindAllPatientsHandler.html":{},"modules/PatientsModule.html":{},"classes/UpdatePatientHandler.html":{}}}],["require('mongodb').objectid",{"_index":413,"title":{},"body":{"injectables/MongooseService.html":{}}}],["requires",{"_index":907,"title":{},"body":{"index.html":{}}}],["reset",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{},"overview.html":{}}}],["resolver",{"_index":327,"title":{},"body":{"injectables/KafkaService.html":{},"classes/PatientResolver.html":{}}}],["resolver.subscription.patients",{"_index":330,"title":{},"body":{"injectables/KafkaService.html":{}}}],["result",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"modules/DatabaseModule.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"modules/DatabaseModule.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"injectables/PatientViewConsumer.html":{},"injectables/PatientViewRepository.html":{},"injectables/PatientsService.html":{}}}],["returns",{"_index":110,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["rimraf",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":928,"title":{},"body":{"index.html":{}}}],["run",{"_index":937,"title":{},"body":{"index.html":{}}}],["running",{"_index":910,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":150,"title":{},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/PatientViewConsumer.html":{},"classes/UpdatePatientViewHandler.html":{},"dependencies.html":{}}}],["saga",{"_index":614,"title":{},"body":{"injectables/PatientSagas.html":{}}}],["sagas/patient.saga",{"_index":772,"title":{},"body":{"modules/PatientsModule.html":{}}}],["saved",{"_index":405,"title":{},"body":{"injectables/MongooseService.html":{}}}],["scafold",{"_index":898,"title":{},"body":{"index.html":{}}}],["schema",{"_index":215,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["see",{"_index":947,"title":{},"body":{"index.html":{}}}],["send",{"_index":126,"title":{},"body":{"classes/CreatePatientHandler.html":{}}}],["sendbody",{"_index":315,"title":{},"body":{"injectables/KafkaService.html":{}}}],["sending",{"_index":124,"title":{},"body":{"classes/CreatePatientHandler.html":{},"injectables/PatientsService.html":{}}}],["sendkey",{"_index":313,"title":{},"body":{"injectables/KafkaService.html":{}}}],["sendpackage",{"_index":621,"title":{},"body":{"injectables/PatientSagas.html":{}}}],["sends",{"_index":86,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/DeletePatientViewCommand.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/UpdatePatientViewCommand.html":{}}}],["server",{"_index":591,"title":{},"body":{"classes/PatientResolver.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":359,"title":{},"body":{"injectables/KafkaService.html":{}}}],["services",{"_index":925,"title":{},"body":{"index.html":{}}}],["services/kafka.service",{"_index":171,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdatedHandler.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{}}}],["services/mongoose.service",{"_index":170,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/PatientResolver.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{}}}],["services/patients.service",{"_index":459,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{},"injectables/PatientViewConsumer.html":{},"modules/PatientsModule.html":{}}}],["setdata",{"_index":522,"title":{},"body":{"classes/PatientModel.html":{},"classes/PatientView.html":{}}}],["setdata(key",{"_index":528,"title":{},"body":{"classes/PatientModel.html":{},"classes/PatientView.html":{}}}],["something",{"_index":948,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"modules/DatabaseModule.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/FindAllPatientsQuery.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientSagas.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"modules/PatientsModule.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["spin",{"_index":922,"title":{},"body":{"index.html":{}}}],["src/.../database.providers.ts",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":892,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../patient.schema.ts",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../patients.provider.ts",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":831,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/patients/commands/handlers/create",{"_index":91,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"coverage.html":{}}}],["src/patients/commands/handlers/delete",{"_index":178,"title":{},"body":{"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"coverage.html":{}}}],["src/patients/commands/handlers/index.ts",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/patients/commands/handlers/update",{"_index":812,"title":{},"body":{"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{}}}],["src/patients/commands/impl/create",{"_index":61,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientViewCommand.html":{},"coverage.html":{}}}],["src/patients/commands/impl/delete",{"_index":175,"title":{},"body":{"classes/DeletePatientCommand.html":{},"classes/DeletePatientViewCommand.html":{},"coverage.html":{}}}],["src/patients/commands/impl/update",{"_index":809,"title":{},"body":{"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientViewCommand.html":{},"coverage.html":{}}}],["src/patients/consumers/index.ts",{"_index":837,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/patients/consumers/patient.consumers.ts",{"_index":665,"title":{},"body":{"injectables/PatientViewConsumer.html":{},"coverage.html":{}}}],["src/patients/consumers/patient.consumers.ts:13",{"_index":668,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["src/patients/consumers/patient.consumers.ts:18",{"_index":680,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["src/patients/consumers/patient.consumers.ts:19",{"_index":673,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["src/patients/consumers/patient.consumers.ts:20",{"_index":674,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["src/patients/consumers/patient.consumers.ts:23",{"_index":679,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["src/patients/consumers/patient.consumers.ts:25",{"_index":675,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["src/patients/consumers/patient.consumers.ts:41",{"_index":670,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["src/patients/consumers/patient.consumers.ts:56",{"_index":677,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["src/patients/consumers/patient.consumers.ts:73",{"_index":672,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["src/patients/database.module.ts",{"_index":165,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/patients/dtos/patient.dto.ts",{"_index":193,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{},"coverage.html":{}}}],["src/patients/dtos/patient.dto.ts:16",{"_index":514,"title":{},"body":{"classes/PatientDetails.html":{}}}],["src/patients/dtos/patient.dto.ts:18",{"_index":515,"title":{},"body":{"classes/PatientDetails.html":{}}}],["src/patients/dtos/patient.dto.ts:30",{"_index":424,"title":{},"body":{"classes/Patient.html":{}}}],["src/patients/dtos/patient.dto.ts:37",{"_index":626,"title":{},"body":{"classes/PatientUpdate.html":{}}}],["src/patients/dtos/patient.dto.ts:44",{"_index":252,"title":{},"body":{"classes/KafkaBodyDto.html":{}}}],["src/patients/dtos/patient.dto.ts:48",{"_index":198,"title":{},"body":{"classes/EventDto.html":{}}}],["src/patients/dtos/patient.dto.ts:49",{"_index":197,"title":{},"body":{"classes/EventDto.html":{}}}],["src/patients/dtos/patient.dto.ts:9",{"_index":516,"title":{},"body":{"classes/PatientId.html":{}}}],["src/patients/dtos/patient.schema.ts",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/patients/events/handlers/index.ts",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/patients/events/handlers/patient",{"_index":484,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{},"coverage.html":{}}}],["src/patients/events/impl/patient",{"_index":476,"title":{},"body":{"classes/PatientCreatedEvent.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewUpdatedEvent.html":{},"coverage.html":{}}}],["src/patients/interfaces/patient.interface.ts",{"_index":518,"title":{},"body":{"interfaces/PatientInterface.html":{},"coverage.html":{}}}],["src/patients/models/patient",{"_index":636,"title":{},"body":{"classes/PatientView.html":{},"coverage.html":{}}}],["src/patients/models/patient.model.ts",{"_index":520,"title":{},"body":{"classes/PatientModel.html":{},"coverage.html":{}}}],["src/patients/models/patient.model.ts:11",{"_index":532,"title":{},"body":{"classes/PatientModel.html":{}}}],["src/patients/models/patient.model.ts:12",{"_index":525,"title":{},"body":{"classes/PatientModel.html":{}}}],["src/patients/models/patient.model.ts:19",{"_index":529,"title":{},"body":{"classes/PatientModel.html":{}}}],["src/patients/models/patient.model.ts:25",{"_index":526,"title":{},"body":{"classes/PatientModel.html":{}}}],["src/patients/models/patient.model.ts:30",{"_index":530,"title":{},"body":{"classes/PatientModel.html":{}}}],["src/patients/models/patient.model.ts:34",{"_index":527,"title":{},"body":{"classes/PatientModel.html":{}}}],["src/patients/patient.module.ts",{"_index":762,"title":{},"body":{"modules/PatientsModule.html":{}}}],["src/patients/patients.controller.ts",{"_index":426,"title":{},"body":{"controllers/PatientController.html":{},"coverage.html":{}}}],["src/patients/patients.controller.ts:24",{"_index":438,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patients/patients.controller.ts:37",{"_index":452,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patients/patients.controller.ts:52",{"_index":442,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patients/patients.controller.ts:63",{"_index":448,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patients/patients.controller.ts:71",{"_index":445,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patients/patients.resolver.ts",{"_index":566,"title":{},"body":{"classes/PatientResolver.html":{},"coverage.html":{}}}],["src/patients/patients.resolver.ts:14",{"_index":568,"title":{},"body":{"classes/PatientResolver.html":{}}}],["src/patients/patients.resolver.ts:19",{"_index":569,"title":{},"body":{"classes/PatientResolver.html":{}}}],["src/patients/patients.resolver.ts:27",{"_index":580,"title":{},"body":{"classes/PatientResolver.html":{}}}],["src/patients/patients.resolver.ts:32",{"_index":577,"title":{},"body":{"classes/PatientResolver.html":{}}}],["src/patients/patients.resolver.ts:42",{"_index":572,"title":{},"body":{"classes/PatientResolver.html":{}}}],["src/patients/patients.resolver.ts:53",{"_index":582,"title":{},"body":{"classes/PatientResolver.html":{}}}],["src/patients/patients.resolver.ts:65",{"_index":574,"title":{},"body":{"classes/PatientResolver.html":{}}}],["src/patients/providers/database.providers.ts",{"_index":846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/patients/providers/patients.provider.ts",{"_index":847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/patients/queries/handlers/find",{"_index":225,"title":{},"body":{"classes/FindAllPatientsHandler.html":{},"coverage.html":{}}}],["src/patients/queries/handlers/index.ts",{"_index":848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/patients/queries/impl/find",{"_index":250,"title":{},"body":{"classes/FindAllPatientsQuery.html":{},"coverage.html":{}}}],["src/patients/repository/patient",{"_index":734,"title":{},"body":{"injectables/PatientViewRepository.html":{},"coverage.html":{}}}],["src/patients/repository/patient.repository.ts",{"_index":545,"title":{},"body":{"injectables/PatientRepository.html":{},"coverage.html":{}}}],["src/patients/repository/patient.repository.ts:17",{"_index":552,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["src/patients/repository/patient.repository.ts:25",{"_index":549,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["src/patients/repository/patient.repository.ts:32",{"_index":550,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["src/patients/repository/patient.repository.ts:8",{"_index":547,"title":{},"body":{"injectables/PatientRepository.html":{}}}],["src/patients/sagas/patient.saga.ts",{"_index":613,"title":{},"body":{"injectables/PatientSagas.html":{},"coverage.html":{}}}],["src/patients/services/kafka.service",{"_index":509,"title":{},"body":{"classes/PatientDeletedHandler.html":{}}}],["src/patients/services/kafka.service.ts",{"_index":259,"title":{},"body":{"injectables/KafkaService.html":{},"coverage.html":{}}}],["src/patients/services/kafka.service.ts:105",{"_index":274,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:147",{"_index":285,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:152",{"_index":281,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:158",{"_index":277,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:167",{"_index":282,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:21",{"_index":293,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:22",{"_index":294,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:23",{"_index":290,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:24",{"_index":296,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:25",{"_index":291,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:26",{"_index":272,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:39",{"_index":286,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:41",{"_index":289,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/kafka.service.ts:59",{"_index":284,"title":{},"body":{"injectables/KafkaService.html":{}}}],["src/patients/services/mongoose.service.ts",{"_index":380,"title":{},"body":{"injectables/MongooseService.html":{},"coverage.html":{}}}],["src/patients/services/mongoose.service.ts:13",{"_index":386,"title":{},"body":{"injectables/MongooseService.html":{}}}],["src/patients/services/mongoose.service.ts:20",{"_index":389,"title":{},"body":{"injectables/MongooseService.html":{}}}],["src/patients/services/mongoose.service.ts:32",{"_index":396,"title":{},"body":{"injectables/MongooseService.html":{}}}],["src/patients/services/mongoose.service.ts:36",{"_index":398,"title":{},"body":{"injectables/MongooseService.html":{}}}],["src/patients/services/mongoose.service.ts:48",{"_index":392,"title":{},"body":{"injectables/MongooseService.html":{}}}],["src/patients/services/mongoose.service.ts:59",{"_index":394,"title":{},"body":{"injectables/MongooseService.html":{}}}],["src/patients/services/patients.service.ts",{"_index":776,"title":{},"body":{"injectables/PatientsService.html":{},"coverage.html":{}}}],["src/patients/services/patients.service.ts:13",{"_index":781,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/patients/services/patients.service.ts:17",{"_index":782,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/patients/services/patients.service.ts:22",{"_index":789,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/patients/services/patients.service.ts:26",{"_index":785,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/patients/services/patients.service.ts:30",{"_index":788,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/patients/services/patients.service.ts:34",{"_index":784,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/patients/services/patients.service.ts:41",{"_index":791,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/patients/services/patients.service.ts:48",{"_index":787,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/schema.gql",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":915,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":940,"title":{},"body":{"index.html":{}}}],["start:prodsupport",{"_index":942,"title":{},"body":{"index.html":{}}}],["startconsuming",{"_index":667,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["started",{"_index":894,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":408,"title":{},"body":{"injectables/MongooseService.html":{}}}],["statements",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":461,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["store",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stream",{"_index":331,"title":{},"body":{"injectables/KafkaService.html":{},"injectables/PatientViewConsumer.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"classes/PatientUpdate.html":{},"classes/PatientView.html":{},"miscellaneous/variables.html":{}}}],["stupid",{"_index":950,"title":{},"body":{"index.html":{}}}],["subject",{"_index":242,"title":{},"body":{"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/PatientViewConsumer.html":{}}}],["subject.next(parsed",{"_index":361,"title":{},"body":{"injectables/KafkaService.html":{}}}],["subscription",{"_index":328,"title":{},"body":{"injectables/KafkaService.html":{},"classes/PatientResolver.html":{}}}],["subscription(returns",{"_index":598,"title":{},"body":{"classes/PatientResolver.html":{}}}],["subscription(undefined",{"_index":576,"title":{},"body":{"classes/PatientResolver.html":{}}}],["subscriptions",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"injectables/KafkaService.html":{},"dependencies.html":{}}}],["super",{"_index":536,"title":{},"body":{"classes/PatientModel.html":{},"classes/PatientView.html":{}}}],["support",{"_index":953,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":954,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":692,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["syntaxerror(`there",{"_index":350,"title":{},"body":{"injectables/KafkaService.html":{}}}],["table",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["tcpport",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.apply(new",{"_index":541,"title":{},"body":{"classes/PatientModel.html":{},"classes/PatientView.html":{}}}],["this.appservice.gethello",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["this.body",{"_index":538,"title":{},"body":{"classes/PatientModel.html":{},"classes/PatientView.html":{}}}],["this.body.firstname",{"_index":653,"title":{},"body":{"classes/PatientView.html":{}}}],["this.body.lastname",{"_index":654,"title":{},"body":{"classes/PatientView.html":{}}}],["this.body.patientid",{"_index":656,"title":{},"body":{"classes/PatientView.html":{}}}],["this.callpatientviewevent(parsed",{"_index":360,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.commandbus.execute",{"_index":805,"title":{},"body":{"injectables/PatientsService.html":{}}}],["this.commandbus.execute(new",{"_index":800,"title":{},"body":{"injectables/PatientsService.html":{}}}],["this.consumer",{"_index":372,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.consumer.connect",{"_index":376,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.consumer.disconnect",{"_index":348,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.consumer.run",{"_index":334,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.consumer.subscribe",{"_index":332,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.consumer?.disconnect",{"_index":379,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.createconsumer",{"_index":352,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.createpatientview(parsed",{"_index":695,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["this.createproducer",{"_index":312,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.deletepatientview(parsed",{"_index":698,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["this.disconnect",{"_index":363,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.kafka",{"_index":300,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.kafka.consumer",{"_index":373,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.kafka.producer(producerconfig",{"_index":368,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.kafkaservice",{"_index":497,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdatedHandler.html":{}}}],["this.kafkaservice.bridgeeventsto",{"_index":624,"title":{},"body":{"injectables/PatientSagas.html":{}}}],["this.kafkaservice.bridgeeventsto(eventstream",{"_index":688,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["this.kafkaservice.createconsumer",{"_index":687,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["this.kafkaservice.findeventstream(args",{"_index":600,"title":{},"body":{"classes/PatientResolver.html":{}}}],["this.kafkaservice.publish(event.key",{"_index":512,"title":{},"body":{"classes/PatientDeletedHandler.html":{}}}],["this.kafkaservice.publish(key",{"_index":499,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientUpdatedHandler.html":{}}}],["this.key",{"_index":537,"title":{},"body":{"classes/PatientModel.html":{},"classes/PatientView.html":{}}}],["this.key._id",{"_index":652,"title":{},"body":{"classes/PatientView.html":{}}}],["this.logger.error(`publishing",{"_index":325,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.logger.error(`saving",{"_index":410,"title":{},"body":{"injectables/MongooseService.html":{}}}],["this.logger.log('async",{"_index":244,"title":{},"body":{"classes/FindAllPatientsHandler.html":{}}}],["this.logger.log('kafka",{"_index":364,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.logger.log(`subscribed",{"_index":354,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.logger.log(command.key._id",{"_index":119,"title":{},"body":{"classes/CreatePatientHandler.html":{}}}],["this.logger.verbose",{"_index":356,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.logger.verbose('consumer",{"_index":377,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.logger.verbose('producer",{"_index":370,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.logger.verbose(`published",{"_index":322,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.logger.verbose(`saved",{"_index":407,"title":{},"body":{"injectables/MongooseService.html":{}}}],["this.mongooseservice.create(event.patientdb",{"_index":724,"title":{},"body":{"classes/PatientViewCreatedHandler.html":{}}}],["this.mongooseservice.deleteone(key",{"_index":733,"title":{},"body":{"classes/PatientViewDeletedHandler.html":{}}}],["this.mongooseservice.find(args",{"_index":596,"title":{},"body":{"classes/PatientResolver.html":{}}}],["this.mongooseservice.updateone(key",{"_index":758,"title":{},"body":{"classes/PatientViewUpdatedHandler.html":{}}}],["this.patentdbupdate",{"_index":655,"title":{},"body":{"classes/PatientView.html":{}}}],["this.patientdb",{"_index":651,"title":{},"body":{"classes/PatientView.html":{}}}],["this.patientmodel(patientdbdto",{"_index":404,"title":{},"body":{"injectables/MongooseService.html":{}}}],["this.patientmodel.deleteone({_id",{"_index":421,"title":{},"body":{"injectables/MongooseService.html":{}}}],["this.patientmodel.find().exec",{"_index":411,"title":{},"body":{"injectables/MongooseService.html":{}}}],["this.patientmodel.find(args",{"_index":423,"title":{},"body":{"injectables/MongooseService.html":{}}}],["this.patientmodel.findbyidandupdate((objectid(key._id",{"_index":416,"title":{},"body":{"injectables/MongooseService.html":{}}}],["this.patientsservice.createpatient(key",{"_index":464,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["this.patientsservice.createpatientview(parsed",{"_index":703,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["this.patientsservice.deletepatient(args",{"_index":611,"title":{},"body":{"classes/PatientResolver.html":{}}}],["this.patientsservice.deletepatient(key",{"_index":470,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientsservice.deletepatientview(parsed",{"_index":711,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["this.patientsservice.findallpatients",{"_index":472,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["this.patientsservice.updatepatient(key",{"_index":467,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["this.patientsservice.updatepatientview(parsed",{"_index":708,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["this.producer",{"_index":367,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.producer.connect",{"_index":369,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.producer.send",{"_index":320,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.producer?.disconnect",{"_index":378,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.publisher.mergeobjectcontext",{"_index":125,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["this.pubsub",{"_index":307,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.pubsub.asynciterator('patients",{"_index":329,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.querybus.execute(new",{"_index":804,"title":{},"body":{"injectables/PatientsService.html":{}}}],["this.repository.createpatient(key",{"_index":131,"title":{},"body":{"classes/CreatePatientHandler.html":{}}}],["this.repository.createpatientview",{"_index":155,"title":{},"body":{"classes/CreatePatientViewHandler.html":{}}}],["this.repository.deletepatient(patientid",{"_index":184,"title":{},"body":{"classes/DeletePatientHandler.html":{}}}],["this.repository.deletepatientview",{"_index":192,"title":{},"body":{"classes/DeletePatientViewHandler.html":{}}}],["this.repository.findall",{"_index":245,"title":{},"body":{"classes/FindAllPatientsHandler.html":{}}}],["this.repository.updatepatient(key",{"_index":816,"title":{},"body":{"classes/UpdatePatientHandler.html":{}}}],["this.repository.updatepatientview",{"_index":819,"title":{},"body":{"classes/UpdatePatientViewHandler.html":{}}}],["this.startconsuming",{"_index":685,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["this.stream",{"_index":349,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.stream.push",{"_index":346,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.topic",{"_index":309,"title":{},"body":{"injectables/KafkaService.html":{}}}],["this.updatebody",{"_index":650,"title":{},"body":{"classes/PatientView.html":{}}}],["this.updatepatientview(parsed",{"_index":697,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["throw",{"_index":607,"title":{},"body":{"classes/PatientResolver.html":{},"injectables/PatientViewConsumer.html":{}}}],["title",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":471,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientResolver.html":{}}}],["together",{"_index":122,"title":{},"body":{"classes/CreatePatientHandler.html":{},"injectables/PatientRepository.html":{},"injectables/PatientViewRepository.html":{}}}],["topic",{"_index":263,"title":{},"body":{"injectables/KafkaService.html":{}}}],["true",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":319,"title":{},"body":{"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"injectables/PatientViewConsumer.html":{}}}],["turns",{"_index":494,"title":{},"body":{"classes/PatientCreatedHandler.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["type",{"_index":78,"title":{},"body":{"classes/CreatePatientCommand.html":{},"classes/CreatePatientHandler.html":{},"classes/CreatePatientViewCommand.html":{},"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientCommand.html":{},"classes/DeletePatientHandler.html":{},"classes/DeletePatientViewCommand.html":{},"classes/DeletePatientViewHandler.html":{},"classes/EventDto.html":{},"classes/FindAllPatientsHandler.html":{},"classes/KafkaBodyDto.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientCreatedEvent.html":{},"classes/PatientCreatedHandler.html":{},"classes/PatientDeletedEvent.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"interfaces/PatientInterface.html":{},"classes/PatientModel.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{},"classes/PatientUpdatedEvent.html":{},"classes/PatientUpdatedHandler.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typedbody",{"_index":721,"title":{},"body":{"classes/PatientViewCreatedHandler.html":{}}}],["undefined",{"_index":524,"title":{},"body":{"classes/PatientModel.html":{}}}],["unknown",{"_index":234,"title":{},"body":{"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"controllers/PatientController.html":{},"injectables/PatientRepository.html":{},"injectables/PatientViewRepository.html":{},"injectables/PatientsService.html":{}}}],["unless",{"_index":219,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientUpdate.html":{}}}],["up",{"_index":923,"title":{},"body":{"index.html":{}}}],["update",{"_index":214,"title":{},"body":{"classes/EventDto.html":{},"classes/KafkaBodyDto.html":{},"classes/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDetails.html":{},"classes/PatientId.html":{},"classes/PatientResolver.html":{},"classes/PatientUpdate.html":{}}}],["updated.event",{"_index":535,"title":{},"body":{"classes/PatientModel.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["updated.event.ts",{"_index":627,"title":{},"body":{"classes/PatientUpdatedEvent.html":{},"classes/PatientViewUpdatedEvent.html":{},"coverage.html":{}}}],["updated.event.ts:4",{"_index":628,"title":{},"body":{"classes/PatientUpdatedEvent.html":{}}}],["updated.event.ts:6",{"_index":630,"title":{},"body":{"classes/PatientUpdatedEvent.html":{},"classes/PatientViewUpdatedEvent.html":{}}}],["updated.event.ts:7",{"_index":629,"title":{},"body":{"classes/PatientUpdatedEvent.html":{}}}],["updated.event.ts:8",{"_index":750,"title":{},"body":{"classes/PatientViewUpdatedEvent.html":{}}}],["updated.event.ts:9",{"_index":749,"title":{},"body":{"classes/PatientViewUpdatedEvent.html":{}}}],["updated.handle.ts",{"_index":752,"title":{},"body":{"classes/PatientViewUpdatedHandler.html":{},"coverage.html":{}}}],["updated.handle.ts:16",{"_index":753,"title":{},"body":{"classes/PatientViewUpdatedHandler.html":{}}}],["updated.handle.ts:19",{"_index":754,"title":{},"body":{"classes/PatientViewUpdatedHandler.html":{}}}],["updated.handler.ts",{"_index":632,"title":{},"body":{"classes/PatientUpdatedHandler.html":{},"coverage.html":{}}}],["updated.handler.ts:15",{"_index":634,"title":{},"body":{"classes/PatientUpdatedHandler.html":{}}}],["updated.handler.ts:9",{"_index":633,"title":{},"body":{"classes/PatientUpdatedHandler.html":{}}}],["updateone",{"_index":384,"title":{},"body":{"injectables/MongooseService.html":{}}}],["updateone(key",{"_index":397,"title":{},"body":{"injectables/MongooseService.html":{}}}],["updateonebody",{"_index":415,"title":{},"body":{"injectables/MongooseService.html":{}}}],["updatepatient",{"_index":432,"title":{},"body":{"controllers/PatientController.html":{},"classes/PatientModel.html":{},"injectables/PatientRepository.html":{},"classes/PatientResolver.html":{},"injectables/PatientsService.html":{}}}],["updatepatient(@args()args",{"_index":603,"title":{},"body":{"classes/PatientResolver.html":{}}}],["updatepatient(args",{"_index":581,"title":{},"body":{"classes/PatientResolver.html":{}}}],["updatepatient(key",{"_index":551,"title":{},"body":{"injectables/PatientRepository.html":{},"injectables/PatientsService.html":{}}}],["updatepatient(params",{"_index":449,"title":{},"body":{"controllers/PatientController.html":{}}}],["updatepatientcommand",{"_index":793,"title":{"classes/UpdatePatientCommand.html":{}},"body":{"injectables/PatientsService.html":{},"classes/UpdatePatientCommand.html":{},"classes/UpdatePatientHandler.html":{},"coverage.html":{}}}],["updatepatientcommand(key",{"_index":802,"title":{},"body":{"injectables/PatientsService.html":{}}}],["updatepatienthandler",{"_index":811,"title":{"classes/UpdatePatientHandler.html":{}},"body":{"classes/UpdatePatientHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatepatientview",{"_index":640,"title":{},"body":{"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"injectables/PatientViewRepository.html":{},"injectables/PatientsService.html":{}}}],["updatepatientview(key",{"_index":740,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["updatepatientview(parsed",{"_index":676,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["updatepatientview(patientdb",{"_index":790,"title":{},"body":{"injectables/PatientsService.html":{}}}],["updatepatientviewcommand",{"_index":797,"title":{"classes/UpdatePatientViewCommand.html":{}},"body":{"injectables/PatientsService.html":{},"classes/UpdatePatientViewCommand.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{}}}],["updatepatientviewcommand(patientdb",{"_index":807,"title":{},"body":{"injectables/PatientsService.html":{}}}],["updatepatientviewevent",{"_index":707,"title":{},"body":{"injectables/PatientViewConsumer.html":{}}}],["updatepatientviewhandler",{"_index":817,"title":{"classes/UpdatePatientViewHandler.html":{}},"body":{"classes/UpdatePatientViewHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usenewurlparser",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userinputerror",{"_index":589,"title":{},"body":{"classes/PatientResolver.html":{}}}],["userinputerror('not",{"_index":608,"title":{},"body":{"classes/PatientResolver.html":{}}}],["username",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useunifiedtopology",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uuid",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["v1",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":609,"title":{},"body":{"classes/PatientResolver.html":{},"injectables/PatientViewConsumer.html":{}}}],["value",{"_index":105,"title":{},"body":{"classes/CreatePatientHandler.html":{},"classes/FindAllPatientsHandler.html":{},"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"injectables/PatientViewConsumer.html":{},"miscellaneous/variables.html":{}}}],["valuejson",{"_index":342,"title":{},"body":{"injectables/KafkaService.html":{}}}],["variable",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":930,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":593,"title":{},"body":{"classes/PatientResolver.html":{},"classes/PatientView.html":{},"classes/PatientViewCreatedEvent.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedEvent.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedEvent.html":{},"classes/PatientViewUpdatedHandler.html":{},"coverage.html":{}}}],["view.command",{"_index":151,"title":{},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"injectables/PatientsService.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["view.command.ts",{"_index":135,"title":{},"body":{"classes/CreatePatientViewCommand.html":{},"classes/DeletePatientViewCommand.html":{},"classes/UpdatePatientViewCommand.html":{},"coverage.html":{}}}],["view.command.ts:6",{"_index":138,"title":{},"body":{"classes/CreatePatientViewCommand.html":{}}}],["view.command.ts:7",{"_index":186,"title":{},"body":{"classes/DeletePatientViewCommand.html":{},"classes/UpdatePatientViewCommand.html":{}}}],["view.command.ts:8",{"_index":139,"title":{},"body":{"classes/CreatePatientViewCommand.html":{}}}],["view.command.ts:9",{"_index":187,"title":{},"body":{"classes/DeletePatientViewCommand.html":{},"classes/UpdatePatientViewCommand.html":{}}}],["view.handler.ts",{"_index":142,"title":{},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"classes/UpdatePatientViewHandler.html":{},"coverage.html":{}}}],["view.handler.ts:12",{"_index":189,"title":{},"body":{"classes/DeletePatientViewHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["view.handler.ts:13",{"_index":144,"title":{},"body":{"classes/CreatePatientViewHandler.html":{}}}],["view.handler.ts:15",{"_index":190,"title":{},"body":{"classes/DeletePatientViewHandler.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["view.handler.ts:18",{"_index":145,"title":{},"body":{"classes/CreatePatientViewHandler.html":{}}}],["view.model",{"_index":148,"title":{},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"injectables/PatientViewRepository.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["view.model.ts",{"_index":637,"title":{},"body":{"classes/PatientView.html":{},"coverage.html":{}}}],["view.model.ts:10",{"_index":641,"title":{},"body":{"classes/PatientView.html":{}}}],["view.model.ts:16",{"_index":644,"title":{},"body":{"classes/PatientView.html":{}}}],["view.model.ts:32",{"_index":642,"title":{},"body":{"classes/PatientView.html":{}}}],["view.model.ts:38",{"_index":645,"title":{},"body":{"classes/PatientView.html":{}}}],["view.model.ts:43",{"_index":643,"title":{},"body":{"classes/PatientView.html":{}}}],["view.model.ts:9",{"_index":646,"title":{},"body":{"classes/PatientView.html":{}}}],["view.repository",{"_index":153,"title":{},"body":{"classes/CreatePatientViewHandler.html":{},"classes/DeletePatientViewHandler.html":{},"modules/PatientsModule.html":{},"classes/UpdatePatientViewHandler.html":{}}}],["view.repository.ts",{"_index":735,"title":{},"body":{"injectables/PatientViewRepository.html":{},"coverage.html":{}}}],["view.repository.ts:19",{"_index":741,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["view.repository.ts:27",{"_index":739,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["view.repository.ts:9",{"_index":737,"title":{},"body":{"injectables/PatientViewRepository.html":{}}}],["void",{"_index":287,"title":{},"body":{"injectables/KafkaService.html":{},"classes/PatientDeletedHandler.html":{},"classes/PatientModel.html":{},"classes/PatientUpdatedHandler.html":{},"classes/PatientView.html":{},"injectables/PatientViewConsumer.html":{},"classes/PatientViewCreatedHandler.html":{},"classes/PatientViewDeletedHandler.html":{},"classes/PatientViewUpdatedHandler.html":{}}}],["vortusapp",{"_index":902,"title":{},"body":{"index.html":{}}}],["watch",{"_index":938,"title":{},"body":{"index.html":{}}}],["working",{"_index":597,"title":{},"body":{"classes/PatientResolver.html":{}}}],["world",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["ws",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["x",{"_index":299,"title":{},"body":{"injectables/KafkaService.html":{},"classes/PatientModel.html":{},"classes/PatientView.html":{}}}],["xml2js",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["yes",{"_index":278,"title":{},"body":{"injectables/KafkaService.html":{},"injectables/MongooseService.html":{},"classes/PatientView.html":{}}}],["zoom",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/PatientsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  // @Get()\n  // getHello(): string {\n  //   return this.appService.getHello();\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nPatientsModule\n\nPatientsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPatientsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PatientsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PatientsModule } from './patients/patient.module';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { join } from 'path';\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: '.env',\n    }),\n    GraphQLModule.forRoot({\n      autoSchemaFile: join(process.cwd(), 'src/schema.gql'),\n      installSubscriptionHandlers: true,\n      subscriptions: {\n        'graphql-ws': true\n      },\n\n    }),\n    \n    PatientsModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  // getHello(): string {\n  //   return 'Hello World!';\n  // }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatientCommand.html":{"url":"classes/CreatePatientCommand.html","title":"class - CreatePatientCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatientCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/commands/impl/create-patient.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                body\n                            \n                            \n                                    Public\n                                    Readonly\n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: PatientId, body: PatientDetails)\n                    \n                \n                        \n                            \n                                Defined in src/patients/commands/impl/create-patient.command.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        PatientId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        PatientDetails\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientDetails\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/commands/impl/create-patient.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientId\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/commands/impl/create-patient.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PatientId, PatientDetails } from './../../dtos/patient.dto';\nimport { ICommand } from '@nestjs/cqrs';\n\nexport class CreatePatientCommand implements ICommand {\n    // Receives patient from patientService and sends to command hand\n  constructor(public readonly key: PatientId, public readonly body: PatientDetails) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatientHandler.html":{"url":"classes/CreatePatientHandler.html","title":"class - CreatePatientHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatientHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/commands/handlers/create-patient.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: PatientRepository, publisher: EventPublisher)\n                    \n                \n                        \n                            \n                                Defined in src/patients/commands/handlers/create-patient.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        PatientRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('CreatePatientHandler')\n                    \n                \n                    \n                        \n                                Defined in src/patients/commands/handlers/create-patient.handler.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePatientCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/commands/handlers/create-patient.handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePatientCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventPublisher, ICommandHandler, CommandHandler } from '@nestjs/cqrs';\nimport { CreatePatientCommand } from '../impl/create-patient.command';\nimport { PatientRepository } from '../../repository/patient.repository';\nimport { Logger } from '@nestjs/common';\n\n@CommandHandler(CreatePatientCommand)\nexport class CreatePatientHandler\n  implements ICommandHandler\n{\n  logger = new Logger('CreatePatientHandler');\n  constructor(\n    // The model of the repository\n    private readonly repository: PatientRepository,\n    // Kafka publisher\n    private readonly publisher: EventPublisher,\n  ) // private logger = new Logger('CreatePatientHandler')\n  {}\n\n  async execute(command: CreatePatientCommand) {\n    this.logger.log(command.key._id, 'Async CreatePatientHandler...');\n\n    const { body } = command;\n    const { key } = command;\n    // Bunch it all together ready for sending\n    const patient = this.publisher.mergeObjectContext(\n      // Send details to the repository to call the events\n      await this.repository.createPatient(key, body),\n    );\n    // sends event to kafka module\n    patient.commit();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatientViewCommand.html":{"url":"classes/CreatePatientViewCommand.html","title":"class - CreatePatientViewCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatientViewCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/commands/impl/create-patient-view.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                eventDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventDto: EventDto)\n                    \n                \n                        \n                            \n                                Defined in src/patients/commands/impl/create-patient-view.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventDto\n                                                  \n                                                        \n                                                                        EventDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        eventDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventDto\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/commands/impl/create-patient-view.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ICommand } from '@nestjs/cqrs';\nimport { EventDto } from '../../dtos/patient.dto';\n\nexport class CreatePatientViewCommand implements ICommand {\n    // Receives patient from patientService and sends to command hand\n  constructor(public readonly eventDto: EventDto) {\n    Logger.log(eventDto, \"CreatePatientViewCommand\")\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatientViewHandler.html":{"url":"classes/CreatePatientViewHandler.html","title":"class - CreatePatientViewHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatientViewHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/commands/handlers/create-patient-view.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: PatientViewRepository, publisher: EventPublisher)\n                    \n                \n                        \n                            \n                                Defined in src/patients/commands/handlers/create-patient-view.handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        PatientViewRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreatePatientViewCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/commands/handlers/create-patient-view.handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreatePatientViewCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PatientView } from './../../models/patient-view.model';\nimport { Patient } from './../../dtos/patient.dto';\nimport { Observable } from 'rxjs';\n\nimport { EventPublisher, ICommandHandler, CommandHandler } from '@nestjs/cqrs';\nimport { CreatePatientViewCommand } from '../impl/create-patient-view.command';\nimport { PatientViewRepository } from '../../repository/patient-view.repository';\nimport { Logger } from '@nestjs/common';\n\n@CommandHandler(CreatePatientViewCommand)\nexport class CreatePatientViewHandler\n  implements ICommandHandler\n{\n  constructor(\n    private readonly repository: PatientViewRepository,\n    private readonly publisher: EventPublisher,\n  ) {}\n  async execute(command: CreatePatientViewCommand) {\n    const patientView: PatientView = this.publisher.mergeObjectContext(\n      await this.repository.createPatientView(\n        command.eventDto.key,\n        command.eventDto.body,\n      ),\n    );\n    patientView.commit();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\n\nKafkaService \n\nKafkaService \n\n\n\nMongooseService \n\nMongooseService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nKafkaService  -->\n\nDatabaseModule->KafkaService \n\n\n\nMongooseService  -->\n\nDatabaseModule->MongooseService \n\n\n\n\n\nKafkaService\n\nKafkaService\n\nDatabaseModule -->\n\nKafkaService->DatabaseModule\n\n\n\n\n\nMongooseService\n\nMongooseService\n\nDatabaseModule -->\n\nMongooseService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/patients/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KafkaService\n                        \n                        \n                            MongooseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KafkaService\n                        \n                        \n                            MongooseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { databaseProviders } from './providers/database.providers';\n\nimport { Module } from '@nestjs/common';\nimport { MongooseService } from './services/mongoose.service';\nimport { KafkaService } from './services/kafka.service';\nimport { PatientsProviders } from './providers/patients.provider';\n\n@Module({\n  imports: [],\n  controllers: [],\n  providers: [\n    MongooseService,\n    ...databaseProviders,\n    KafkaService,\n    ...PatientsProviders,\n  ],\n  exports: [\n    ...databaseProviders,\n    MongooseService,\n    KafkaService,\n    ...PatientsProviders,\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeletePatientCommand.html":{"url":"classes/DeletePatientCommand.html","title":"class - DeletePatientCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeletePatientCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/commands/impl/delete-patient.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                PatientId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(PatientId: PatientId)\n                    \n                \n                        \n                            \n                                Defined in src/patients/commands/impl/delete-patient.command.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        PatientId\n                                                  \n                                                        \n                                                                        PatientId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        PatientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientId\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/commands/impl/delete-patient.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from '@nestjs/cqrs';\nimport { PatientId } from '../../dtos/patient.dto';\n\nexport class DeletePatientCommand implements ICommand {\n  constructor(\n    public readonly PatientId: PatientId,\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeletePatientHandler.html":{"url":"classes/DeletePatientHandler.html","title":"class - DeletePatientHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeletePatientHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/commands/handlers/delete-patient.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: PatientRepository, publisher: EventPublisher)\n                    \n                \n                        \n                            \n                                Defined in src/patients/commands/handlers/delete-patient.handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        PatientRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeletePatientCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/commands/handlers/delete-patient.handler.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeletePatientCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventPublisher, ICommandHandler, CommandHandler } from '@nestjs/cqrs';\nimport { DeletePatientCommand } from '../impl/delete-patient.command';\nimport { PatientRepository } from '../../repository/patient.repository';\nimport { Logger } from '@nestjs/common';\n\n@CommandHandler(DeletePatientCommand)\nexport class DeletePatientHandler\n  implements ICommandHandler\n{\n  constructor(\n    private readonly repository: PatientRepository,\n    private readonly publisher: EventPublisher,\n  ) {}\n\n  async execute(command: DeletePatientCommand) {\n    Logger.log(command.PatientId, 'DeletePatientCommand');\n\n    const { PatientId } = command;\n    const patient = this.publisher.mergeObjectContext(\n      await this.repository.deletePatient(PatientId),\n    );\n    patient.commit();\n\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeletePatientViewCommand.html":{"url":"classes/DeletePatientViewCommand.html","title":"class - DeletePatientViewCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeletePatientViewCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/commands/impl/delete-patient-view.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                eventDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventDto: EventDto)\n                    \n                \n                        \n                            \n                                Defined in src/patients/commands/impl/delete-patient-view.command.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventDto\n                                                  \n                                                        \n                                                                        EventDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        eventDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventDto\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/commands/impl/delete-patient-view.command.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EventDto } from '../../dtos/patient.dto';\n\nimport { Logger } from '@nestjs/common';\nimport { ICommand } from '@nestjs/cqrs';\nimport { Patient } from '../../dtos/patient.dto';\n\nexport class DeletePatientViewCommand implements ICommand {\n    // Receives patient from patientService and sends to command hand\n  constructor(public readonly eventDto: EventDto) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeletePatientViewHandler.html":{"url":"classes/DeletePatientViewHandler.html","title":"class - DeletePatientViewHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeletePatientViewHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/commands/handlers/delete-patient-view.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: PatientViewRepository, publisher: EventPublisher)\n                    \n                \n                        \n                            \n                                Defined in src/patients/commands/handlers/delete-patient-view.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        PatientViewRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeletePatientViewCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/commands/handlers/delete-patient-view.handler.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeletePatientViewCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PatientView } from '../../models/patient-view.model';\nimport { Observable } from 'rxjs';\n\nimport { EventPublisher, ICommandHandler, CommandHandler } from '@nestjs/cqrs';\nimport { DeletePatientViewCommand } from '../impl/delete-patient-view.command';\nimport { PatientViewRepository } from '../../repository/patient-view.repository';\nimport { Logger } from '@nestjs/common';\n\n@CommandHandler(DeletePatientViewCommand)\nexport class DeletePatientViewHandler\n  implements ICommandHandler\n{\n  constructor(private readonly repository: PatientViewRepository, private readonly publisher: EventPublisher,\n  ) {}\n  async execute(command: DeletePatientViewCommand) {\n    const patientView: PatientView = this.publisher.mergeObjectContext(\n      await this.repository.deletePatientView(\n        command.eventDto.key,\n        command.eventDto.body,\n      ),\n    );\n    patientView.commit();\n\n  }\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventDto.html":{"url":"classes/EventDto.html","title":"class - EventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/dtos/patient.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                body\n                            \n                            \n                                    Readonly\n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KafkaBodyDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/patients/dtos/patient.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/patients/dtos/patient.dto.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ArgsType, Field, ID, ObjectType } from '@nestjs/graphql';\nimport * as mongoose from 'mongoose';\n\n\n@ObjectType()\n@ArgsType()\nexport class PatientId {\n  @Field((type) => ID, { nullable: true })      readonly _id!: mongoose.Types.ObjectId;\n}\n\n\n@ObjectType()\n@ArgsType()\nexport class PatientDetails {\n  @Field({ nullable: true })      readonly firstName: string;\n  \n  @Field({ nullable: true })      readonly lastName: string;\n\n  //When adding more options add them to here\n  //Also update Patient Schema and a bunch of other places\n  \n}\n\n\n@ObjectType()\n@ArgsType()\nexport class Patient extends PatientDetails {\n\n  @Field((type) => ID, { nullable: true }) readonly _id: mongoose.Types.ObjectId\n  \n  //Do not add fields to here unless they can not be params for creating a new patient\n}\n\n@ArgsType()\nexport class PatientUpdate extends PatientDetails {\n  @Field((type) => ID)                    readonly _id: mongoose.Types.ObjectId;\n}\n\n\n@ObjectType()\nexport class KafkaBodyDto extends Patient{\n  \n  @Field()            readonly eventType!: string;\n}\n@ObjectType()\nexport class EventDto {\n  @Field()                   readonly key: PatientId;\n  @Field()                   readonly body: KafkaBodyDto;\n  \n}\n\n\n\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAllPatientsHandler.html":{"url":"classes/FindAllPatientsHandler.html","title":"class - FindAllPatientsHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAllPatientsHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/queries/handlers/find-all-patients.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: PatientRepository)\n                    \n                \n                        \n                            \n                                Defined in src/patients/queries/handlers/find-all-patients.handler.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        PatientRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('FindAllPatientsQuery')\n                    \n                \n                    \n                        \n                                Defined in src/patients/queries/handlers/find-all-patients.handler.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: FindAllPatientsQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/queries/handlers/find-all-patients.handler.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FindAllPatientsQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { KafkaService } from './../../../kafka/src/kafka.service';\nimport { PatientRepository } from './../../repository/patient.repository';\nimport {\n  EventPublisher,\n  IEvent,\n  IQuery,\n  IQueryHandler,\n  QueryHandler,\n} from '@nestjs/cqrs';\nimport { PatientDetails } from '../../dtos/patient.dto';\nimport { FindAllPatientsQuery } from '../impl/find-all-patients.query';\nimport { Inject, Logger } from '@nestjs/common';\nimport { Subject } from 'rxjs';\n\n@QueryHandler(FindAllPatientsQuery)\nexport class FindAllPatientsHandler\n  implements IQueryHandler\n{\n  logger = new Logger('FindAllPatientsQuery');\n\n  constructor(\n     private repository: PatientRepository\n  ) {}\n  async execute(query: FindAllPatientsQuery){\n      this.logger.log('Async FindAllPatientsQuery...')\n    return this.repository.findAll();\n  }\n}\n\n// export interface PatientQuery {\n//     find: () => Promise;\n//   }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAllPatientsQuery.html":{"url":"classes/FindAllPatientsQuery.html","title":"class - FindAllPatientsQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAllPatientsQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/queries/impl/find-all-patients.query.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQuery\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IQuery } from '@nestjs/cqrs';\n\nexport class FindAllPatientsQuery implements IQuery {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KafkaBodyDto.html":{"url":"classes/KafkaBodyDto.html","title":"class - KafkaBodyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KafkaBodyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/dtos/patient.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Patient\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                eventType\n                            \n                            \n                                    Readonly\n                                _id\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        eventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/patients/dtos/patient.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Patient\n\n                            \n                        \n                    \n                        \n                                Defined in         Patient:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PatientDetails\n\n                            \n                        \n                    \n                        \n                                Defined in         PatientDetails:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PatientDetails\n\n                            \n                        \n                    \n                        \n                                Defined in         PatientDetails:18\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ArgsType, Field, ID, ObjectType } from '@nestjs/graphql';\nimport * as mongoose from 'mongoose';\n\n\n@ObjectType()\n@ArgsType()\nexport class PatientId {\n  @Field((type) => ID, { nullable: true })      readonly _id!: mongoose.Types.ObjectId;\n}\n\n\n@ObjectType()\n@ArgsType()\nexport class PatientDetails {\n  @Field({ nullable: true })      readonly firstName: string;\n  \n  @Field({ nullable: true })      readonly lastName: string;\n\n  //When adding more options add them to here\n  //Also update Patient Schema and a bunch of other places\n  \n}\n\n\n@ObjectType()\n@ArgsType()\nexport class Patient extends PatientDetails {\n\n  @Field((type) => ID, { nullable: true }) readonly _id: mongoose.Types.ObjectId\n  \n  //Do not add fields to here unless they can not be params for creating a new patient\n}\n\n@ArgsType()\nexport class PatientUpdate extends PatientDetails {\n  @Field((type) => ID)                    readonly _id: mongoose.Types.ObjectId;\n}\n\n\n@ObjectType()\nexport class KafkaBodyDto extends Patient{\n  \n  @Field()            readonly eventType!: string;\n}\n@ObjectType()\nexport class EventDto {\n  @Field()                   readonly key: PatientId;\n  @Field()                   readonly body: KafkaBodyDto;\n  \n}\n\n\n\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KafkaService.html":{"url":"injectables/KafkaService.html","title":"injectable - KafkaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  KafkaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/services/kafka.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                consumer\n                            \n                            \n                                    Private\n                                kafka\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Private\n                                producer\n                            \n                            \n                                    Public\n                                pubsub\n                            \n                            \n                                    Public\n                                topic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bridgeEventsTo\n                            \n                            \n                                    Public\n                                    Async\n                                createConsumer\n                            \n                            \n                                    Async\n                                createProducer\n                            \n                            \n                                    Async\n                                disconnect\n                            \n                            \n                                    Async\n                                findEventStream\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    Async\n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/patients/services/kafka.service.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bridgeEventsTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    bridgeEventsTo(subject: Subject)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/kafka.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subject\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createConsumer\n                        \n                    \n                \n            \n            \n                \n                    \n                    createConsumer(consumerConfig?: ConsumerConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/kafka.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumerConfig\n                                    \n                                            ConsumerConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProducer\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProducer(producerConfig?: ProducerConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/kafka.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    producerConfig\n                                    \n                                            ProducerConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        disconnect\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/kafka.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findEventStream\n                        \n                    \n                \n            \n            \n                \n                    \n                    findEventStream(key: PatientId)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/kafka.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                PatientId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/kafka.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/kafka.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        publish\n                        \n                    \n                \n            \n            \n                \n                    \n                    publish(key, body)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/kafka.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        consumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Consumer\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/services/kafka.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        kafka\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/patients/services/kafka.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('KafkaService')\n                    \n                \n                    \n                        \n                                Defined in src/patients/services/kafka.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        producer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Producer\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/services/kafka.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pubsub\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/patients/services/kafka.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        topic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.KAFKA_TOPIC\n                    \n                \n                    \n                        \n                                Defined in src/patients/services/kafka.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EventDto, PatientId } from './../dtos/patient.dto';\nimport {\n  Injectable,\n  Logger,\n  OnModuleDestroy,\n  OnModuleInit,\n} from '@nestjs/common';\nimport {\n  Consumer,\n  ConsumerConfig,\n  Kafka,\n  Producer,\n  ProducerConfig,\n} from 'kafkajs';\nimport { Subject } from 'rxjs';\nimport { KafkaPubSub } from 'graphql-kafkajs-subscriptions';\n\n@Injectable()\nexport class KafkaService implements OnModuleDestroy, OnModuleInit {\n  [x: string]: any;\n  private logger = new Logger('KafkaService');\n  private producer: Producer;\n  public consumer: Consumer;\n  public topic = process.env.KAFKA_TOPIC;\n  private kafka;\n  public pubsub;\n\n  constructor() {\n    this.kafka = new Kafka({\n      clientId: process.env.KAFKA_CLIENT_ID || 'default client id',\n      brokers: process.env.KAFKA_BROKERS?.split(',') || ['localhost:9092'],\n    });\n    this.pubsub = KafkaPubSub.create({\n      kafka: this.kafka,\n      topic: this.topic,\n      groupIdPrefix: 'patients',\n    });\n  }\n  onModuleInit() {}\n\n  async publish(key, body) {\n    await this.createProducer();\n    const sendKey = JSON.stringify(key._id);\n    const sendBody = JSON.stringify(body);\n    Logger.log(sendKey, 'Key');\n    Logger.log(sendBody, 'Body');\n\n    try {\n      await this.producer.send({\n        messages: [{ value: sendBody, key: sendKey }],\n        topic: this.topic,\n      });\n      this.logger.verbose(`Published event: ${sendKey}: ${sendBody}`);\n    } catch (error) {\n      this.logger.error(`Publishing event error: ${error.stack}`);\n    }\n  }\n\n  async findEventStream(key: PatientId) {\n    const resolver = {\n      Subscription: {\n        patients: this.pubsub.asyncIterator('patients'),\n      },\n    };\n    return resolver.Subscription.patients;\n    // const stream: [] = [];\n\n    //   await this.consumer.subscribe({\n    //     topic: this.topic,\n    //     fromBeginning: true\n    //   })\n\n    //   await this.consumer.run({\n    //     eachMessage: async (payload) => {\n    //       Logger.log(\"payload\")\n    //       const { message } = payload;\n    //       const { value } = message;\n    //       const bufferKey = message.key;\n    //       let keyJSON: PatientId;\n    //       let valueJSON: KafkaBodyDto;\n    //       let parsed: EventDto;\n    //       if (bufferKey) {\n    //         keyJSON = { _id: JSON.parse(bufferKey.toString()) };\n    //       }\n    //       if (value) {\n    //         valueJSON = JSON.parse(value.toString());\n    //       }\n    //       parsed = {\n    //         key: keyJSON,\n    //         body: valueJSON,\n    //       };\n    //       if (keyJSON == key) {\n    //         this.stream.push({ ...parsed });\n    //         Logger.log(parsed)\n    //       }\n    //     },\n    //   });\n    //   this.consumer.disconnect()\n    //   return this.stream;\n\n    // } catch (error) {\n    //   return new SyntaxError(`There was a error consuming kafka: ${error}`)\n  }\n\n  async bridgeEventsTo(subject: Subject) {\n    try {\n      await this.createConsumer();\n      await this.consumer.subscribe({\n        topic: this.topic,\n        fromBeginning: false,\n      });\n      this.logger.log(`Subscribed to \"${this.topic}\"`);\n      await this.consumer.run({\n        eachMessage: async (payload) => {\n          const { message } = payload;\n          const { value } = message;\n          const { key } = message;\n          let keyJSON;\n          let valueJSON;\n          let parsed: EventDto;\n          if (key) {\n            keyJSON = { _id: JSON.parse(key.toString()) };\n          }\n          if (value) {\n            valueJSON = JSON.parse(value.toString());\n          }\n\n          parsed = {\n            key: keyJSON,\n            body: valueJSON,\n          };\n          this.logger.verbose(\n            `Bridged event payload: ${JSON.stringify(parsed)}`,\n          );\n          Logger.log(parsed, 'kafka service');\n\n          // this.callPatientViewEvent(parsed)\n\n          subject.next(parsed);\n        },\n      });\n    } catch (error) {\n      Logger.error(`Bridged event error: ${error.stack}`);\n    }\n  }\n\n  async onModuleDestroy() {\n    await this.disconnect();\n    this.logger.log('Kafka connection destroyed');\n  }\n\n  async createProducer(producerConfig?: ProducerConfig) {\n    this.producer = this.kafka.producer(producerConfig);\n    await this.producer.connect();\n    this.logger.verbose('Producer connected');\n  }\n\n  public async createConsumer(consumerConfig?: ConsumerConfig) {\n    this.consumer = this.kafka.consumer({\n      groupId: consumerConfig?.groupId || 'patients',\n      ...consumerConfig,\n    });\n    await this.consumer.connect();\n    this.logger.verbose('Consumer connected');\n  }\n\n  async disconnect() {\n    await this.producer?.disconnect();\n    await this.consumer?.disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseService.html":{"url":"injectables/MongooseService.html","title":"injectable - MongooseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MongooseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/services/mongoose.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(patientModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/patients/services/mongoose.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patientModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(patientDbDto: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/mongoose.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientDbDto\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(key: PatientId)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/mongoose.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                PatientId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(args?)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/mongoose.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/mongoose.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(key: PatientId, body: PatientDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/mongoose.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                PatientId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                PatientDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('MongooseService')\n                    \n                \n                    \n                        \n                                Defined in src/patients/services/mongoose.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Model, } from 'mongoose';\nimport { Injectable, Inject, Logger } from '@nestjs/common';\nimport { PatientInterface } from '../interfaces/patient.interface';\nimport {\n  Patient,\n  PatientId,\n  PatientDetails,\n} from '../dtos/patient.dto';\nimport * as mongoose from 'mongoose'\n\n@Injectable()\nexport class MongooseService {\n  private logger = new Logger('MongooseService');\n\n  constructor(\n    @Inject('PATIENT_MODEL')\n    private patientModel: Model,\n  ) {}\n\n  async create(patientDbDto: Patient): Promise {\n    try {\n      const createdPatient = new this.patientModel(patientDbDto);\n\n      const saved = createdPatient.save();\n      this.logger.verbose(`Saved state: ${patientDbDto.toString()}`);\n      return saved;\n    } catch (error) {\n      this.logger.error(`Saving state error: ${error.stack}`);\n    }\n  }\n\n  async findAll(): Promise {\n    return this.patientModel.find().exec();\n  }\n\n  async updateOne(key: PatientId, body: PatientDetails): Promise {\n    try {\n      const ObjectId = require('mongodb').ObjectId; \n      Logger.log(body, 'updateOneBody')\n      const saved = await this.patientModel.findByIdAndUpdate((ObjectId(key._id), body), body);\n      Logger.log(saved, \"Saved reply\")\n      return saved;\n    } catch (error) {\n      this.logger.error(`Saving state error: ${error.stack}`);\n    }\n  }\n\n  async deleteOne(key: PatientId): Promise {\n    try {\n      const ObjectId = require('mongodb').ObjectId; \n      Logger.log(key, 'delete')\n      const saved = await this.patientModel.deleteOne({_id: ObjectId(key._id)});\n      Logger.log(saved, \"Saved reply\")\n      return saved;\n    } catch (error) {\n      this.logger.error(`Saving state error: ${error.stack}`);\n    }\n  }\n  async find(args?){\n    try {\n      const saved = await this.patientModel.find(args);\n      // Logger.log(saved, \"Query\")\n      return saved;\n    } catch (error) {\n      this.logger.error(`Saving state error: ${error.stack}`);\n    }\n  }\n}\n \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Patient.html":{"url":"classes/Patient.html","title":"class - Patient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Patient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/dtos/patient.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PatientDetails\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _id\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/patients/dtos/patient.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PatientDetails\n\n                            \n                        \n                    \n                        \n                                Defined in         PatientDetails:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PatientDetails\n\n                            \n                        \n                    \n                        \n                                Defined in         PatientDetails:18\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ArgsType, Field, ID, ObjectType } from '@nestjs/graphql';\nimport * as mongoose from 'mongoose';\n\n\n@ObjectType()\n@ArgsType()\nexport class PatientId {\n  @Field((type) => ID, { nullable: true })      readonly _id!: mongoose.Types.ObjectId;\n}\n\n\n@ObjectType()\n@ArgsType()\nexport class PatientDetails {\n  @Field({ nullable: true })      readonly firstName: string;\n  \n  @Field({ nullable: true })      readonly lastName: string;\n\n  //When adding more options add them to here\n  //Also update Patient Schema and a bunch of other places\n  \n}\n\n\n@ObjectType()\n@ArgsType()\nexport class Patient extends PatientDetails {\n\n  @Field((type) => ID, { nullable: true }) readonly _id: mongoose.Types.ObjectId\n  \n  //Do not add fields to here unless they can not be params for creating a new patient\n}\n\n@ArgsType()\nexport class PatientUpdate extends PatientDetails {\n  @Field((type) => ID)                    readonly _id: mongoose.Types.ObjectId;\n}\n\n\n@ObjectType()\nexport class KafkaBodyDto extends Patient{\n  \n  @Field()            readonly eventType!: string;\n}\n@ObjectType()\nexport class EventDto {\n  @Field()                   readonly key: PatientId;\n  @Field()                   readonly body: KafkaBodyDto;\n  \n}\n\n\n\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PatientController.html":{"url":"controllers/PatientController.html","title":"controller - PatientController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PatientController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/patients.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                patients\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPatient\n                            \n                            \n                                    Async\n                                deletePatient\n                            \n                            \n                                    Async\n                                findOnePatient\n                            \n                            \n                                    Async\n                                findPatients\n                            \n                            \n                                    Async\n                                updatePatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPatient(body: PatientDetails)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Create Patient.'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/patients/patients.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                PatientDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deletePatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePatient(params: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Delete Patient.'})@Delete(':patientId')\n                \n            \n\n            \n                \n                    Defined in src/patients/patients.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOnePatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOnePatient(patientId: PatientId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Get Patient.'})@Get(':patientId')\n                \n            \n\n            \n                \n                    Defined in src/patients/patients.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientId\n                                    \n                                                PatientId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findPatients\n                        \n                    \n                \n            \n            \n                \n                    \n                    findPatients()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'List Patients.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/patients/patients.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePatient(params: literal type, patientDto: PatientDetails)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Update Patient.'})@Put(':patientId')\n                \n            \n\n            \n                \n                    Defined in src/patients/patients.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    patientDto\n                                    \n                                                PatientDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Get,\n  Delete,\n  Param,\n  Put,\n} from '@nestjs/common';\nimport { ApiResponse } from '@nestjs/swagger';\nimport { PatientDetails, PatientId } from './dtos/patient.dto';\nimport { PatientsService } from './services/patients.service';\nimport * as mongoose from 'mongoose';\n\n@Controller('patients')\nexport class PatientController {\n  constructor(private readonly patientsService: PatientsService) {}\n\n  // *****************************************\n  // *********  Create New Patient   *********\n  // *****************************************\n  @ApiResponse({ status: 200, description: 'Create Patient.' })\n  @Post()\n  async createPatient(@Body() body: PatientDetails): Promise {\n    const key: PatientId = {\n      _id: mongoose.mongo.ObjectId.createFromTime(Date.now()),\n    };\n\n    return this.patientsService.createPatient(key, body);\n  }\n\n  // *****************************************\n  // *********    Update Patient     *********\n  // *****************************************\n  @ApiResponse({ status: 200, description: 'Update Patient.' })\n  @Put(':patientId')\n  async updatePatient(\n    @Param() params: { patientId: string },\n    @Body() patientDto: PatientDetails,\n  ) {\n    const key: PatientId = {\n      _id: mongoose.mongo.ObjectId.createFromHexString(params.patientId),\n    };\n    return this.patientsService.updatePatient(key, patientDto);\n  }\n\n  // *****************************************\n  // *********    Delete Patient     *********\n  // *****************************************\n  @ApiResponse({ status: 200, description: 'Delete Patient.' })\n  @Delete(':patientId')\n  async deletePatient(@Param() params: { patientId: string }) {\n    const key: PatientId = {\n      _id: mongoose.mongo.ObjectId.createFromHexString(params.patientId),\n    };\n    return this.patientsService.deletePatient(key);\n  }\n\n  /* TODO: List Patients */\n  /*--------------------------------------------*/\n  @ApiResponse({ status: 200, description: 'List Patients.' })\n  @Get()\n  async findPatients(): Promise {\n    return this.patientsService.findAllPatients();\n  }\n\n  /* TODO: Find Patient */\n  /*--------------------------------------------*/\n  @ApiResponse({ status: 200, description: 'Get Patient.' })\n  @Get(':patientId')\n  async findOnePatient(@Param() patientId: PatientId) {\n    return this.patientsService.findAllPatients();\n  }\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientCreatedEvent.html":{"url":"classes/PatientCreatedEvent.html","title":"class - PatientCreatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientCreatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/events/impl/patient-created.event.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                body\n                            \n                            \n                                    Public\n                                    Readonly\n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: PatientId, body: PatientDetails)\n                    \n                \n                        \n                            \n                                Defined in src/patients/events/impl/patient-created.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        PatientId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        PatientDetails\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientDetails\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/events/impl/patient-created.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientId\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/events/impl/patient-created.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IEvent } from '@nestjs/cqrs';\nimport { PatientDetails, PatientId } from './../../dtos/patient.dto';\n\n// From Model finding sends to event handler\nexport class PatientCreatedEvent implements IEvent {\n  constructor(\n    public readonly key: PatientId,\n    public readonly body: PatientDetails,\n  ) {}\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientCreatedHandler.html":{"url":"classes/PatientCreatedHandler.html","title":"class - PatientCreatedHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientCreatedHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/events/handlers/patient-created.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                kafkaService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/patients/events/handlers/patient-created.handler.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        kafkaService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KafkaService\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/events/handlers/patient-created.handler.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: PatientCreatedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/events/handlers/patient-created.handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PatientCreatedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { KafkaService } from '../../services/kafka.service';\n\nimport { Logger } from '@nestjs/common';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PatientCreatedEvent } from '../impl/patient-created.event';\n\n// Turns the data to an event\n@EventsHandler(PatientCreatedEvent)\nexport class PatientCreatedHandler\n  implements IEventHandler\n  \n{private kafkaService: KafkaService\n  constructor() {\n     this.kafkaService = new KafkaService()\n  }\n\n  async handle(event: PatientCreatedEvent) {\n    const { key } = event;\n    const body = {\n      ...event.body,\n      eventType: 'PatientCreatedEvent',\n    };\n    Logger.log(key, \"CommandHandler\")\n    Logger.log(body, \"CommandHandler\")\n    await this.kafkaService.publish(key, body);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientDeletedEvent.html":{"url":"classes/PatientDeletedEvent.html","title":"class - PatientDeletedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientDeletedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/events/impl/patient-deleted.event.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: PatientId)\n                    \n                \n                        \n                            \n                                Defined in src/patients/events/impl/patient-deleted.event.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        PatientId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientId\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/events/impl/patient-deleted.event.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IEvent } from '@nestjs/cqrs';\nimport { PatientId } from '../../dtos/patient.dto';\n\nexport class PatientDeletedEvent implements IEvent {\n  constructor(public readonly key: PatientId) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientDeletedHandler.html":{"url":"classes/PatientDeletedHandler.html","title":"class - PatientDeletedHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientDeletedHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/events/handlers/patient-deleted.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(kafkaService: KafkaService)\n                    \n                \n                        \n                            \n                                Defined in src/patients/events/handlers/patient-deleted.handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kafkaService\n                                                  \n                                                        \n                                                                        KafkaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: PatientDeletedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/events/handlers/patient-deleted.handler.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PatientDeletedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { KafkaService } from 'src/patients/services/kafka.service';\nimport { PatientDeletedEvent } from '../impl/patient-deleted.event';\n\n@EventsHandler(PatientDeletedEvent)\nexport class PatientDeletedHandler\n  implements IEventHandler\n{\n  constructor(private kafkaService: KafkaService) {}\n  handle(event: PatientDeletedEvent) {\n    const body = {eventType: 'PatientDeletedEvent',}\n    this.kafkaService.publish(event.key, body)\n    Logger.log(event.key, 'PatientDeletedEvent');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientDetails.html":{"url":"classes/PatientDetails.html","title":"class - PatientDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/dtos/patient.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/patients/dtos/patient.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/patients/dtos/patient.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ArgsType, Field, ID, ObjectType } from '@nestjs/graphql';\nimport * as mongoose from 'mongoose';\n\n\n@ObjectType()\n@ArgsType()\nexport class PatientId {\n  @Field((type) => ID, { nullable: true })      readonly _id!: mongoose.Types.ObjectId;\n}\n\n\n@ObjectType()\n@ArgsType()\nexport class PatientDetails {\n  @Field({ nullable: true })      readonly firstName: string;\n  \n  @Field({ nullable: true })      readonly lastName: string;\n\n  //When adding more options add them to here\n  //Also update Patient Schema and a bunch of other places\n  \n}\n\n\n@ObjectType()\n@ArgsType()\nexport class Patient extends PatientDetails {\n\n  @Field((type) => ID, { nullable: true }) readonly _id: mongoose.Types.ObjectId\n  \n  //Do not add fields to here unless they can not be params for creating a new patient\n}\n\n@ArgsType()\nexport class PatientUpdate extends PatientDetails {\n  @Field((type) => ID)                    readonly _id: mongoose.Types.ObjectId;\n}\n\n\n@ObjectType()\nexport class KafkaBodyDto extends Patient{\n  \n  @Field()            readonly eventType!: string;\n}\n@ObjectType()\nexport class EventDto {\n  @Field()                   readonly key: PatientId;\n  @Field()                   readonly body: KafkaBodyDto;\n  \n}\n\n\n\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientId.html":{"url":"classes/PatientId.html","title":"class - PatientId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/dtos/patient.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/patients/dtos/patient.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ArgsType, Field, ID, ObjectType } from '@nestjs/graphql';\nimport * as mongoose from 'mongoose';\n\n\n@ObjectType()\n@ArgsType()\nexport class PatientId {\n  @Field((type) => ID, { nullable: true })      readonly _id!: mongoose.Types.ObjectId;\n}\n\n\n@ObjectType()\n@ArgsType()\nexport class PatientDetails {\n  @Field({ nullable: true })      readonly firstName: string;\n  \n  @Field({ nullable: true })      readonly lastName: string;\n\n  //When adding more options add them to here\n  //Also update Patient Schema and a bunch of other places\n  \n}\n\n\n@ObjectType()\n@ArgsType()\nexport class Patient extends PatientDetails {\n\n  @Field((type) => ID, { nullable: true }) readonly _id: mongoose.Types.ObjectId\n  \n  //Do not add fields to here unless they can not be params for creating a new patient\n}\n\n@ArgsType()\nexport class PatientUpdate extends PatientDetails {\n  @Field((type) => ID)                    readonly _id: mongoose.Types.ObjectId;\n}\n\n\n@ObjectType()\nexport class KafkaBodyDto extends Patient{\n  \n  @Field()            readonly eventType!: string;\n}\n@ObjectType()\nexport class EventDto {\n  @Field()                   readonly key: PatientId;\n  @Field()                   readonly body: KafkaBodyDto;\n  \n}\n\n\n\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PatientInterface.html":{"url":"interfaces/PatientInterface.html","title":"interface - PatientInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PatientInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/interfaces/patient.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose';\n\nexport interface PatientInterface extends Document {\n    readonly firstName: string;\n    readonly lastName: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientModel.html":{"url":"classes/PatientModel.html","title":"class - PatientModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/models/patient.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPatient\n                            \n                            \n                                deletePatient\n                            \n                            \n                                setData\n                            \n                            \n                                updatePatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string | undefined)\n                    \n                \n                        \n                            \n                                Defined in src/patients/models/patient.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPatient\n                        \n                    \n                \n            \n            \n                \ncreatePatient()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/models/patient.model.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletePatient\n                        \n                    \n                \n            \n            \n                \ndeletePatient()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/models/patient.model.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(key, body)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/models/patient.model.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePatient\n                        \n                    \n                \n            \n            \n                \nupdatePatient()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/models/patient.model.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    Indexable\n        \n            \n                \n                    \n                        [x: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/patients/models/patient.model.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from '@nestjs/cqrs';\nimport { PatientCreatedEvent } from '../events/impl/patient-created.event';\nimport { PatientDeletedEvent } from '../events/impl/patient-deleted.event';\nimport { PatientUpdatedEvent } from '../events/impl/patient-updated.event';\nimport { Logger } from '@nestjs/common';\nimport { ObjectType } from '@nestjs/graphql';\n\n\n\nexport class PatientModel extends AggregateRoot {\n  [x: string]: any;\n  \n  constructor(private readonly id: string | undefined ) {\n    super();\n    \n  }\n  \n  setData(key, body) {\n    this.key = key;\n    this.body = body;\n    \n  }\n\n  createPatient() {\n    // Call to the event passing in the parts\n    this.apply(new PatientCreatedEvent(this.key, this.body));\n  }\n\n  updatePatient() {\n    this.apply(new PatientUpdatedEvent(this.key, this.body));\n  }\n\n  deletePatient() {\n    this.apply(new PatientDeletedEvent(this.key));\n  }\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientRepository.html":{"url":"injectables/PatientRepository.html","title":"injectable - PatientRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/repository/patient.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPatient\n                            \n                            \n                                    Async\n                                deletePatient\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                updatePatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPatient(key, body)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/repository/patient.repository.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deletePatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePatient(key)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/repository/patient.repository.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/repository/patient.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePatient(key, body)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/repository/patient.repository.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { KafkaService } from './../../kafka/src/kafka.service';\nimport { Injectable, Body, Logger } from '@nestjs/common';\nimport { PatientModel } from '../models/patient.model';\n\n@Injectable()\nexport class PatientRepository {\n  // Call from command handler to put the parts together\n  async createPatient(key, body) {\n    // Construct patient based on patientModel\n    const patient = new PatientModel(undefined);\n    patient.setData(key, body);\n    patient.createPatient();\n    // returns to command handler\n    return patient;\n  }\n\n  async updatePatient(key, body) {\n    \n    const patient = new PatientModel(key);\n    patient.setData(key, body);\n    patient.updatePatient();\n    return patient;\n  }\n\n  async deletePatient(key) {\n    const patient = new PatientModel(key);\n    patient.setData(key, null);\n    patient.deletePatient();\n    return patient;\n  }\n\n  async findAll(): Promise {\n    Logger.log('At repository');\n   const patient = new PatientModel(undefined);\n    await patient.findAllPatients();\n    \n    return [patient];\n  }\n\n \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientResolver.html":{"url":"classes/PatientResolver.html","title":"class - PatientResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/patients.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                kafkaService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPatient\n                            \n                            \n                                    Async\n                                deletePatient\n                            \n                            \n                                    Async\n                                findEventStream\n                            \n                            \n                                    Async\n                                findPatients\n                            \n                            \n                                    Async\n                                updatePatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(patientsService: PatientsService, mongooseService: MongooseService)\n                    \n                \n                        \n                            \n                                Defined in src/patients/patients.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patientsService\n                                                  \n                                                        \n                                                                        PatientsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mongooseService\n                                                  \n                                                        \n                                                                        MongooseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        kafkaService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KafkaService\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/patients.resolver.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPatient(args: Patient)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {name: 'createPatient'})\n                \n            \n\n            \n                \n                    Defined in src/patients/patients.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deletePatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePatient(args: PatientId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {name: 'deletePatient'})\n                \n            \n\n            \n                \n                    Defined in src/patients/patients.resolver.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                PatientId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findEventStream\n                        \n                    \n                \n            \n            \n                \n                    \n                    findEventStream(args: PatientId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Subscription(undefined, {name: 'findEventStream'})\n                \n            \n\n            \n                \n                    Defined in src/patients/patients.resolver.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                PatientId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findPatients\n                        \n                    \n                \n            \n            \n                \n                    \n                    findPatients(args: Patient)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'findPatients'})\n                \n            \n\n            \n                \n                    Defined in src/patients/patients.resolver.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePatient(args: PatientUpdate)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {name: 'updatePatient'})\n                \n            \n\n            \n                \n                    Defined in src/patients/patients.resolver.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                PatientUpdate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { KafkaService } from './services/kafka.service';\nimport { exception } from 'console';\nimport { MongooseService } from './services/mongoose.service';\nimport { ApiResponse } from '@nestjs/swagger';\nimport { Patient, PatientDetails, PatientId, PatientUpdate, KafkaBodyDto } from './dtos/patient.dto';\nimport { PatientsService } from './services/patients.service';\nimport * as mongoose from 'mongoose';\nimport { Args, Mutation, Query, Resolver, Subscription } from '@nestjs/graphql';\nimport { argsToArgsConfig } from 'graphql/type/definition';\nimport { ObjectId } from 'mongodb';\nimport { UserInputError } from 'apollo-server-express';\n\n@Resolver()\nexport class PatientResolver {\n  constructor(private readonly patientsService: PatientsService, \n     private readonly mongooseService: MongooseService) {\n      this.kafkaService  = new KafkaService();\n     }\n     kafkaService: KafkaService \n\n\n  // *****************************************\n  // *********  Query Patient View   *********\n  // *****************************************\n\n     @Query(returns => [Patient], {name: 'findPatients'})\n     async findPatients(@Args()args: Patient): Promise{\n       return  this.mongooseService.find(args);\n     }\n// TODO not working yet\n     @Subscription(returns => KafkaBodyDto, {name: 'findEventStream'})\n     async findEventStream(@Args()args: PatientId): Promise{\n       return this.kafkaService.findEventStream(args)\n     }\n\n\n  // *****************************************\n  // *********  Create New Patient   *********\n  // *****************************************\n\n  @Mutation(returns => PatientId, {name: 'createPatient'})\n  async createPatient(@Args()args: Patient): Promise{\n    const key: PatientId = {\n    _id: mongoose.mongo.ObjectId.createFromTime(Date.now()),}\n    this.patientsService.createPatient(key, args);\n    return key\n  }\n\n  // *****************************************\n  // *********    Update Patient     *********\n  // *****************************************\n  @Mutation(returns => PatientId, {name: 'updatePatient'})\n  async updatePatient(@Args()args: PatientUpdate ): Promise{\n    const key: PatientId = {\n    _id: args._id}\n    const body: PatientDetails = args\n    this.patientsService.updatePatient(key, body);\n    return key\n  }\n\n  // // *****************************************\n  // // *********    Delete Patient     *********\n  // // *****************************************\n  @Mutation(returns => PatientId, {name: 'deletePatient'})\n  async deletePatient(@Args()args: PatientId ): Promise{\n    if(!mongoose.isValidObjectId(args._id)){\n      throw new UserInputError('Not a valid id', {\n        argumentName: '_id'\n      })\n    }\n    this.patientsService.deletePatient(args);\n    return args\n  }\n\n  // /* TODO: List Patients */\n  // /*--------------------------------------------*/\n  // @ApiResponse({ status: 200, description: 'List Patients.' })\n  // @Get()\n  // async findPatients(): Promise {\n  //   return this.patientsService.findAllPatients();\n  // }\n\n  // /* TODO: Find Patient */\n  // /*--------------------------------------------*/\n  // @ApiResponse({ status: 200, description: 'Get Patient.' })\n  // @Get(':patientId')\n  // async findOnePatient(@Param() patientId: PatientId) {\n  //   return this.patientsService.findAllPatients();\n  // }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientSagas.html":{"url":"injectables/PatientSagas.html","title":"injectable - PatientSagas","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientSagas\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/sagas/patient.saga.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, } from '@nestjs/common';\n\n@Injectable()\nexport class PatientSagas {\n  \n  // @Saga()\n  // patientCreated = (events$: Observable): Observable => {\n  //   return events$.pipe(\n  //     ofType(PatientCreatedEvent),\n  //     map((event: PatientCreatedEvent) => {\n  //       const recordId: {_id: mongoose.Types.ObjectId} = {_id: event.body.patientId}\n  //       const sendPackage = {...recordId, ...event.body };\n  //       Logger.log(sendPackage, 'PatientSaga');\n  //       // this.kafkaService.bridgeEventsTo()\n  //       return new CreatePatientViewCommand(sendPackage);\n  //     }),\n  //   );\n  // };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientUpdate.html":{"url":"classes/PatientUpdate.html","title":"class - PatientUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/dtos/patient.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PatientDetails\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _id\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/patients/dtos/patient.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PatientDetails\n\n                            \n                        \n                    \n                        \n                                Defined in         PatientDetails:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PatientDetails\n\n                            \n                        \n                    \n                        \n                                Defined in         PatientDetails:18\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ArgsType, Field, ID, ObjectType } from '@nestjs/graphql';\nimport * as mongoose from 'mongoose';\n\n\n@ObjectType()\n@ArgsType()\nexport class PatientId {\n  @Field((type) => ID, { nullable: true })      readonly _id!: mongoose.Types.ObjectId;\n}\n\n\n@ObjectType()\n@ArgsType()\nexport class PatientDetails {\n  @Field({ nullable: true })      readonly firstName: string;\n  \n  @Field({ nullable: true })      readonly lastName: string;\n\n  //When adding more options add them to here\n  //Also update Patient Schema and a bunch of other places\n  \n}\n\n\n@ObjectType()\n@ArgsType()\nexport class Patient extends PatientDetails {\n\n  @Field((type) => ID, { nullable: true }) readonly _id: mongoose.Types.ObjectId\n  \n  //Do not add fields to here unless they can not be params for creating a new patient\n}\n\n@ArgsType()\nexport class PatientUpdate extends PatientDetails {\n  @Field((type) => ID)                    readonly _id: mongoose.Types.ObjectId;\n}\n\n\n@ObjectType()\nexport class KafkaBodyDto extends Patient{\n  \n  @Field()            readonly eventType!: string;\n}\n@ObjectType()\nexport class EventDto {\n  @Field()                   readonly key: PatientId;\n  @Field()                   readonly body: KafkaBodyDto;\n  \n}\n\n\n\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientUpdatedEvent.html":{"url":"classes/PatientUpdatedEvent.html","title":"class - PatientUpdatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientUpdatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/events/impl/patient-updated.event.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                body\n                            \n                            \n                                    Public\n                                    Readonly\n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: PatientId, body: PatientDetails)\n                    \n                \n                        \n                            \n                                Defined in src/patients/events/impl/patient-updated.event.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        PatientId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        PatientDetails\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientDetails\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/events/impl/patient-updated.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientId\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/events/impl/patient-updated.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IEvent } from '@nestjs/cqrs';\nimport { PatientId, PatientDetails } from './../../dtos/patient.dto';\n\nexport class PatientUpdatedEvent implements IEvent {\n  constructor(\n    public readonly key: PatientId,\n    public readonly body: PatientDetails,\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientUpdatedHandler.html":{"url":"classes/PatientUpdatedHandler.html","title":"class - PatientUpdatedHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientUpdatedHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/events/handlers/patient-updated.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                kafkaService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/patients/events/handlers/patient-updated.handler.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        kafkaService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KafkaService\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/events/handlers/patient-updated.handler.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: PatientUpdatedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/events/handlers/patient-updated.handler.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PatientUpdatedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { KafkaService } from '../../services/kafka.service';\nimport { PatientUpdatedEvent } from '../impl/patient-updated.event';\n\n@EventsHandler(PatientUpdatedEvent)\nexport class PatientUpdatedHandler\n  implements IEventHandler\n{private kafkaService: KafkaService\n  constructor() {\n     this.kafkaService = new KafkaService()\n  }\n   \n  \n  handle(event: PatientUpdatedEvent) {\n    const { key } = event;\n    const body = {\n      ...event.body,\n      eventType: 'PatientUpdatedEvent',\n    };\n    Logger.log(key, \"CommandHandler\")\n    Logger.log(body, \"CommandHandler\")\n    this.kafkaService.publish(key, body);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientView.html":{"url":"classes/PatientView.html","title":"class - PatientView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/models/patient-view.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPatientView\n                            \n                            \n                                deletePatientView\n                            \n                            \n                                setData\n                            \n                            \n                                updatePatientView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/patients/models/patient-view.model.ts:10\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPatientView\n                        \n                    \n                \n            \n            \n                \ncreatePatientView()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/models/patient-view.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletePatientView\n                        \n                    \n                \n            \n            \n                \ndeletePatientView()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/models/patient-view.model.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(key?, body?)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/models/patient-view.model.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePatientView\n                        \n                    \n                \n            \n            \n                \nupdatePatientView()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/models/patient-view.model.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    Indexable\n        \n            \n                \n                    \n                        [x: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/patients/models/patient-view.model.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import { AggregateRoot } from '@nestjs/cqrs';\nimport { PatientViewUpdatedEvent } from '../events/impl/patient-view-updated.event';\nimport { PatientViewCreatedEvent } from '../events/impl/patient-view-created.event';\nimport { PatientViewDeletedEvent } from '../events/impl/patient-view-deleted.event';\nimport { Logger } from '@nestjs/common';\n// import { PatientViewDeletedEvent } from '../events/impl/patient-deleted.event';\n// import { PatientViewUpdatedEvent } from '../events/impl/patient-updated.event';\n\nexport class PatientView extends AggregateRoot {\n  [x: string]: any;\n\n  constructor() {\n    super();\n  }\n\n  setData(key?, body?) {\n    this.body = body;\n    this.updateBody = body;\n    this.key = key;\n    this.patientDb = {\n      _id: this.key._id,\n      firstName: this.body.firstName,\n      lastName: this.body.lastName,\n    };\n    // this.patentDbUpdate = {\n    //   firstName: this.body.firstName,\n    //   lastName: this.body.lastName,\n    //   patientId: this.body.patientId,\n    // }\n  }\n\n  createPatientView() {\n    // Call to the event passing in the parts\n    Logger.log(this.key, \"PatientViewModel.createPatientView\")\n    this.apply(new PatientViewCreatedEvent(this.patientDb));\n  }\n\n  updatePatientView() {\n    Logger.log(this.key, \"PatientViewModel.updatePatientView\")\n    this.apply(new PatientViewUpdatedEvent(this.key, this.patientDb));\n  }\n\n  deletePatientView() {\n    Logger.log(this.key, \"PatientViewModel.deletePatientView\")\n    this.apply(new PatientViewDeletedEvent(this.key));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientViewConsumer.html":{"url":"injectables/PatientViewConsumer.html","title":"injectable - PatientViewConsumer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientViewConsumer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/consumers/patient.consumers.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                finishedBooting\n                            \n                            \n                                    Private\n                                kafkaService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPatientView\n                            \n                            \n                                    Async\n                                deletePatientView\n                            \n                            \n                                onModuleDestroy\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                startConsuming\n                            \n                            \n                                    Async\n                                updatePatientView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(patientsService: PatientsService)\n                    \n                \n                        \n                            \n                                Defined in src/patients/consumers/patient.consumers.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patientsService\n                                                  \n                                                        \n                                                                        PatientsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPatientView\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPatientView(parsed: EventDto)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/consumers/patient.consumers.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parsed\n                                    \n                                                EventDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deletePatientView\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePatientView(parsed: EventDto)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/consumers/patient.consumers.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parsed\n                                    \n                                                EventDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \nonModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/consumers/patient.consumers.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/consumers/patient.consumers.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        startConsuming\n                        \n                    \n                \n            \n            \n                \n                    \n                    startConsuming()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/consumers/patient.consumers.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePatientView\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePatientView(parsed: EventDto)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/consumers/patient.consumers.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parsed\n                                    \n                                                EventDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        finishedBooting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/patients/consumers/patient.consumers.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        kafkaService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KafkaService\n\n                    \n                \n                \n                    \n                        Default value : new KafkaService()\n                    \n                \n                    \n                        \n                                Defined in src/patients/consumers/patient.consumers.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { KafkaService } from '../services/kafka.service';\nimport { EventDto, Patient } from '../dtos/patient.dto';\nimport { PatientsService } from '../services/patients.service';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { OnModuleDestroy, OnModuleInit } from '@nestjs/common';\nimport * as mongoose from 'mongoose';\nimport { Subject } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { exception } from 'console';\nimport { MongoExceptionConverter } from '@mikro-orm/mongodb/MongoExceptionConverter';\n\n@Injectable()\nexport class PatientViewConsumer implements OnModuleDestroy, OnModuleInit {\n  constructor(\n    private patientsService: PatientsService,\n    \n  ) {}\n  private kafkaService: KafkaService = new KafkaService();\n  onModuleDestroy() {}\n  onModuleInit() {\n    this.startConsuming();\n  }\n  private finishedBooting: Boolean = false;\n\n  public async startConsuming() {\n    const eventStream = new Subject();\n\n    this.kafkaService.createConsumer();\n    this.kafkaService.bridgeEventsTo(eventStream);\n    Logger.log(this.kafkaService);\n    eventStream.subscribe((parsed: EventDto) => {\n      Logger.log(parsed.body.eventType, 'EventType');\n      switch (parsed.body.eventType) {\n        case 'PatientCreatedEvent': this.createPatientView(parsed); break;\n        case 'PatientUpdatedEvent': this.updatePatientView(parsed); break;\n        case 'PatientDeletedEvent': this.deletePatientView(parsed); break;\n      }\n    });\n  }\n\n  async createPatientView(parsed: EventDto): Promise {\n    try {\n      if (!mongoose.isValidObjectId(parsed.key._id)) {\n        throw new Error(\n          'The Key in the message stream does not hold a valid ObjectId',\n        );\n      }\n\n      Logger.log(parsed, 'CreatePatientViewEvent - Initiated');\n      return this.patientsService.createPatientView(parsed);\n    } catch (err) {\n      Logger.error(err, 'PatientConsumer.createPatientView');\n    }\n  }\n\n  async updatePatientView(parsed: EventDto): Promise {\n    try {\n      if (!mongoose.isValidObjectId(parsed.key._id)) {\n        throw new Error(\n          'The Key in the message stream does not hold a valid ObjectId',\n        );\n      }\n      Logger.log(parsed, 'UpdatePatientViewEvent - Initiated');\n      return this.patientsService.updatePatientView(parsed);\n\n\n\n    } catch (err) {\n      Logger.error(err, 'PatientConsumer.updatePatientView');\n    }\n  }\n\n  async deletePatientView(parsed: EventDto): Promise {\n    try {\n      if (!mongoose.isValidObjectId(parsed.key._id)) {\n        throw new Error(\n          'The Key in the message stream does not hold a valid ObjectId',\n        );\n      }\n      Logger.log(parsed, 'DeletePatientViewEvent - Initiated');\n      return this.patientsService.deletePatientView(parsed);\n\n\n\n    } catch (err) {\n      Logger.error(err, 'PatientConsumer.deletePatientView');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientViewCreatedEvent.html":{"url":"classes/PatientViewCreatedEvent.html","title":"class - PatientViewCreatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientViewCreatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/events/impl/patient-view-created.event.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                patientDb\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(patientDb: Patient)\n                    \n                \n                        \n                            \n                                Defined in src/patients/events/impl/patient-view-created.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patientDb\n                                                  \n                                                        \n                                                                        Patient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        patientDb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/events/impl/patient-view-created.event.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IEvent } from '@nestjs/cqrs';\nimport { Logger } from '@nestjs/common';\nimport { Patient } from '../../dtos/patient.dto';\n\n// From Model finding sends to event handler\nexport class PatientViewCreatedEvent implements IEvent {\n  constructor(\n    public readonly patientDb: Patient,\n  ) {\n    Logger.log(patientDb, 'PatientViewCreatedEvent')\n  }\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientViewCreatedHandler.html":{"url":"classes/PatientViewCreatedHandler.html","title":"class - PatientViewCreatedHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientViewCreatedHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/events/handlers/patient-view-created.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mongooseService: MongooseService)\n                    \n                \n                        \n                            \n                                Defined in src/patients/events/handlers/patient-view-created.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mongooseService\n                                                  \n                                                        \n                                                                        MongooseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: PatientViewCreatedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/events/handlers/patient-view-created.handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PatientViewCreatedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Patient } from './../../dtos/patient.dto';\nimport { MongooseService } from './../../services/mongoose.service';\n\nimport { KafkaService } from '../../services/kafka.service';\n\nimport { Logger } from '@nestjs/common';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PatientViewCreatedEvent } from '../impl/patient-view-created.event';\n\n// Turns the data to an event\n@EventsHandler(PatientViewCreatedEvent)\nexport class PatientViewCreatedHandler\n  implements IEventHandler\n{\n  constructor(private mongooseService: MongooseService) {}\n\n  handle(event: PatientViewCreatedEvent) {\n    // const typedBody: Patient = {\n    //   ...event.patientDb,\n    // };\n    Logger.log(event.patientDb, 'PatientViewCreatedHandler');\n\n    this.mongooseService.create(event.patientDb);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientViewDeletedEvent.html":{"url":"classes/PatientViewDeletedEvent.html","title":"class - PatientViewDeletedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientViewDeletedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/events/impl/patient-view-deleted.event.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key)\n                    \n                \n                        \n                            \n                                Defined in src/patients/events/impl/patient-view-deleted.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        key\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/patients/events/impl/patient-view-deleted.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IEvent } from '@nestjs/cqrs';\nimport { Logger } from '@nestjs/common';\nimport { Patient } from '../../dtos/patient.dto';\n\n// From Model finding sends to event handler\nexport class PatientViewDeletedEvent implements IEvent {\n  constructor(public readonly key) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientViewDeletedHandler.html":{"url":"classes/PatientViewDeletedHandler.html","title":"class - PatientViewDeletedHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientViewDeletedHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/events/handlers/patient-view-deleted.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mongooseService: MongooseService)\n                    \n                \n                        \n                            \n                                Defined in src/patients/events/handlers/patient-view-deleted.handler.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mongooseService\n                                                  \n                                                        \n                                                                        MongooseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: PatientViewDeletedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/events/handlers/patient-view-deleted.handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PatientViewDeletedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PatientId, PatientDetails } from './../../dtos/patient.dto';\nimport { Patient } from '../../dtos/patient.dto';\nimport { MongooseService } from '../../services/mongoose.service';\n\nimport { KafkaService } from '../../services/kafka.service';\n\nimport { Logger } from '@nestjs/common';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PatientViewDeletedEvent } from '../impl/patient-view-deleted.event';\n\n\n// Turns the data to an event\n@EventsHandler(PatientViewDeletedEvent)\nexport class PatientViewDeletedHandler\n  implements IEventHandler\n{ \n  constructor(private mongooseService: MongooseService) {}\n\n  handle(event: PatientViewDeletedEvent) {\n    Logger.log({...event.key}, 'PatientViewDeletedHandler')\n\n  \n    const key: PatientId = {\n      ...event.key\n    }\n    Logger.log(key, 'PatientViewDeletedHandler')\n\n    this.mongooseService.deleteOne(key)\n  }\n}\n  \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientViewRepository.html":{"url":"injectables/PatientViewRepository.html","title":"injectable - PatientViewRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientViewRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/repository/patient-view.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPatientView\n                            \n                            \n                                    Async\n                                deletePatientView\n                            \n                            \n                                    Async\n                                updatePatientView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPatientView\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPatientView(key, body)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/repository/patient-view.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deletePatientView\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePatientView(key, body)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/repository/patient-view.repository.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePatientView\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePatientView(key, body)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/repository/patient-view.repository.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EventDto } from './../dtos/patient.dto';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { Patient } from '../dtos/patient.dto';\nimport { PatientView } from '../models/patient-view.model';\n\n@Injectable()\nexport class PatientViewRepository {\n  // Call from command handler to put the parts together\n  async createPatientView(key, body) {\n    // Construct patientview based on patientViewModel\n    const patientView = new PatientView();\n    patientView.setData(key, body);\n    patientView.createPatientView();\n    // returns to command handler\n    Logger.log(key, \"Repository\")\n    return patientView;\n  }\n\n  async updatePatientView(key, body) {\n    Logger.log(body, 'Repository.updatePatient')\n    const patientView = new PatientView();\n    patientView.setData(key, body);\n    patientView.updatePatientView();\n    return patientView;\n  }\n\n  async deletePatientView(key, body) {\n    Logger.log(key, 'Repository.deletePatient')\n    const patientView = new PatientView();\n    patientView.setData(key, body);\n    patientView.deletePatientView();\n    return patientView;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientViewUpdatedEvent.html":{"url":"classes/PatientViewUpdatedEvent.html","title":"class - PatientViewUpdatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientViewUpdatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/events/impl/patient-view-updated.event.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                body\n                            \n                            \n                                    Public\n                                    Readonly\n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key, body)\n                    \n                \n                        \n                            \n                                Defined in src/patients/events/impl/patient-view-updated.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        body\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/patients/events/impl/patient-view-updated.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        key\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/patients/events/impl/patient-view-updated.event.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IEvent } from '@nestjs/cqrs';\nimport { Logger } from '@nestjs/common';\nimport { Patient } from '../../dtos/patient.dto';\n\n// From Model finding sends to event handler\nexport class PatientViewUpdatedEvent implements IEvent {\n  constructor(\n    public readonly key,\n    public readonly body\n    \n  ) {\n  }\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientViewUpdatedHandler.html":{"url":"classes/PatientViewUpdatedHandler.html","title":"class - PatientViewUpdatedHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientViewUpdatedHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/events/handlers/patient-view-updated.handle.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mongooseService: MongooseService)\n                    \n                \n                        \n                            \n                                Defined in src/patients/events/handlers/patient-view-updated.handle.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mongooseService\n                                                  \n                                                        \n                                                                        MongooseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: PatientViewUpdatedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/events/handlers/patient-view-updated.handle.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                PatientViewUpdatedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PatientId, PatientDetails } from './../../dtos/patient.dto';\nimport { Patient } from '../../dtos/patient.dto';\nimport { MongooseService } from '../../services/mongoose.service';\n\nimport { KafkaService } from '../../services/kafka.service';\n\nimport { Logger } from '@nestjs/common';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PatientViewUpdatedEvent } from '../impl/patient-view-updated.event';\n\n\n// Turns the data to an event\n@EventsHandler(PatientViewUpdatedEvent)\nexport class PatientViewUpdatedHandler\n  implements IEventHandler\n{ \n  constructor(private mongooseService: MongooseService) {}\n\n  handle(event: PatientViewUpdatedEvent) {\n    Logger.log({...event.body}, 'PatientViewUpdatedHandler')\n\n    const body: PatientDetails = {\n      ...event.body\n    }\n    const key: PatientId = {\n      ...event.key\n    }\n    Logger.log(key, 'PatientViewUpdatedHandler')\n    Logger.log(body, 'PatientViewUpdateHandler')\n\n    this.mongooseService.updateOne(key, body)\n  }\n}\n  \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PatientsModule.html":{"url":"modules/PatientsModule.html","title":"module - PatientsModule","body":"\n                   \n\n\n\n\n    Modules\n    PatientsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PatientsModule\n\n\n\ncluster_PatientsModule_imports\n\n\n\ncluster_PatientsModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nPatientsModule\n\nPatientsModule\n\nPatientsModule -->\n\nDatabaseModule->PatientsModule\n\n\n\n\n\nPatientRepository\n\nPatientRepository\n\nPatientsModule -->\n\nPatientRepository->PatientsModule\n\n\n\n\n\nPatientSagas\n\nPatientSagas\n\nPatientsModule -->\n\nPatientSagas->PatientsModule\n\n\n\n\n\nPatientViewConsumer\n\nPatientViewConsumer\n\nPatientsModule -->\n\nPatientViewConsumer->PatientsModule\n\n\n\n\n\nPatientViewRepository\n\nPatientViewRepository\n\nPatientsModule -->\n\nPatientViewRepository->PatientsModule\n\n\n\n\n\nPatientsService\n\nPatientsService\n\nPatientsModule -->\n\nPatientsService->PatientsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/patients/patient.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PatientRepository\n                        \n                        \n                            PatientSagas\n                        \n                        \n                            PatientViewConsumer\n                        \n                        \n                            PatientViewRepository\n                        \n                        \n                            PatientsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PatientController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { CqrsModule } from '@nestjs/cqrs';\n\nimport { DatabaseModule } from './database.module';\n\nimport { KafkaService } from './services/kafka.service';\nimport { MongooseService } from './services/mongoose.service';\n\nimport { PatientViewRepository } from './repository/patient-view.repository';\n\n\n\n\nimport { PatientsService } from './services/patients.service';\n\n\nimport { PatientController } from './patients.controller';\nimport { PatientRepository } from './repository/patient.repository';\nimport { CommandHandlers } from './commands/handlers/index';\nimport { EventHandlers } from './events/handlers/index';\nimport { QueryHandlers } from './queries/handlers/index';\nimport { PatientSagas } from './sagas/patient.saga';\nimport { PatientsProviders } from './providers/patients.provider';\nimport { databaseProviders } from './providers/database.providers';\nimport { Consumers } from './consumers';\nimport { PatientViewConsumer } from './consumers/patient.consumers';\nimport { PatientResolver } from './patients.resolver';\n\n@Module({\n  imports: [\n    CqrsModule,\n    DatabaseModule\n  ],\n  controllers: [PatientController],\n  providers: [\n    // KafkaService,\n    PatientsService,\n    // MongooseService,\n    PatientSagas,\n    ...CommandHandlers,\n    ...EventHandlers,\n    ...QueryHandlers,\n    // ...PatientsProviders,\n    ...databaseProviders,\n    ...Consumers,\n    PatientRepository,\n    PatientViewRepository,\n    PatientViewConsumer,\n    PatientResolver,\n  ],\n})\nexport class PatientsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientsService.html":{"url":"injectables/PatientsService.html","title":"injectable - PatientsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/services/patients.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPatient\n                            \n                            \n                                    Async\n                                createPatientView\n                            \n                            \n                                    Async\n                                deletePatient\n                            \n                            \n                                    Async\n                                deletePatientView\n                            \n                            \n                                    Async\n                                findAllPatients\n                            \n                            \n                                    Async\n                                updatePatient\n                            \n                            \n                                    Async\n                                updatePatientView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/patients/services/patients.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPatient(key: PatientId, body: PatientDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/patients.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                PatientId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                PatientDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPatientView\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPatientView(patientDb: EventDto)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/patients.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientDb\n                                    \n                                                EventDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deletePatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePatient(key: PatientId)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/patients.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                PatientId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deletePatientView\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePatientView(patientDb: EventDto)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/patients.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientDb\n                                    \n                                                EventDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllPatients\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllPatients()\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/patients.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePatient\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePatient(key: PatientId, body: PatientDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/patients.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                PatientId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                PatientDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePatientView\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePatientView(patientDb: EventDto)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/services/patients.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientDb\n                                    \n                                                EventDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreatePatientViewCommand } from './../commands/impl/create-patient-view.command';\nimport { EventDto, PatientDetails, PatientId  } from './../dtos/patient.dto';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { CreatePatientCommand } from '../commands/impl/create-patient.command';\nimport { UpdatePatientCommand } from '../commands/impl/update-patient.command';\nimport { DeletePatientCommand } from '../commands/impl/delete-patient.command';\nimport { FindAllPatientsQuery } from '../queries/impl/find-all-patients.query';\nimport { UpdatePatientViewCommand } from '../commands/impl/update-patient-view.command';\nimport { DeletePatientViewCommand } from '../commands/impl/delete-patient-view.command';\n\n@Injectable()\nexport class PatientsService {\n  constructor(private commandBus: CommandBus, private queryBus: QueryBus) {}\n\n  // Passed in a patient from the controller\n  async createPatient(key: PatientId, body: PatientDetails) {\n    // Create Command and sending along the patient data\n    return await this.commandBus.execute(new CreatePatientCommand(key, body));\n  }\n\n  async updatePatient(key: PatientId, body: PatientDetails) {\n    return await this.commandBus.execute(new UpdatePatientCommand(key, body));\n  }\n\n  async deletePatient(key: PatientId) {\n    return await this.commandBus.execute(new DeletePatientCommand(key));\n  }\n\n  async findAllPatients() {\n    return await this.queryBus.execute(new FindAllPatientsQuery());\n  }\n\n  async createPatientView(patientDb: EventDto) {\n    Logger.log(patientDb);\n    return await this.commandBus.execute(\n      new CreatePatientViewCommand(patientDb),\n    );\n  }\n\n  async updatePatientView(patientDb: EventDto) {\n    Logger.log(patientDb);\n    return await this.commandBus.execute(\n      new UpdatePatientViewCommand(patientDb),\n    );\n  }\n\n  async deletePatientView(patientDb: EventDto) {\n    Logger.log(patientDb);\n    return await this.commandBus.execute(\n      new DeletePatientViewCommand(patientDb),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePatientCommand.html":{"url":"classes/UpdatePatientCommand.html","title":"class - UpdatePatientCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePatientCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/commands/impl/update-patient.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                body\n                            \n                            \n                                    Public\n                                    Readonly\n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: PatientId, body: PatientDetails)\n                    \n                \n                        \n                            \n                                Defined in src/patients/commands/impl/update-patient.command.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        PatientId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        PatientDetails\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientDetails\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/commands/impl/update-patient.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PatientId\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/commands/impl/update-patient.command.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from '@nestjs/cqrs';\nimport { PatientDetails, PatientId } from '../../dtos/patient.dto';\n\nexport class UpdatePatientCommand implements ICommand {\n  constructor(public readonly key: PatientId, public readonly body: PatientDetails) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePatientHandler.html":{"url":"classes/UpdatePatientHandler.html","title":"class - UpdatePatientHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePatientHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/commands/handlers/update-patient.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: PatientRepository, publisher: EventPublisher)\n                    \n                \n                        \n                            \n                                Defined in src/patients/commands/handlers/update-patient.handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        PatientRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdatePatientCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/commands/handlers/update-patient.handler.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdatePatientCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventPublisher, ICommandHandler, CommandHandler } from '@nestjs/cqrs';\nimport { UpdatePatientCommand } from '../impl/update-patient.command';\nimport { PatientRepository } from '../../repository/patient.repository';\nimport { Logger } from '@nestjs/common';\n\n@CommandHandler(UpdatePatientCommand)\nexport class UpdatePatientHandler\n  implements ICommandHandler\n{\n  constructor(\n    private readonly repository: PatientRepository,\n    private readonly publisher: EventPublisher,\n  ) {}\n\n  async execute(command: UpdatePatientCommand) {\n    Logger.log('Async UpdatePatientHandler...', 'UpdatePatientCommand');\n\n    const { body } = command;\n    const { key } = command;\n    const patient = this.publisher.mergeObjectContext(\n      await this.repository.updatePatient(key, body),\n    );\n    patient.commit();\n\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePatientViewCommand.html":{"url":"classes/UpdatePatientViewCommand.html","title":"class - UpdatePatientViewCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePatientViewCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/commands/impl/update-patient-view.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                eventDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventDto: EventDto)\n                    \n                \n                        \n                            \n                                Defined in src/patients/commands/impl/update-patient-view.command.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventDto\n                                                  \n                                                        \n                                                                        EventDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        eventDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventDto\n\n                    \n                \n                    \n                        \n                                Defined in src/patients/commands/impl/update-patient-view.command.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EventDto } from '../../dtos/patient.dto';\n\nimport { Logger } from '@nestjs/common';\nimport { ICommand } from '@nestjs/cqrs';\nimport { Patient } from '../../dtos/patient.dto';\n\nexport class UpdatePatientViewCommand implements ICommand {\n    // Receives patient from patientService and sends to command hand\n  constructor(public readonly eventDto: EventDto) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePatientViewHandler.html":{"url":"classes/UpdatePatientViewHandler.html","title":"class - UpdatePatientViewHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePatientViewHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patients/commands/handlers/update-patient-view.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: PatientViewRepository, publisher: EventPublisher)\n                    \n                \n                        \n                            \n                                Defined in src/patients/commands/handlers/update-patient-view.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        PatientViewRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdatePatientViewCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/patients/commands/handlers/update-patient-view.handler.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdatePatientViewCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PatientView } from '../../models/patient-view.model';\nimport { Observable } from 'rxjs';\n\nimport { EventPublisher, ICommandHandler, CommandHandler } from '@nestjs/cqrs';\nimport { UpdatePatientViewCommand } from '../impl/update-patient-view.command';\nimport { PatientViewRepository } from '../../repository/patient-view.repository';\nimport { Logger } from '@nestjs/common';\n\n@CommandHandler(UpdatePatientViewCommand)\nexport class UpdatePatientViewHandler\n  implements ICommandHandler\n{\n  constructor(private readonly repository: PatientViewRepository, private readonly publisher: EventPublisher,\n  ) {}\n  async execute(command: UpdatePatientViewCommand) {\n    const patientView: PatientView = this.publisher.mergeObjectContext(\n      await this.repository.updatePatientView(\n        command.eventDto.key,\n        command.eventDto.body,\n      ),\n    );\n    patientView.commit();\n\n  }\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config.ts\n            \n            variable\n            configs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config.ts\n            \n            variable\n            envDevelopmentName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patients/commands/handlers/create-patient-view.handler.ts\n            \n            class\n            CreatePatientViewHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/commands/handlers/create-patient.handler.ts\n            \n            class\n            CreatePatientHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patients/commands/handlers/delete-patient-view.handler.ts\n            \n            class\n            DeletePatientViewHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/commands/handlers/delete-patient.handler.ts\n            \n            class\n            DeletePatientHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/commands/handlers/index.ts\n            \n            variable\n            CommandHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patients/commands/handlers/update-patient-view.handler.ts\n            \n            class\n            UpdatePatientViewHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/commands/handlers/update-patient.handler.ts\n            \n            class\n            UpdatePatientHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/commands/impl/create-patient-view.command.ts\n            \n            class\n            CreatePatientViewCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/commands/impl/create-patient.command.ts\n            \n            class\n            CreatePatientCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patients/commands/impl/delete-patient-view.command.ts\n            \n            class\n            DeletePatientViewCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/commands/impl/delete-patient.command.ts\n            \n            class\n            DeletePatientCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/commands/impl/update-patient-view.command.ts\n            \n            class\n            UpdatePatientViewCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/commands/impl/update-patient.command.ts\n            \n            class\n            UpdatePatientCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patients/consumers/index.ts\n            \n            variable\n            Consumers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patients/consumers/patient.consumers.ts\n            \n            injectable\n            PatientViewConsumer\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/patients/dtos/patient.dto.ts\n            \n            class\n            EventDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/dtos/patient.dto.ts\n            \n            class\n            KafkaBodyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/patients/dtos/patient.dto.ts\n            \n            class\n            Patient\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patients/dtos/patient.dto.ts\n            \n            class\n            PatientDetails\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/dtos/patient.dto.ts\n            \n            class\n            PatientId\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/patients/dtos/patient.dto.ts\n            \n            class\n            PatientUpdate\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patients/dtos/patient.schema.ts\n            \n            variable\n            PatientSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patients/events/handlers/index.ts\n            \n            variable\n            EventHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patients/events/handlers/patient-created.handler.ts\n            \n            class\n            PatientCreatedHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patients/events/handlers/patient-deleted.handler.ts\n            \n            class\n            PatientDeletedHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/events/handlers/patient-updated.handler.ts\n            \n            class\n            PatientUpdatedHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patients/events/handlers/patient-view-created.handler.ts\n            \n            class\n            PatientViewCreatedHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/events/handlers/patient-view-deleted.handler.ts\n            \n            class\n            PatientViewDeletedHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/events/handlers/patient-view-updated.handle.ts\n            \n            class\n            PatientViewUpdatedHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/events/impl/patient-created.event.ts\n            \n            class\n            PatientCreatedEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patients/events/impl/patient-deleted.event.ts\n            \n            class\n            PatientDeletedEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/events/impl/patient-updated.event.ts\n            \n            class\n            PatientUpdatedEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patients/events/impl/patient-view-created.event.ts\n            \n            class\n            PatientViewCreatedEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/events/impl/patient-view-deleted.event.ts\n            \n            class\n            PatientViewDeletedEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/events/impl/patient-view-updated.event.ts\n            \n            class\n            PatientViewUpdatedEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patients/interfaces/patient.interface.ts\n            \n            interface\n            PatientInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/patients/models/patient-view.model.ts\n            \n            class\n            PatientView\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/patients/models/patient.model.ts\n            \n            class\n            PatientModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/patients/patients.controller.ts\n            \n            controller\n            PatientController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/patients/patients.resolver.ts\n            \n            class\n            PatientResolver\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/patients/providers/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patients/providers/patients.provider.ts\n            \n            variable\n            PatientsProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patients/queries/handlers/find-all-patients.handler.ts\n            \n            class\n            FindAllPatientsHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patients/queries/handlers/index.ts\n            \n            variable\n            QueryHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patients/queries/impl/find-all-patients.query.ts\n            \n            class\n            FindAllPatientsQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patients/repository/patient-view.repository.ts\n            \n            injectable\n            PatientViewRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patients/repository/patient.repository.ts\n            \n            injectable\n            PatientRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/patients/sagas/patient.saga.ts\n            \n            injectable\n            PatientSagas\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patients/services/kafka.service.ts\n            \n            injectable\n            KafkaService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/patients/services/mongoose.service.ts\n            \n            injectable\n            MongooseService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/patients/services/patients.service.ts\n            \n            injectable\n            PatientsService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mikro-orm/core : ^4.5.7\n        \n            @mikro-orm/mongodb : ^4.5.7\n        \n            @mikro-orm/nestjs : ^4.3.0\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.0.1\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/cqrs : ^8.0.0\n        \n            @nestjs/graphql : ^9.0.2\n        \n            @nestjs/microservices : ^8.0.6\n        \n            @nestjs/mongoose : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.0.9\n        \n            altair-express-middleware : ^4.0.9\n        \n            apollo-server-express : ^3.3.0\n        \n            geteventstore-promise : ^4.0.0\n        \n            graphql : ^15.5.1\n        \n            graphql-kafkajs-subscriptions : ^2.1.3\n        \n            kafkajs : ^1.15.0\n        \n            mongodb : ^4.1.0\n        \n            mongoose : ^5.13.7\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            uuid : ^8.3.2\n        \n            xml2js : ^0.4.23\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  Built with NestJS, Node.js, Apollo Graphql, KafkaJS and mongoDB\n\n\nDescription\nThis is the scafold for different microservices for the development of the VortusApp\nInstallation\n$ npm installSetup\nThe application requires a monogoDB database and a running Kafka cluster. \nFor Kafka a development environment can be started by following this quick start guide for Confluent Platform.\nFor mongoDB a quick start can be found here although it may be easier to spin up a cluster with mongoDB Atlas.\n\nDetails for these services need to be entered into a .env file in the root of the application with the following environmental variables\n```JSON\nKAFKA_BROKERS = localhost:9092\nKAFKA_CLIENT_ID = patients\nKAFKA_TOPIC = patients\nMONGODB_URL=mongodb://127.0.0.1:27017/patients\n```\n\n\nRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodSupport\nI really don't know what I am doing so if you see something blatantly stupid maybe let me know.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PatientsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_PatientsModule\n\n\n\ncluster_PatientsModule_providers\n\n\n\n\nPatientsModule\n\nPatientsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPatientsModule->AppModule\n\n\n\n\n\nKafkaService \n\nKafkaService \n\n\n\nMongooseService \n\nMongooseService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nPatientsModule -->\n\nDatabaseModule->PatientsModule\n\n\n\nKafkaService  -->\n\nDatabaseModule->KafkaService \n\n\n\nMongooseService  -->\n\nDatabaseModule->MongooseService \n\n\n\n\n\nKafkaService\n\nKafkaService\n\nDatabaseModule -->\n\nKafkaService->DatabaseModule\n\n\n\n\n\nMongooseService\n\nMongooseService\n\nDatabaseModule -->\n\nMongooseService->DatabaseModule\n\n\n\n\n\nPatientRepository\n\nPatientRepository\n\nPatientsModule -->\n\nPatientRepository->PatientsModule\n\n\n\n\n\nPatientSagas\n\nPatientSagas\n\nPatientsModule -->\n\nPatientSagas->PatientsModule\n\n\n\n\n\nPatientViewConsumer\n\nPatientViewConsumer\n\nPatientsModule -->\n\nPatientViewConsumer->PatientsModule\n\n\n\n\n\nPatientViewRepository\n\nPatientViewRepository\n\nPatientsModule -->\n\nPatientViewRepository->PatientsModule\n\n\n\n\n\nPatientsService\n\nPatientsService\n\nPatientsModule -->\n\nPatientsService->PatientsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CommandHandlers   (src/.../index.ts)\n                        \n                        \n                            config   (config.ts)\n                        \n                        \n                            configs   (config.ts)\n                        \n                        \n                            Consumers   (src/.../index.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            env   (config.ts)\n                        \n                        \n                            envDevelopmentName   (config.ts)\n                        \n                        \n                            EventHandlers   (src/.../index.ts)\n                        \n                        \n                            PatientSchema   (src/.../patient.schema.ts)\n                        \n                        \n                            PatientsProviders   (src/.../patients.provider.ts)\n                        \n                        \n                            QueryHandlers   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/patients/commands/handlers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CommandHandlers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  CreatePatientHandler,\n  UpdatePatientHandler,\n  DeletePatientHandler,\n  CreatePatientViewHandler,\n  UpdatePatientViewHandler,\n  DeletePatientViewHandler\n]\n                    \n                \n\n\n        \n    \n\n    config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { ...configs.base, ...configs[env] }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  base: {\n    ENV: env,\n    DEV: env === envDevelopmentName,\n    // General\n    NAME: process.env.APP_NAME || 'stream-cqrs',\n    TITLE: process.env.APP_TITLE || 'Users',\n    DESCRIPTION: process.env.APP_DESCRIPTION || 'Users API Microservice',\n    // API\n    PREFIX: process.env.APP_PREFIX || 'v1',\n    VERSION: process.env.APP_VERSION || '1.0',\n    API_EXPLORER_PATH: process.env.APP_API_EXPLORER_PATH || '/api',\n    // Server\n    HOST: process.env.APP_HOST || '0.0.0.0',\n    PORT: process.env.APP_PORT || 7070,\n    // Event Store\n    EVENT_STORE_SETTINGS: {\n      protocol: process.env.EVENT_STORE_PROTOCOL || 'http',\n      hostname: process.env.EVENT_STORE_HOSTNAME || '0.0.0.0',\n      tcpPort: process.env.EVENT_STORE_TCP_PORT || 1113,\n      httpPort: process.env.EVENT_STORE_HTTP_PORT || 2113,\n      credentials: {\n        username: process.env.EVENT_STORE_CREDENTIALS_USERNAME || 'admin',\n        password: process.env.EVENT_STORE_CREDENTIALS_PASSWORD || 'changeit',\n      },\n      poolOptions: {\n        min: process.env.EVENT_STORE_POOLOPTIONS_MIN || 1,\n        max: process.env.EVENT_STORE_POOLOPTIONS_MAX || 10,\n      },\n    },\n  },\n  development: {},\n  production: {\n    PORT: process.env.APP_PORT || 7071,\n  },\n  test: {\n    PORT: 7072,\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV || envDevelopmentName\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        envDevelopmentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'development'\n                    \n                \n\n\n        \n    \n\n    src/patients/consumers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Consumers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [PatientViewConsumer]\n                    \n                \n\n\n        \n    \n\n    src/patients/providers/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'DATABASE_CONNECTION',\n    useFactory: (): Promise =>\n      mongoose.connect(process.env.MONGODB_URL, {\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n      }),\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/patients/events/handlers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EventHandlers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  PatientCreatedHandler,\n  PatientUpdatedHandler,\n  PatientDeletedHandler,\n  PatientViewCreatedHandler,\n  PatientViewUpdatedHandler,\n  PatientViewDeletedHandler\n]\n                    \n                \n\n\n        \n    \n\n    src/patients/dtos/patient.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PatientSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  _id: mongoose.Types.ObjectId,\n  firstName: String,\n  lastName: String\n})\n                    \n                \n\n\n        \n    \n\n    src/patients/providers/patients.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PatientsProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'PATIENT_MODEL',\n    useFactory: (connection: Connection) =>\n      connection.model('PatientModel', PatientSchema),\n      inject: ['DATABASE_CONNECTION'],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/patients/queries/handlers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QueryHandlers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  FindAllPatientsHandler\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
